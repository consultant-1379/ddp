ingress:
    enabled: true
    annotations:
        kubernetes.io/ingress.class: "nginx"
        nginx.ingress.kubernetes.io/rewrite-target: /$1
        nginx.ingress.kubernetes.io/use-regex: "true"
    path: /grafana/?(.*)
    hosts:
        - GRAFANA_FQDN
    tls:
        - hosts:
            - GRAFANA_FQDN
          secretName: GRAFANA_HOST-tls

extraSecretMounts:
    - name: egadissuingca3-ca-mount
      secretName: egadissuingca3-ca
      defaultMode: 0444
      mountPath: /run/secrets/auth_generic_oauth
      readOnly: true
    # Currently no setting for CA used to when connecting to OAuth service
    # to get keys used to validate jwt login (jwk_set_url)
    # So we need to place the CA file in a directory where Go searches by default
    # https://go.dev/src/crypto/x509/root_linux.go
    - name: egadissuingca3-ca-jwt
      secretName: egadissuingca3-ca
      defaultMode: 0444
      mountPath: /etc/ssl/certs
      readOnly: true

extraVolumeMounts:
    - name: dashboards
      mountPath: /dashboards
      readOnly: true

extraVolumes:
  - name: dashboards
    existingClaim: dashboards

datasources:
  datasources.yaml:
    apiVersion: 1
    datasources:
    - name: ddpenm1
      type: prometheus
      url: http://promauth-ddpenm1.vm.svc.cluster.local/
      jsonData:
        tlsAuth: false
        tlsAuthWithCACert: false
        oauthPassThru: true
    - name: ddpenm2
      type: prometheus
      url: http://promauth-ddpenm2.vm.svc.cluster.local/
      jsonData:
        tlsAuth: false
        tlsAuthWithCACert: false
        oauthPassThru: true
    - name: ddpenm3
      type: prometheus
      url: http://promauth-ddpenm3.vm.svc.cluster.local/
      jsonData:
        tlsAuth: false
        tlsAuthWithCACert: false
        oauthPassThru: true
    - name: ddpenm5
      type: prometheus
      url: http://promauth-ddpenm5.vm.svc.cluster.local/
      jsonData:
        tlsAuth: false
        tlsAuthWithCACert: false
        oauthPassThru: true
    - name: ddpenm6
      type: prometheus
      url: http://promauth-ddpenm6.vm.svc.cluster.local/
      jsonData:
        tlsAuth: false
        tlsAuthWithCACert: false
        oauthPassThru: true
    - name: ddpenm7
      type: prometheus
      url: http://promauth-ddpenm7.vm.svc.cluster.local/
      jsonData:
        tlsAuth: false
        tlsAuthWithCACert: false
        oauthPassThru: true
    - name: ddpi
      type: prometheus
      url: http://promauth-ddpi.vm.svc.cluster.local/
      jsonData:
        tlsAuth: false
        tlsAuthWithCACert: false
        oauthPassThru: true
    - name: ddpeo
      type: prometheus
      url: http://promauth-ddpeo.vm.svc.cluster.local/
      jsonData:
        tlsAuth: false
        tlsAuthWithCACert: false
        oauthPassThru: true
    - name: ddp
      type: prometheus
      url: http://promauth-ddp.vm.svc.cluster.local/
      jsonData:
        tlsAuth: false
        tlsAuthWithCACert: false
        oauthPassThru: true
    - name: ddp2
      type: prometheus
      url: http://promauth-ddp2.vm.svc.cluster.local/
      jsonData:
        tlsAuth: false
        tlsAuthWithCACert: false
        oauthPassThru: true

dashboardProviders:
  dashboardproviders.yaml:
    apiVersion: 1
    providers:
    - name: 'default'
      orgId: 1
      folder: ''
      type: file
      disableDeletion: false
      editable: false
      options:
        path: /dashboards/top
        foldersFromFilesStructure: true

persistence:
  enabled: true
  type: statefulset
  storageClassName: hpe-3par10
  size: 100Gi

grafana.ini:
    server:
        root_url: https://GRAFANA_FQDN/grafana
    users:
      viewers_can_edit: true
    log:
        level: debug
    analytics:
        reporting_enabled: false
        enable_feedback_links: false
        check_for_updates: false
        check_for_plugin_updates: false
    security:
      disable_gravatar: true
    features:
      accessTokenExpirationCheck: true
    auth:
        disable_login_form: true
        disable_signout_menu: true
        oauth_allow_insecure_email_lookup: true
    auth.generic_oauth:
        enabled: true
        client_id: ddpsso
        client_secret: OAUTH2_CLIENT_SECRET
        api_url: https://DEX_FQDN/dex/userinfo
        auth_url: https://DEX_FQDN/dex/auth
        token_url: https://DEX_FQDN/dex/token
        tls_client_ca: /run/secrets/auth_generic_oauth/ca.crt
        scopes: openid profile email groups
        auto_login: true
        allow_assign_grafana_admin: true
        skip_org_role_sync: false
        groups_attribute_path: groups
        role_attribute_path: "contains(groups[*], 'DDP-LMI') && 'GrafanaAdmin' || 'Viewer'"
