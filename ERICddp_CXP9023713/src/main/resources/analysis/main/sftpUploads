#!/bin/bash

CONFIG_FILE=$1
SECURE_DIR=$2

LOCK_FILE=/tmp/sftpUploads.lock
exec 3>${LOCK_FILE}
flock --exclusive --nonblock 3
if [ $? -eq 1 ] ; then
    echo "$(date) WARNING: Already running"
    exit 0
fi

. ${CONFIG_FILE}

MIN_SEC_SINCE_MODIFIED=60

ANALYSIS_BIN=`dirname $0`
ANALYSIS_BIN=`cd ${ANALYSIS_BIN} ; cd .. ; pwd`

if [ -z "${SECURE_DIR}" ] ; then
    SECURE_DIR=${INCOMING_ROOT}/upload
fi

INCOMING_DATA_FILES=$(find ${SECURE_DIR} -name '*@DDC_D*.gz')

if [ -z "${INCOMING_DATA_FILES}" ]; then
    exit
fi

${ANALYSIS_BIN}/main/getSiteList -a > /data/tmp/siteList.sftp

for DATA_FILE in ${INCOMING_DATA_FILES}; do
    SECS_SINCE_MODIFIED=`${ANALYSIS_BIN}/main/lastModified ${DATA_FILE}`
    if [ $SECS_SINCE_MODIFIED -ge $MIN_SEC_SINCE_MODIFIED ]; then
        # Get the ftp username from the file name.
        FILE_NAME=$(basename ${DATA_FILE})
        FTP_ACCOUNT=$(echo ${FILE_NAME} | awk -F@ '{print $1}')
        DDC_FILE=$(echo ${FILE_NAME} | awk -F@ '{print $2}')

        if [ -z "${FTP_ACCOUNT}" ] ; then
            echo "$(date) ERROR cound not extract FTP account from ${DATA_FILE}"
        else
            egrep --silent "/${FTP_ACCOUNT}$" /data/tmp/siteList.sftp
            if [ $? -eq 0 ] ; then
                echo "$(date) INFO : Processing ${DATA_FILE}"
                mv ${DATA_FILE} ${INCOMING_ROOT}/${FTP_ACCOUNT}/${DDC_FILE}
            else
                echo "$(date): WARN: No ftp account for ${DATA_FILE}"
            fi
        fi

        # If we get here and the file still exists we can't do anything with it
        # so just remove it
        if [ -r ${DATA_FILE} ] ; then
            echo "$(date): WARN: Removing ${DATA_FILE}"
            rm -f ${DATA_FILE}
        fi
    fi
done

/bin/rm -f /data/tmp/siteList.sftp /tmp/sftpUploads.lock


