#!/bin/sh

cd `dirname $0`
ANALYSIS_BIN=`pwd`
ANALYSIS_BIN="${ANALYSIS_BIN}/../.."

STATUS_FILE=$1
DEST=$2
DATE=$3

if [ -z "${TMP_DIR}" ] ; then
    TMP_DIR=/tmp
fi

rm -rf ${TMP_DIR}/csgraphs
mkdir ${TMP_DIR}/csgraphs

OPT_SECTIONS=`${ANALYSIS_BIN}/cs/r1/parseFilteredCsStatus --infile $STATUS_FILE --outfile ${TMP_DIR}/data.txt | grep OPT_SECTIONS`

cat > ${TMP_DIR}/cmd.txt <<EOF
set xdata time
set timefmt "%d-%m-%y:%H:%M:%S"
set xrange [ "${DATE}:00:00":"${DATE}:23:59" ]
set yrange [ 0: ]
set format x "%H:%M"
set terminal jpeg

set output "${DEST}/NumSess.jpg"
set title "Number of Sessions"
plot "${TMP_DIR}/data.txt" using 1:2 notitle with lines

set output "${DEST}/Memory.jpg"
set title "Memory"
plot "${TMP_DIR}/data.txt" using 1:3 title 'Total (MB)' with lines, "${TMP_DIR}/data.txt" using 1:4 title 'Used (MB)' with lines

set output "${DEST}/Thread.jpg"
set title "Threads"
plot "${TMP_DIR}/data.txt" using 1:5 title 'Active' with lines, "${TMP_DIR}/data.txt" using 1:6 title 'Existing' with lines, "${TMP_DIR}/data.txt" using 1:7 title 'Sys' with lines, "${TMP_DIR}/data.txt" using 1:8 title 'Orb Active' with lines, "${TMP_DIR}/data.txt" using 1:9 title 'Orb Existing' with lines

set output "${DEST}/RO.jpg"
set title "ReadOnly Tx"
plot "${TMP_DIR}/data.txt" using 1:10 title "Total" with lines, "${TMP_DIR}/data.txt" using 1:11 title "Used" with lines

set output "${DEST}/RW.jpg"
set title "ReadWrite Tx"
plot "${TMP_DIR}/data.txt" using 1:12 title "Total" with lines, "${TMP_DIR}/data.txt" using 1:13 title "Used" with lines
EOF

echo "${OPT_SECTIONS}" | grep setbulk > /dev/null
if [ $? -eq 0 ] ; then
    NON_ZERO_DATA=${TMP_DIR}/csgraphs/nonzero_bulk.txt
    cat ${TMP_DIR}/data.txt | awk '{print $1 " " $14 " " $15 " " $16 " " $17}' | egrep -v "0 0 0 0$" > ${NON_ZERO_DATA}
    NUM_NONZERO=`wc -l ${NON_ZERO_DATA} | awk '{print $1}'`
    if [ ${NUM_NONZERO} -gt 0 ]; then
	cat >> ${TMP_DIR}/cmd.txt <<EOF
set output "${DEST}/setbulk_time.jpg"
set title "SetBulk Time"
plot "${NON_ZERO_DATA}" using 1:2 title "Min" with steps, "${NON_ZERO_DATA}" using 1:3 title "Avg" with steps, "${NON_ZERO_DATA}" using 1:4 title "Max" with steps

set output "${DEST}/setbulk_count.jpg"
set title "SetBulk Count"
plot "${NON_ZERO_DATA}" using 1:5 notitle with lines
EOF
    fi
fi


echo "${OPT_SECTIONS}" | grep purger > /dev/null
if [ $? -eq 0 ] ; then
    NON_ZERO_DATA=${TMP_DIR}/csgraphs/nonzero_purge_sess.txt
    cat ${TMP_DIR}/data.txt | awk '{print $1 " " $18 " " $19 " " $20 " " $21 " " $22 " " $23 " " $24 " " $25}' | egrep -v "^[^ ]* 0 0 0" > ${NON_ZERO_DATA}
    NUM_NONZERO=`wc -l ${NON_ZERO_DATA} | awk '{print $1}'`
    if [ ${NUM_NONZERO} -gt 0 ]; then
	cat >> ${TMP_DIR}/cmd.txt <<EOF
set output "${DEST}/purge_sess_time.jpg"
set title "Session Purge Times"
plot "${NON_ZERO_DATA}" using 1:2 title "Min" with steps, "${NON_ZERO_DATA}" using 1:3 title "Avg" with steps, "${NON_ZERO_DATA}" using 1:4 title "Max" with steps

set output "${DEST}/pugre_sess_count.jpg"
set title "Session Purger Count"
plot "${NON_ZERO_DATA}" using 1:5 notitle with lines
EOF
    fi

    NON_ZERO_DATA=${TMP_DIR}/csgraphs/nonzero_purge_trans.txt
    cat ${TMP_DIR}/data.txt | awk '{print $1 " " $26 " " $27 " " $28 " " $29 " " $30 " " $31 " " $32 " " $33}' | egrep -v "^[^ ]* 0 0 0" > ${NON_ZERO_DATA}
    NUM_NONZERO=`wc -l ${NON_ZERO_DATA} | awk '{print $1}'`
    if [ ${NUM_NONZERO} -gt 0 ]; then
	cat >> ${TMP_DIR}/cmd.txt <<EOF
set output "${DEST}/purge_trans_time.jpg"
set title "Transaction Purge Times"
plot "${NON_ZERO_DATA}" using 1:2 title "Min" with steps, "${NON_ZERO_DATA}" using 1:3 title "Avg" with steps, "${NON_ZERO_DATA}" using 1:4 title "Max" with steps

set output "${DEST}/purge_trans_count.jpg"
set title "Tranaction Purger Count"
plot "${NON_ZERO_DATA}" using 1:5 notitle with lines
EOF
    fi
fi

echo "${OPT_SECTIONS}" | grep dead > /dev/null
if [ $? -eq 0 ] ; then
    cat >> ${TMP_DIR}/cmd.txt <<EOF
set output "${DEST}/session_dead.jpg"
set title "Sessions Awaiting Delete"
plot "${TMP_DIR}/data.txt" using 1:34 notitle with lines
EOF
fi

echo "${OPT_SECTIONS}" | grep cache > /dev/null
if [ $? -eq 0 ] ; then

    VALID_DATA=${TMP_DIR}/csgraphs/valid_mocache.txt
    cat ${TMP_DIR}/data.txt | awk '{print $1 " " $35}' | egrep -v "^[^ ]* -1" > ${VALID_DATA}
    NUM_NONZERO=`wc -l ${VALID_DATA} | awk '{print $1}'`
    if [ ${NUM_NONZERO} -gt 0 ]; then
	cat >> ${TMP_DIR}/cmd.txt <<EOF
set size 1,0.5

set output "${DEST}/mocache_hit.jpg"
set title "MO Cache Hit Rate(%)"
plot "${VALID_DATA}" using 1:2 notitle with lines
EOF
    fi

    VALID_DATA=${TMP_DIR}/csgraphs/valid_ldapcache.txt
    cat ${TMP_DIR}/data.txt | awk '{print $1 " " $37}' | egrep -v "^[^ ]* -1" | egrep -v "^[^ ]* 0" > ${VALID_DATA}
    NUM_NONZERO=`wc -l ${VALID_DATA} | awk '{print $1}'`
    if [ ${NUM_NONZERO} -gt 0 ]; then
	cat >> ${TMP_DIR}/cmd.txt <<EOF
set size 1,0.5
set output "${DEST}/ldap_hit.jpg"
set title "LDAP Cache Hit Rate(%)"
plot "${VALID_DATA}" using 1:2 notitle with lines
EOF
    fi

fi

gnuplot ${TMP_DIR}/cmd.txt
if [ $? -eq 0 ]; then
    rm -rf ${TMP_DIR}/data.txt ${TMP_DIR}/cmd.txt ${TMP_DIR}/csgraphs
    exit 0
else
    exit 1
fi

exit 0

set output "${DEST}/setbulk_time_min.jpg"
set title "SetBulk Time Min"
plot "${NON_ZERO_DATA}" using 1:14 notitle with steps

set output "${DEST}/setbulk_time_max.jpg"
set title "SetBulk Time Max"
plot "${NON_ZERO_DATA}" using 1:15 notitle with steps

set output "${DEST}/setbulk_time_avg.jpg"
set title "SetBulk Time Avg"
plot "${NON_ZERO_DATA}" using 1:16 notitle with steps
