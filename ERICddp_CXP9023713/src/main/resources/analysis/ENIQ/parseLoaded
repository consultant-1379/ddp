#!/usr/bin/env perl

use strict;
use Getopt::Long;
use Data::Dumper;

use Time::Local;

use StatsDB;
use DBI;

our $DEBUG = 0;

sub main {
    my ($rncFile,$rbsFile,$site);
    my $result = GetOptions (
        "rncloaded=s" => \$rncFile,
        "rbsloaded=s" => \$rbsFile,
        "site=s" => \$site,
        "debug=s" => \$DEBUG
    );

    if (defined($rncFile)) { parseFile("RNC",$rncFile,$site); }
    if (defined($rbsFile)) { parseFile("RBS",$rbsFile,$site); }
}

sub parseFile {
    my ($type,$file,$site) = @_;
    if ( $DEBUG > 0 ) { setStatsDB_Debug($DEBUG); }
    my $dbh = connect_db();
    my $siteId = getSiteId($dbh,$site);

    open INPUT, $file or die "could not open $file: $!";
    my $sql = "INSERT INTO rnc_rbs_loaded (time,siteid,type,count) VALUES ";
    my $delim = "";
    my ($start, $end);
    while (my $line = <INPUT>) {
        chomp $line;
        my @fields = split(/;/, $line);
        next if (scalar(@fields) != 4);
        # 2010-04-30:13:45
        my @td = $fields[1] =~ /([1-3][0-9][0-9][0-9]-[0-1][0-9]-[0-3][0-9]):([0-2][0-9]:[0-5][0-9])/;
        next if (scalar(@td) != 2);
        my $ts = $td[0] . " " . $td[1] . ":00";
        if (! defined($start)) { $start = $ts; }
        if ($DEBUG > 2) { print $ts . ": " . $type . ": " . $fields[2] . "\n"; }
        $end = $ts; # original data is sorted by time ascending, so we can assume this here ...
        $sql = sprintf("%s%s(\'%s\', %d, \'%s\', %d)", $sql, $delim, $ts, $siteId, $type, $fields[2]);
        $delim = ",";
    }
    if (defined($end)) {
        $dbh->do("DELETE FROM rnc_rbs_loaded WHERE siteid = " . $siteId . " AND type = '" . $type . "' AND time BETWEEN '" . $start . "' AND '" . $end . "'") or die "could not remove old data: " . $dbh->errstr;
        $dbh->do($sql) or die "Failed to insert data: " . $dbh->errstr;
    }
}

main;
