#!/bin/sh

cd `dirname $0`
ANALYSIS_BIN=`pwd`
ANALYSIS_BIN="${ANALYSIS_BIN}/.."

INPUT_DIR=$1
SQL_DATE=$2
OUTPUT_DIR=$3
SITE=$4

DATE=`echo ${SQL_DATE} | sed 's/20\([0-9]*\)-\([0-9]*\)-\([0-9]*\)/\3\2\1/'`
DASH_DATE=`echo ${SQL_DATE} | sed 's/20\([0-9]*\)-\([0-9]*\)-\([0-9]*\)/\3-\2-\1/'`

if [ -z "${TMP_DIR}" ] ; then
    TMP_DIR=/tmp
fi

if [ ! -d ${OUTPUT_DIR}/sdmg ]; then
    mkdir ${OUTPUT_DIR}/sdmg
fi

if [ ! -d ${INPUT_DIR}/plots ]; then
    mkdir ${INPUT_DIR}/plots
fi


${ANALYSIS_BIN}/pm/parseSdmGdisp --dlog ${INPUT_DIR}/dispatcher.log --data ${TMP_DIR}/loadtimes.txt --plot ${INPUT_DIR}/plots/sdmg_loading.txt --delete ${OUTPUT_DIR}/sdmg/delete.html --date ${SQL_DATE} --site ${SITE}

egrep '^[0-9:]+ +[0-9]+' ${INPUT_DIR}/loading.log | awk '{printf "%s %d %d\n", $1, $2, ($2/$3)}' > ${TMP_DIR}/loading.log

if [ -r ${INPUT_DIR}/cellAdm.log ] ; then
    CELL_ADM_LOG=${INPUT_DIR}/cellAdm.log
elif [ -r ${INPUT_DIR}/CELL_ADM_loaded.log ] ; then
    CELL_ADM_LOG=${INPUT_DIR}/CELL_ADM_loaded.log
fi

cat > ${TMP_DIR}/sdm_cmd.txt <<EOF
set xdata time
set format x "%H:%M"
set terminal jpeg
set size 1,0.5

set timefmt "%d%m%y:%H:%M"
set xrange [ "${DATE}:00:00":"${DATE}:23:59" ]

set output "${OUTPUT_DIR}/sdmg/objects_waiting.jpg"
set title "Objects waiting to be loaded"
plot "${TMP_DIR}/loading.log" using 1:2 notitle with steps

set yrange [ 0: ]
set output "${OUTPUT_DIR}/sdmg/rops_waiting.jpg"
set title "ROPs waiting to be loaded"
plot "${TMP_DIR}/loading.log" using 1:3 notitle with steps
set yrange [ *: ]

set timefmt "%Y-%m-%d:%H:%M:%S"
set output "${OUTPUT_DIR}/sdmg/loadtime_hr.jpg
set title "Load time (Minutes spend loading per hour)"
plot "${TMP_DIR}/loadtimes.txt" using 1:2 notitle with steps

set output "${OUTPUT_DIR}/sdmg/loadrow_hr.jpg
set title "Rows loaded Per hour"
plot "${TMP_DIR}/loadtimes.txt" using 1:3 notitle with steps

EOF

NUM_CELL_ADM_LINES=`wc -l ${CELL_ADM_LOG} | awk '{print $1}'`
if [ ${NUM_CELL_ADM_LINES} -gt 0 ] ; then
    cat ${CELL_ADM_LOG} | ${ANALYSIS_BIN}/pm/convertSybDate | awk '{print $2, $1}' > ${TMP_DIR}/cellAdm.log
    cat >> ${TMP_DIR}/sdm_cmd.txt <<EOF

set timefmt "%Y-%m-%d:%H:%M"
set output "${OUTPUT_DIR}/sdmg/nodes_loaded.jpg
set title "Nodes Loaded Per ROP"
plot "${TMP_DIR}/cellAdm.log" using 1:2 notitle with steps
EOF
fi

if [ -r ${INPUT_DIR}/CELL_ADM_res1.log ] ; then
    cat >> ${TMP_DIR}/sdm_cmd.txt <<EOF
set timefmt "%d%m%y:%H:%M"
set output "${OUTPUT_DIR}/sdmg/CELL_agg.jpg"
set title "Rops awaiting aggregation"
plot "${INPUT_DIR}/CELL_ADM_res1.log" using 1:2 notitle with steps
EOF
fi

gnuplot ${TMP_DIR}/sdm_cmd.txt
if [ $? -eq 0 ]; then
    rm ${TMP_DIR}/sdm_cmd.txt ${TMP_DIR}/loading.log ${TMP_DIR}/cellAdm.log
fi

if [ -r ${INPUT_DIR}/CELL_ADM_loadedall.log ] ; then
    if [ -r ${INPUT_DIR}//CELL_retention.log ] ; then
	echo "<table border=1> <tr> <th>Res</th> <th>Loaded</th> <th>Max</th> </tr>" > ${OUTPUT_DIR}/sdmg/rops_stored.html

	MAX_ROP_TOTAL=0
	NUM_ROP_TOTAL=0

	RR_LIST=`cat ${INPUT_DIR}/CELL_retention.log | awk -F\; '{print $2 ":" $3 ":" $4}'`
	for RR in ${RR_LIST} ; do
	    RES=`echo ${RR} | awk -F: '{print $1}'`
	    UNIT=`echo ${RR} | awk -F: '{print $2}'`
	    MAX_ROP=`echo ${RR} | awk -F: '{print $3}'`
	    if [ ${RES} -ne ${UNIT} ] ; then
		if [ ${RES} -eq 0 -a ${UNIT} -eq 1 ] ; then
		    MAX_ROP=`expr ${MAX_ROP} \* 4`
		else
		    echo "ERROR: RES/UNIT mis-match for RES=${RES} and UNIT=${UNIT}"
		fi	       
	    fi
	    MAX_ROP_TOTAL=`expr ${MAX_ROP_TOTAL} + ${MAX_ROP}`

	    NUM_ROP=`egrep " *${RES} *$" ${INPUT_DIR}/CELL_ADM_loadedall.log | awk '{print $1}'`
	    if [ -z "${NUM_ROP}" ] ; then
		NUM_ROP=0
	    fi
	    NUM_ROP_TOTAL=`expr ${NUM_ROP_TOTAL} + ${NUM_ROP}`

	    echo "<tr> <td>${RES}</td> <td>${NUM_ROP}</td> <td>${MAX_ROP}</td> </tr>" >> ${OUTPUT_DIR}/sdmg/rops_stored.html
	done

	PERCENT_LOADED=`expr ${NUM_ROP_TOTAL} \* 100 / ${MAX_ROP_TOTAL}`
	echo "<tr> <td>Total</td> <td>${NUM_ROP_TOTAL} (${PERCENT_LOADED}%)</td> <td>${MAX_ROP_TOTAL}</td> </tr> </table>" >> ${OUTPUT_DIR}/sdmg/rops_stored.html
    fi
fi

