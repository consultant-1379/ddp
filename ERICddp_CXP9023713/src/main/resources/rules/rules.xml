<?xml version='1.0'?>
<ruleset>

  <conditiondef name="hasGen9EventHost">
    <query>
SELECT
  COUNT(servercfgtypes.system)
FROM
  servercfgtypes,
  servercfg,
  servers,
  sites
WHERE
  sites.id = servers.siteid AND
  sites.name = @site AND
  servercfg.serverid = servers.id AND
  servercfgtypes.id = servercfg.cfgid AND
  servers.type = 'ENM_EVENT_HOST' AND
  servercfg.date = @date AND
  servercfgtypes.system LIKE '%Gen9%'
    </query>
  </conditiondef>

  <conditiondef name="hasneo4j">
    <query>
SELECT COUNT(*) AS numrows
FROM enm_neo4j_srv
WHERE
 enm_neo4j_srv.siteid = @siteid AND
 enm_neo4j_srv.time BETWEEN @DATE AND @DATE + INTERVAL 1 DAY
    </query>
  </conditiondef>

 <conditiondef name="hasVersant">
   <query>
SELECT COUNT(*)
FROM vdb
WHERE
 vdb.date = @date AND
 vdb.siteid = @siteid
   </query>
 </conditiondef>

 <conditiondef name="isPhysical">
   <query>
SELECT COUNT(*)
FROM enm_cluster_host
WHERE
 enm_cluster_host.siteid = @siteid AND
 enm_cluster_host.date = @date
   </query>
 </conditiondef>

 <conditiondef name="hasIloLogs">
   <query>
SELECT COUNT(*)
FROM enm_ilo_logs
WHERE
 enm_ilo_logs.date = @date AND
 enm_ilo_logs.siteid = @siteid
   </query>
 </conditiondef>

 <conditiondef name="hasComEcim">
   <query>
SELECT
    COUNT(*)
FROM
    enm_cm_supervision,
    sites
WHERE
    time BETWEEN @date AND @date + INTERVAL 1 DAY
    AND enm_cm_supervision.siteid = sites.id
    AND enm_cm_supervision.type = 'COMECIM'
    AND sites.name = @site
    AND supervised > 0
   </query>
 </conditiondef>

 <conditiondef name="hasCPP">
   <query>
SELECT
    COUNT(*)
FROM
    enm_cm_supervision,
    sites
WHERE
    time BETWEEN @date AND @date + INTERVAL 1 DAY
    AND enm_cm_supervision.siteid = sites.id
    AND enm_cm_supervision.type = 'CPP'
    AND sites.name = @site
    AND supervised > 0
   </query>
 </conditiondef>

 <conditiondef name="hasNetsim">
   <query>
SELECT
    COUNT(*)
FROM
    servers,
    sites,
    servercfg
WHERE
    servers.siteid = sites.id AND
    sites.name = @site AND
    servers.id = servercfg.serverid AND
    servercfg.date = @date AND
    servers.type IN ('NETSIM', 'WORKLOAD')
   </query>
 </conditiondef>

  <conditiondef name="hasNAS">
    <query>
SELECT
    COUNT(*)
FROM
    servers,
    sites,
    servercfg
WHERE
    servers.siteid = sites.id AND
    sites.name = @site AND
    servers.id = servercfg.serverid AND
    servercfg.date = @date AND
    servers.type IN ('SFS', 'ACCESSNAS')
    </query>
  </conditiondef>

  <conditiondef name="isEshistory">
    <query>
SELECT
    COUNT(*)
FROM
    enm_eshistory_indices_stats
WHERE
    enm_eshistory_indices_stats.time BETWEEN @date AND @date + INTERVAL 1 DAY AND
    enm_eshistory_indices_stats.siteid = @siteid
    </query>
  </conditiondef>

  <conditiondef name="isCloudNative">
    <query>
SELECT
    COUNT(*)
FROM
    k8s_pod
WHERE
    k8s_pod.siteid = @siteid AND
    k8s_pod.date = @date
    </query>
  </conditiondef>

 <rule>
  <name>javaProcessHealth</name>
  <desc>java.lang.OutOfMemory Error</desc>
  <columns>
   <column name="vmName" label="Hostname" type="string" filterable="true">
     <link>
       <page>server.php</page>
       <param name="server" source="vmName"/>
     </link>
   </column>
   <column name="process" label="Process" type="string"/>
   <column name="count" label="Count" type="int" formatter="ddpFormatNumber"/>
  </columns>
  <query>
SELECT
    servers.hostname  AS vmName,
    program AS  process,
    errorCount AS count
FROM
    enm_oom_error,sites,servers
WHERE
    sites.name = @site AND enm_oom_error.siteid = sites.id AND
    servers.id= enm_oom_error.serverId AND
    enm_oom_error.date = @date
  </query>
 </rule>

 <rule>
  <name>pmHealthPerformance</name>
  <desc>PM File Collection (Performance)</desc>
  <columns>
    <column name="avgrop_duration" label="Avg Duration(s)" type="string" formatter="ddpFormatNumber" sortFunction="forceSortAsNums">
      <link>
        <page>TOR/pm/pmserv.php</page>
      </link>
   </column>
   <column name="maxrop_duration" label="Max Duration(s)" type="int" formatter="ddpFormatNumber"/>
  </columns>
  <query>
SELECT
    IFNULL(ROUND(AVG(duration), 0),0) AS avgrop_duration,
    IFNULL(MAX(duration),0) AS maxrop_duration
FROM
    enm_pmic_rop,
    sites
WHERE
    enm_pmic_rop.siteid = sites.id
    AND sites.name = @site
    AND enm_pmic_rop.fcs BETWEEN @date AND @date + INTERVAL 1 DAY
HAVING maxrop_duration > 0
  </query>
  <threshold name='avgrop_duration' type='less'/>
  <threshold name='maxrop_duration' type='less'/>
 </rule>

 <rule>
  <name>pmHealthSuccess</name>
  <desc>PM File Collection (Success)</desc>
  <columns>
   <column name="files_succ" label="Files Collected" type="string" formatter="ddpFormatNumber" sortFunction="forceSortAsNums">
      <link>
        <page>TOR/pm/pmserv.php</page>
      </link>
   </column>
   <column name="files_fail" label="Files Failed" type="string" formatter="ddpFormatNumber" sortFunction="forceSortAsNums">
      <link>
        <page>TOR/pm/pmserv.php</page>
      </link>
   </column>
   <column name="succ_rate" label="Success Rate(%)" type="int"/>
  </columns>
  <query>
SELECT
    IFNULL(MAX(duration),0) AS maxrop_duration,
    IFNULL(format(SUM(files_succ),0),0)AS files_succ,
    IFNULL(format(SUM(files_fail),0),0)AS files_fail,
    IFNULL(ROUND(sum(files_succ)/(sum(files_succ) + sum(files_fail)) * 100),0) AS succ_rate
FROM
    enm_pmic_rop,
    sites
WHERE
    enm_pmic_rop.siteid = sites.id
    AND sites.name = @site
    AND enm_pmic_rop.fcs BETWEEN @date AND @date + INTERVAL 1 DAY
HAVING maxrop_duration > 0
  </query>
  <threshold name='succ_rate' type='greater'/>
  <threshold name='files_succ' type='greater'/>
 </rule>

 <rule>
  <name>loghealthAmount</name>
  <desc>Log Rate</desc>
  <columns>
    <column name="server" label="Hostname" type="string" filterable="true">
       <link>
        <page>TOR/system/elasticsearch.php</page>
        <param name="logdirs" value="logs,enmlogs"/>
       </link>
    </column>
   <column name="entries" label="Average Log Rate per hour" type="int"/>
  </columns>
  <query>
        SELECT
            servers.hostname AS server,
            ROUND(
                enm_logs.entries /
                IFNULL( (TIMESTAMPDIFF(SECOND, @date, MAX(enm_elasticsearch_logs.log_end_time)) / 3600), 1 )
            ) AS entries
        FROM
            sites,
            servers,
            enm_logs,
            enm_elasticsearch_logs
        WHERE
            sites.name = @site AND
            servers.siteid = sites.id AND
            enm_logs.siteid = sites.id AND
            servers.id = enm_logs.serverid AND
            enm_elasticsearch_logs.siteid = sites.id AND
            enm_logs.date = @date AND
            enm_elasticsearch_logs.date = @date
        GROUP BY
            server
        ORDER BY entries DESC
  </query>
  <threshold name='entries' type='less'/>
 </rule>

 <rule>
  <name>nicInterfaceUsage</name>
  <columns>
   <column name="hostname" label="Hostname" type="string" filterable="true">
     <link>
       <page>server.php</page>
       <param name="server" source="hostname"/>
     </link>
   </column>
   <column name="nic" label="NIC" type="string"/>
   <column name="inavg" label="RX Avg (MB/s)" type="int" formatter="ddpFormatNumber"/>
   <column name="inmax" label="RX Max (MB/s)" type="int" formatter="ddpFormatNumber"/>
   <column name="outavg" label="TX Avg (MB/s)" type="int" formatter="ddpFormatNumber"/>
   <column name="outmax" label="TX Max (MB/s)" type="int" formatter="ddpFormatNumber"/>
  </columns>
  <query>
SELECT
    servers.hostname AS hostname,
    servers.type AS servertype,
    network_interfaces.name AS nic,
    ROUND( AVG(nic_stat.ibytes_per_sec)/(1024*1024), 0 ) AS inavg,
    ROUND( MAX(nic_stat.ibytes_per_sec)/(1024*1024), 0 ) AS inmax,
    ROUND( AVG(nic_stat.obytes_per_sec)/(1024*1024), 0 ) AS outavg,
    ROUND( MAX(nic_stat.obytes_per_sec)/(1024*1024), 0 ) AS outmax
FROM
    nic_stat FORCE INDEX(siteIdTime),
    network_interfaces,
    servers
WHERE
    nic_stat.siteid = @siteid AND
    nic_stat.time BETWEEN @date AND @date + INTERVAL 1 DAY AND
    nic_stat.nicid = network_interfaces.id AND
    nic_stat.serverid = servers.id
GROUP BY nic_stat.nicid
ORDER BY inavg DESC
  </query>
  <threshold name='inavg' type='less'/>
  <threshold name='outavg' type='less'/>
 </rule>

 <rule>
  <name>nicErrors</name>
  <desc>NIC Errors</desc>
  <conditional operation="and">
    <condition def="isCloudNative" type="equals" value="0"/>
  </conditional>
  <columns>
   <column name="hostname" label="Hostname" type="string" filterable="true">
     <link>
       <page>server.php</page>
       <param name="server" source="hostname"/>
       <param name="anchor" value="#net"/>
     </link>
   </column>
   <column name="hr" label="Hour" type="string" />
   <column name="type" label="Server Type" type="string" filterable="true"/>
   <column name="name" label="NIC" type="string"/>
   <column name="coll" label="coll" type="string"/>
   <column name="rxdrop" label="rxdrop" type="int" formatter="ddpFormatNumber"/>
   <column name="rxerr" label="rxerr" type="int" formatter="ddpFormatNumber"/>
   <column name="rxfifo" label= "rxfifo" type="int" formatter="ddpFormatNumber"/>
   <column name="rxfram" label="rxfram" type="int" formatter="ddpFormatNumber"/>
   <column name="txcarr" label="txcarr" type="int" formatter="ddpFormatNumber"/>
   <column name="txdrop" label="txdrop" type="int" formatter="ddpFormatNumber"/>
   <column name="txerr" label= "txerr" type="int" formatter="ddpFormatNumber"/>
   <column name="txfifo" label="txfifo" type="int" formatter="ddpFormatNumber"/>
  </columns>
  <query>
SELECT
    DATE_FORMAT(nic_errors.time, '%H') AS hr,
    servers.hostname AS hostname,
    servers.type AS type,
    network_interfaces.name AS name,
    SUM(coll) AS coll,
    SUM(rxdrop) AS rxdrop,
    SUM(rxerr) AS rxerr,
    SUM(rxfifo) AS rxfifo,
    SUM(rxfram) AS rxfram,
    SUM(txcarr) AS txcarr,
    SUM(txdrop) AS txdrop,
    SUM(txerr) AS txerr,
    SUM(txfifo) AS txfifo
FROM nic_errors
JOIN sites ON nic_errors.siteid = sites.id
JOIN network_interfaces ON nic_errors.nicid = network_interfaces.id
JOIN servers ON network_interfaces.serverid = servers.id
WHERE
    sites.name = @site AND
    nic_errors.time BETWEEN @date AND @date + INTERVAL 1 DAY
GROUP BY hr, name, hostname
  </query>
  <threshold name='coll' type='less'/>
  <threshold name='rxdrop' type='less'/>
  <threshold name='rxerr' type='less'/>
  <threshold name='rxfifo' type='less'/>
  <threshold name='rxfram' type='less'/>
  <threshold name='txcarr' type='less'/>
  <threshold name='txdrop' type='less'/>
  <threshold name='txerr' type='less'/>
  <threshold name='txfifo' type='less'/>
</rule>

 <rule>
  <name>LocalFilesystemUsage</name>
  <desc>Local Filesystem Usage</desc>
  <columns>
   <column name="server" label="Hostname" type="string" filterable="true">
      <link>
       <page>storage.php</page>
       <param name="server" source="server"/>
       <anchor>volumes</anchor>
     </link>
   </column>
   <column name="serverType" label="Server Type" type="string" filterable="true"/>
   <column name="filesystem" label="Filesystem" type="string" filterable="true"/>
   <column name="pc_usage" label="% Usage" type="float"/>
  </columns>
  <query>
SELECT
    servers.hostname AS server,
    volumes.name AS filesystem,
    servers.type AS serverType,
    ROUND( ( (volume_stats.used/volume_stats.size)*100 ), 1 ) AS pc_usage
FROM
    volumes,
    volume_stats,
    servers,
    sites
WHERE
    sites.name = @site AND servers.siteid = sites.id AND
    volume_stats.serverid = servers.id AND
    volumes.id = volume_stats.volid AND
    volume_stats.date = @date AND
    volumes.name NOT LIKE 'NFS:%'
  </query>
  <threshold name='pc_usage' type='less'/>
 </rule>

 <rule>
  <name>cppFullHourSync</name>
  <desc>CPP % Full Syncs Per Hour</desc>
  <conditional operation="and">
    <condition def="hasCPP" type="more" value="0"/>
  </conditional>
  <columns>
   <column name="hour" label="Hour" type="string">
      <link>
        <page>TOR/cm/cm_med.php</page>
      </link>
   </column>
   <column name="max_supervised" label="Max Supervised" type="int" formatter="ddpFormatNumber"/>
   <column name="total_full_syncs" label="Total Full Syncs" type="int" formatter="ddpFormatNumber"/>
   <column name="percent_full_synced" label="% Full Synced" type="float"/>
  </columns>
  <query>
SELECT
    b.hr AS 'hour',
    a.MaxSupervised AS 'max_supervised',
    b.sumExchangesCompleted AS 'total_full_syncs',
    ROUND( (b.sumExchangesCompleted / a.MaxSupervised * 100), 2 ) AS 'percent_full_synced'
FROM
    (SELECT
        DATE_FORMAT(time, '%H') AS hr,
        MAX(supervised) AS 'MaxSupervised'
    FROM
        enm_cm_supervision,
        sites
    WHERE
        time BETWEEN @date AND @date + INTERVAL 1 DAY AND
        enm_cm_supervision.siteid = sites.id AND
        enm_cm_supervision.type = 'CPP' AND
        sites.name = @site
    GROUP BY hr) a
        LEFT JOIN
    (SELECT
        DATE_FORMAT(time, '%H') AS hr,
        SUM(ExchangesCompleted) AS 'sumExchangesCompleted'
    FROM
        enm_route_instr,
        sites,
        enm_route_names
    WHERE
        time BETWEEN @date AND @date + INTERVAL 1 DAY AND
        enm_route_instr.siteid = sites.id AND
        sites.name = @site AND
        enm_route_instr.routeid = enm_route_names.id AND
        enm_route_names.name = '//MEDIATION/SyncNodeFlow/1.0.0_syncNodeFlowInput'
    GROUP BY hr) b
        ON a.hr = b.hr
  </query>
  <threshold name='percent_full_synced' type='less'/>
 </rule>

 <rule>
  <name>deadMscms</name>
  <desc>CPP MSCMHealthcheck</desc>
  <conditional operation="and">
    <condition def="hasCPP" type="more" value="0"/>
  </conditional>
  <columns>
   <column name="hour" label="Hour" type="string">
    <link>
     <page>TOR/cm/cm_med.php</page>
    </link>
   </column>
   <column name="count" label="Count" type="int"/>
  </columns>
  <query>
    SELECT
        DATE_FORMAT(time, '%H') AS hour,
        sum(DeadMscms) AS count
    FROM
        enm_dead_mscms,
        sites
    WHERE
        time BETWEEN @date AND @date + INTERVAL 1 DAY AND
        enm_dead_mscms.siteid = sites.id AND
        sites.name = @site
    GROUP BY hour
  </query>
  <threshold name='count' type='less'/>
 </rule>

 <rule>
  <name>cppFullSyncHealth</name>
  <desc>CPP Full Sync Performance</desc>
  <conditional operation="and">
    <condition def="hasCPP" type="more" value="0"/>
  </conditional>
  <columns>
   <column name="avg_sync_rate" label="Average rate MOs/sec" type="string" formatter="ddpFormatNumber" sortFunction="forceSortAsNums">
     <link>
       <page>TOR/cm/cm_med.php</page>
     </link>
   </column>
  </columns>
  <query>
SELECT
    round(avg(1000 * n_mo / t_complete),2) AS avg_sync_rate
FROM
    enm_cm_syncs,
    sites
WHERE
    enm_cm_syncs.siteid = sites.id
    AND sites.name = @site
    AND enm_cm_syncs.start BETWEEN @date AND @date + INTERVAL 1 DAY
    AND enm_cm_syncs.type = 'FULL'
  </query>
  <threshold name='avg_sync_rate' type='greater'/>
 </rule>

<rule>
  <name>cppDiscardedNotificationsPercent</name>
  <desc>CPP Discarded Notification %</desc>
  <conditional operation="and">
    <condition def="hasCPP" type="more" value="0"/>
  </conditional>
  <columns>
   <column name="server" label="Hostname" type="string" filterable="true">
     <link>
       <page>TOR/notif_analysis.php</page>
     </link>
   </column>
   <column name="total" label="Total" type="int" formatter="ddpFormatNumber"/>
   <column name="totalDiscarded" label="Discarded" type="int" formatter="ddpFormatNumber"/>
   <column name="percentDiscarded" label="% Discarded" type="float"/>
  </columns>
  <query>
SELECT
  servers.hostname AS server,
  SUM(totalnotificationsdiscarded) AS totalDiscarded,
  SUM(totalnotificationsreceived) AS total,
  ROUND(SUM(totalnotificationsdiscarded) / SUM(totalnotificationsreceived), 2) * 100 AS percentDiscarded
FROM
  enm_mscmnotification_logs,
  sites,
  servers
WHERE
  time BETWEEN @date AND @date + INTERVAL 1 DAY
  AND enm_mscmnotification_logs.siteid = sites.id
  AND sites.name = @site
  AND enm_mscmnotification_logs.serverid = servers.id
GROUP BY server
  </query>
  <threshold name='percentDiscarded' type='less'/>
 </rule>

<rule>
  <name>cppDiscardedNotificationsRatio</name>
  <desc>CPP Discarded Notification Ratio</desc>
  <conditional operation="and">
    <condition def="hasCPP" type="more" value="0"/>
  </conditional>
  <columns>
   <column name="ratio" label="Ratio" type="string" formatter="ddpFormatNumber" sortFunction="forceSortAsNums">
     <link>
       <page>TOR/notif_analysis.php</page>
     </link>
   </column>
   <column name="max" label="Max" type="float"/>
   <column name="min" label="Min" type="float"/>
  </columns>
  <query>
SELECT
  ROUND( MAX(PCTDIscarded) / MIN(PCTDIscarded), 2 ) AS ratio,
  ROUND( MAX(PCTDIscarded), 2 ) AS max,
  ROUND( MIN(PCTDIscarded), 2 ) AS min
FROM
  ( SELECT
      servers.hostname AS seriesid,
        SUM(totalnotificationsdiscarded) AS 'TotalDiscarded',
        SUM(totalnotificationsreceived) AS 'Total',
        SUM(totalnotificationsdiscarded) / SUM(totalnotificationsreceived) * 100 AS 'PCTDIscarded'
    FROM
      enm_mscmnotification_logs, sites, servers
    WHERE
      time BETWEEN @date AND @date + INTERVAL 1 DAY
      AND enm_mscmnotification_logs.siteid = sites.id
      AND sites.name = @site
      AND enm_mscmnotification_logs.serverid = servers.id
    GROUP BY seriesid
  ) AS result
  </query>
  <threshold name='ratio' type='less'/>
 </rule>

 <rule>
  <name>puppetFailures</name>
  <desc>Puppet Failures</desc>
  <conditional operation="and">
    <condition def="isPhysical" type="more" value="0"/>
  </conditional>
  <columns>
   <column name="hostname" label="Hostname" type="string" filterable="true"/>
   <column name="ms_hostname" label="MS (Puppet Master)" type="string"/>
   <column name="failures" label="Failures" type="int" formatter="ddpFormatNumber"/>
   <column name="failed_dependencies" label="Failed Dependencies" type="int" formatter="ddpFormatNumber"/>
  </columns>
  <query>
SELECT
  servers.hostname hostname,
  ms_servers.hostname ms_hostname,
  epf.failures failures,
  epf.failed_dependencies failed_dependencies
FROM enm_puppet_failures epf
JOIN servers
  ON servers.id = epf.serverid
JOIN sites
  ON sites.id = epf.siteid
JOIN servers ms_servers
  ON ms_servers.siteid = sites.id
  AND ms_servers.type = 'TOR_MANAGEMENT_SERVER'
JOIN servercfg
  ON servercfg.serverid = ms_servers.id
WHERE sites.name = @site
AND epf.date = @date
GROUP BY hostname
  </query>
 </rule>

 <rule>
  <name>puppetExecutionTime</name>
  <desc>Puppet Execution Time</desc>
  <conditional operation="and">
    <condition def="isPhysical" type="more" value="0"/>
  </conditional>
  <columns>
   <column name="server" label="Hostname" type="string" filterable="true"/>
   <column name="puppet_master" label="MS (Puppet Master)" type="string"/>
   <column name="count" label="Count" type="int" formatter="ddpFormatNumber"/>
   <column name="earliest_execution" label="Earliest Execution" type="string"/>
   <column name="latest_execution" label="Latest Execution" type="string"/>
   <column name="max_execution_time" label="Max Execution Time" type="string"/>
  </columns>
  <query>
SELECT
    servers.hostname AS server,
    (
        SELECT
            servers.hostname
        FROM
            servers,
            servercfg
        WHERE
            servers.siteid = enm_puppet_execution_times.siteid AND
            servers.id = servercfg.serverid AND
            servercfg.date = @date AND
            servers.type = 'TOR_MANAGEMENT_SERVER'
    ) AS puppet_master,
    COUNT(*) AS count,
    MIN(enm_puppet_execution_times.start_time) AS earliest_execution,
    MAX(enm_puppet_execution_times.start_time) AS latest_execution,
    MAX( TIMEDIFF(enm_puppet_execution_times.end_time, enm_puppet_execution_times.start_time) ) AS max_execution_time
FROM
    enm_puppet_execution_times,
    servers,
    sites
WHERE
    enm_puppet_execution_times.siteid = sites.id AND
    enm_puppet_execution_times.serverid = servers.id AND
    enm_puppet_execution_times.date = @date AND
    sites.name = @site
GROUP BY
    server
ORDER BY max_execution_time DESC
  </query>
  <threshold name='max_execution_time' type='less'/>
 </rule>

 <rule>
  <name>cppSubscriptionNSync</name>
  <desc>CPP Subscription/Sync</desc>
  <conditional operation="and">
    <condition def="hasCPP" type="more" value="0"/>
  </conditional>
  <columns>
    <column name="min_cpp_subscribed_pct" label="% Subscribed" type="string" sortFunction="forceSortAsNums">
      <link>
        <page>TOR/cm/cm_med.php</page>
      </link>
   </column>
   <column name="min_cpp_synced_pct" label="% Synced" type="float"/>
  </columns>
  <query>
SELECT
 ROUND(MIN((subscribed/supervised) * 100), 2) AS min_cpp_subscribed_pct,
 ROUND(MIN((if(synced &gt; supervised, supervised, synced)/supervised) * 100), 2) AS min_cpp_synced_pct
FROM
 enm_cm_supervision,
 sites
WHERE
 time BETWEEN @date AND @date + INTERVAL 1 DAY
 AND enm_cm_supervision.siteid = sites.id
 AND enm_cm_supervision.type = 'CPP'
 AND sites.name = @site
 AND supervised &gt; 0
  </query>
  <threshold name='min_cpp_subscribed_pct' type='greater'/>
  <threshold name='min_cpp_synced_pct' type='greater'/>
 </rule>

 <rule>
  <name>versantDumpLogs</name>
  <desc>Versant Dump Logs</desc>
  <conditional operation="and">
    <condition def="hasVersant" type="more" value="0"/>
  </conditional>
  <columns>
    <column name="logtime" label="Time" type="string">
     <link>
      <page>/common/findfile.php</page>
      <param name="pattern" value="dumps"/>
     </link>
    </column>
  </columns>
  <query>
SELECT
 '1' AS count,
 CAST(time as time) AS logtime
FROM
 enm_dumploginfo,
 sites
WHERE
 enm_dumploginfo.type = 'Versant'
 AND enm_dumploginfo.siteid = sites.id
 AND sites.name = @site
 AND enm_dumploginfo.time BETWEEN @date AND @date + INTERVAL 1 DAY
 GROUP BY enm_dumploginfo.filename
  </query>
  <threshold name='count' type='less'/>
 </rule>

 <rule>
  <name>versantConsistencyCheckDbBackup</name>
  <desc>Recent Versant Consistency Check (DB Backup)</desc>
  <conditional operation="and">
    <condition def="hasVersant" type="more" value="0"/>
  </conditional>
  <columns>
   <column name="lastSuccess" label="Last Success" type="string">
    <link>
     <page>TOR/system/elasticsearch.php</page>
     <param name="logdirs" value="logs,enmlogs"/>
    </link>
   </column>
   <column name="daysSinceLastSuccess" label="Days Since Last Success" type="int" formatter="ddpFormatNumber"/>
  </columns>
  <query>
SELECT
  IFNULL( MAX( enm_versant_health_checks.time ), 'NA' ) AS lastSuccess,
  IFNULL( DATEDIFF( @date, MAX( enm_versant_health_checks.time ) ), 365) as daysSinceLastSuccess
FROM
  enm_versant_health_checks
  JOIN sites
    ON sites.id = enm_versant_health_checks.siteid
  JOIN enm_versant_health_check_types
    ON enm_versant_health_check_types.id = enm_versant_health_checks.checkid
  JOIN enm_versant_health_status_types
    ON enm_versant_health_status_types.id = enm_versant_health_checks.statusid
WHERE
  sites.name = @site
  AND enm_versant_health_check_types.check_type = 'Consistency Check'
  AND enm_versant_health_status_types.status_type = 'DB Backup@Successful'
  </query>
  <threshold name='daysSinceLastSuccess' type='less'/>
 </rule>

 <rule>
  <name>versantConsistencyCheckVersantCc</name>
  <desc>Recent Versant Consistency Check (Versant CC)</desc>
  <conditional operation="and">
    <condition def="hasVersant" type="more" value="0"/>
  </conditional>
  <columns>
   <column name="lastSuccess" label="Last Success" type="string">
    <link>
     <page>TOR/system/elasticsearch.php</page>
     <param name="logdirs" value="logs,enmlogs"/>
    </link>
   </column>
   <column name="daysSinceLastSuccess" label="Days Since Last Success" type="int" formatter="ddpFormatNumber"/>
  </columns>
  <query>
SELECT
  IFNULL( MAX( enm_versant_health_checks.time ), 'NA' ) AS lastSuccess,
  IFNULL( DATEDIFF( @date, MAX( enm_versant_health_checks.time ) ), 365) as daysSinceLastSuccess
FROM
  enm_versant_health_checks
  JOIN sites
    ON sites.id = enm_versant_health_checks.siteid
  JOIN enm_versant_health_check_types
    ON enm_versant_health_check_types.id = enm_versant_health_checks.checkid
  JOIN enm_versant_health_status_types
    ON enm_versant_health_status_types.id = enm_versant_health_checks.statusid
WHERE
  sites.name = @site
  AND enm_versant_health_check_types.check_type = 'Consistency Check'
  AND enm_versant_health_status_types.status_type = 'Versant CC@Consistent'
  </query>
  <threshold name='daysSinceLastSuccess' type='less'/>
 </rule>

 <rule>
  <name>versantConsistencyCheckDpsCc</name>
  <desc>Recent Versant Consistency Check (DPS CC)</desc>
  <conditional operation="and">
    <condition def="hasVersant" type="more" value="0"/>
  </conditional>
  <columns>
   <column name="lastSuccess" label="Last Success" type="string">
    <link>
     <page>TOR/system/elasticsearch.php</page>
     <param name="logdirs" value="logs,enmlogs"/>
    </link>
   </column>
   <column name="daysSinceLastSuccess" label="Days Since Last Success" type="int" formatter="ddpFormatNumber"/>
  </columns>
  <query>
SELECT
  IFNULL( MAX( enm_versant_health_checks.time ), 'NA' ) AS lastSuccess,
  IFNULL( DATEDIFF( @date, MAX( enm_versant_health_checks.time ) ), 365) as daysSinceLastSuccess
FROM
  enm_versant_health_checks
  JOIN sites
    ON sites.id = enm_versant_health_checks.siteid
  JOIN enm_versant_health_check_types
    ON enm_versant_health_check_types.id = enm_versant_health_checks.checkid
  JOIN enm_versant_health_status_types
    ON enm_versant_health_status_types.id = enm_versant_health_checks.statusid
WHERE
  sites.name = @site
  AND enm_versant_health_check_types.check_type = 'Consistency Check'
  AND enm_versant_health_status_types.status_type = 'DPS CC@Consistent'
  </query>
  <threshold name='daysSinceLastSuccess' type='less'/>
 </rule>

 <rule>
  <name>versantLock</name>
  <desc>Versant (Lock Ratio)</desc>
  <conditional operation="and">
    <condition def="hasVersant" type="more" value="0"/>
  </conditional>
  <columns>
    <column name="slot" label="15 Minute Slot" type="string">
      <link>
        <page>csdb.php</page>
        <param name="vdbid" source="vdbid"/>
        <param name="vdbname" value="dps_integration"/>
      </link>
    </column>
    <column name="PCT_wait" label="% Locks" type="float"/>
  </columns>
<query>
 SELECT vdb_names.id AS vdbid,
   from_unixtime(FLOOR(UNIX_TIMESTAMP(time)/(15*60))*(15*60),'%T') AS 'slot',
   ROUND((SUM(lkwait)/ (SUM(xactcommit)+SUM(xactrollback) ) *100),2) AS 'PCT_wait'
 FROM
    vdb_stats,
    vdb_names,
    sites
 WHERE
    vdb_stats.time BETWEEN @date AND @date + INTERVAL 1 DAY
    AND vdb_stats.siteid = sites.id
    AND sites.name = @site
    AND vdb_names.name='dps_integration'
    AND vdb_stats.vdbid= vdb_names.id
    GROUP BY slot
    ORDER BY PCT_wait DESC
 </query>
 <threshold name='PCT_wait' type='less'/>
 </rule>

 <rule>
  <name>fileDescriptorsHealth</name>
  <desc>File Descriptors (java.io.IOException)</desc>
  <columns>
   <column name="vmName" label="Hostname" type="string" filterable="true">
     <link>
       <page>server.php</page>
       <param name="server" source="vmName"/>
     </link>
   </column>
   <column name="process" label="Process" type="string"/>
   <column name="count" label="Count" type="int" formatter="ddpFormatNumber"/>
  </columns>
  <query>
SELECT
    servers.hostname AS vmName,
    program AS process,
    warningCount AS count
FROM
    enm_file_descriptors,sites,servers
WHERE
    sites.name = @site
    AND sites.id = enm_file_descriptors.siteid
    AND enm_file_descriptors.date BETWEEN @date AND @date + INTERVAL 1 DAY
    AND servers.id = enm_file_descriptors.serverId
  </query>
 </rule>

 <rule>
  <name>fileDescriptorsVariation</name>
  <desc>File Descriptors Variation</desc>
  <columns>
   <column name="name" label="Server" type="string">
     <link>
       <page>topn.php</page>
       <param name="server" source="name"/>
     </link>
   </column>
   <column name="pct_increase" label="% Increase Since Yesterday" type="int" formatter="ddpFormatNumber"/>
   <column name="diff" label="Increase" type="int" formatter="ddpFormatNumber"/>
  </columns>
  <query>
SELECT
  prev_fds_by_name.name AS name,
  ROUND((maxserverfdcurrent - maxserverfdprev) / maxserverfdprev * 100) AS pct_increase,
  maxserverfdcurrent - maxserverfdprev AS diff
FROM
  (SELECT
  name, MAX(cur_fds_by_time.fd) AS maxserverfdcurrent
  FROM
    (SELECT
      time,
      servers.hostname AS name,
      SUM(proc_stats.fd) AS fd
    FROM
      proc_stats FORCE INDEX(siteIdIdx), servers
    WHERE
      proc_stats.siteid = @siteid AND
      proc_stats.time BETWEEN @date AND @date + INTERVAL 1 DAY AND
      proc_stats.serverid = servers.id
    GROUP BY time, servers.hostname
    ) AS cur_fds_by_time
  GROUP BY name
  ) AS cur_fds_by_name
JOIN
  (SELECT
    name, MAX(prev_fds_by_time.fd) AS maxserverfdprev
  FROM
    (SELECT
    time, servers.hostname AS name, SUM(proc_stats.fd) AS fd
    FROM
      proc_stats FORCE INDEX(siteIdIdx), servers
    WHERE
      proc_stats.siteid = @siteid AND
      proc_stats.time BETWEEN @date - INTERVAL 1 DAY AND @date AND
      proc_stats.serverid = servers.id
    GROUP BY time , servers.hostname
    ) AS prev_fds_by_time
  GROUP BY name
  ) AS prev_fds_by_name
  ON cur_fds_by_name.name = prev_fds_by_name.name
  </query>
  <threshold name='pct_increase' type='less'/>
 </rule>

 <rule>
  <name>gcHealth</name>
  <desc>GC Time</desc>
  <columns>
    <column name="process_host" label="Hostname" type="string" filterable="true">
      <link>
        <page>genjmx.php</page>
        <param name="server" source="process_host"/>
        <param name="name" source="jmx_name"/>
      </link>
   </column>
   <column name="jmx_name" label="Service Group" type="string" filterable="true">
       <link>
           <page>TOR/jboss.php</page>
           <param name="servicegroup" source="jmx_name"/>
       </link>
   </column>
   <column name="gc_avg_msec" label="Average GC time (MilliSec)" type="int" formatter="ddpFormatNumber"/>
   <column name="gc_max_msec" label="Max GC time (MilliSec)" type="int" formatter="ddpFormatNumber"/>
   <column name="gc_ratio" label="Old/Young GC Ratio" type="float"/>
  </columns>
  <query>
SELECT
    servers.hostname as process_host,
    jmx_names.name as jmx_name,
    ROUND(AVG(gc_youngtime + gc_oldtime)) as gc_avg_msec,
    ROUND(MAX(gc_youngtime + gc_oldtime)) as gc_max_msec,
    IF(SUM(gc_oldtime)>@GC_RATIO_MIN_OLD,IF(SUM(gc_youngtime)>0,SUM(gc_oldtime)/SUM(gc_youngtime),9999),0) AS gc_ratio
FROM
    generic_jmx_stats FORCE INDEX(siteTimeIdx), jmx_names, sites,servers
WHERE
    sites.name = @site
    AND sites.id = generic_jmx_stats.siteid
    AND generic_jmx_stats.nameid = jmx_names.id
    AND gc_youngtime IS NOT NULL
    AND generic_jmx_stats.serverid = servers.id
    AND jmx_names.name != 'elasticsearch'
    AND generic_jmx_stats.time BETWEEN @date AND @date + INTERVAL 1 DAY
GROUP BY process_host,jmx_name
ORDER BY gc_avg_msec DESC
  </query>

  <parameter name="GC_RATIO_MIN_OLD"/>

  <threshold name='gc_avg_msec' type='less'/>
  <threshold name='gc_max_msec' type='less'/>
  <threshold name='gc_ratio' type='less'/>
 </rule>

 <rule>
  <name>diskPerformance</name>
  <desc>Physical Disk Performance (Spikes)</desc>
  <columns>
    <column name="server" label="Hostname" type="string" filterable="true">
      <link>
        <page>storage.php</page>
        <param name="server" source="server"/>
      </link>
    </column>
   <column name="disk" label="Disk" type="string" filterable="true"/>
   <column name="maxbusy" label="Max % busy" type="float" formatter="ddpFormatNumber"/>
   <column name="avgbusy" label="Avg % busy" type="float" formatter="ddpFormatNumber"/>
   <column name="maxserv" label="Max Service time (msec)" type="float" formatter="ddpFormatNumber"/>
   <column name="avgserv" label="Avg Service time (msec)" type="float" formatter="ddpFormatNumber"/>
  </columns>
  <query>
SELECT
    servers.hostname AS server,
    disks.name AS disk,
    ROUND(MAX(hires_disk_stat.busy), 2) AS maxbusy,
    ROUND(AVG(hires_disk_stat.busy), 2) AS avgbusy,
    ROUND(MAX(hires_disk_stat.avserv), 2) AS maxserv,
    ROUND(AVG(hires_disk_stat.avserv), 2) AS avgserv
FROM
    servers,
    disks,
    hires_disk_stat FORCE INDEX(siteIdIdx)
WHERE
 hires_disk_stat.siteid = @siteid AND
 hires_disk_stat.time BETWEEN @date AND @date + INTERVAL 1 DAY AND
 hires_disk_stat.serverid = servers.id AND servers.type != 'ENM_VM' AND
 hires_disk_stat.diskid = disks.id AND disks.name NOT LIKE '%:%'
GROUP BY server , disk
  </query>
  <threshold name='maxbusy' type='less'/>
  <threshold name='avgbusy' type='less'/>
  <threshold name='avgserv' type='less'/>
 </rule>

 <rule>
  <name>diskUsageSustained</name>
  <desc>Physical Disk % usage (Sustained)</desc>
  <columns>
    <column name="server" label="Hostname" type="string" filterable="true">
      <link>
        <page>storage.php</page>
        <param name="server" source="server"/>
      </link>
    </column>
   <column name="disk" label="Disk" type="string" filterable="true"/>
   <column name="totalCount" label="Total Count" type="int" formatter="ddpFormatNumber"/>
   <column name="intervalCount" label="Interval Count" type="int" formatter="ddpFormatNumber"/>
   <column name="maxbusy" label="Max % busy" type="float" formatter="ddpFormatNumber"/>
   <column name="avgbusy" label="Avg % busy" type="float" formatter="ddpFormatNumber"/>
  </columns>
  <query>
SELECT
    server,
    disk,
    SUM(count) AS totalCount,
    COUNT(intervalSlot) AS intervalCount,
    MAX(maxbusy) AS maxbusy,
    MAX(avgbusy) AS avgbusy
FROM
    (SELECT
        servers.hostname AS server,
        disks.name AS disk,
        COUNT(disks.name) AS count,
        FROM_UNIXTIME(FLOOR(UNIX_TIMESTAMP(hires_disk_stat.time) / (15 * 60)) * (15 * 60)) AS intervalSlot,
        ROUND(MAX(hires_disk_stat.busy), 2) AS maxbusy,
        ROUND(AVG(hires_disk_stat.busy), 2) AS avgbusy
    FROM
        servers, disks, hires_disk_stat FORCE INDEX(siteIdIdx)
    WHERE
     hires_disk_stat.siteid = @siteid AND
     hires_disk_stat.time BETWEEN @date AND @date + INTERVAL 1 DAY AND
     hires_disk_stat.serverid = servers.id AND servers.type != 'ENM_VM' AND
     hires_disk_stat.diskid = disks.id AND disks.name NOT LIKE '%:%' AND
     hires_disk_stat.busy > @BUSY
    GROUP BY intervalSlot , server , disk
    HAVING count > @COUNT) AS results
GROUP BY server , disk
HAVING intervalCount
  </query>
  <parameter name='BUSY'/>
  <parameter name='AVSERV'/>
  <parameter name='COUNT'/>
  <threshold name='intervalCount' type='less'/>
 </rule>

 <rule>
  <name>diskServiceTimeSustained</name>
  <desc>Physical Disk Service Time (Sustained)</desc>
  <columns>
    <column name="server" label="Hostname" type="string" filterable="true">
      <link>
        <page>storage.php</page>
        <param name="server" source="server"/>
      </link>
    </column>
   <column name="disk" label="Disk" type="string" filterable="true"/>
   <column name="totalCount" label="Total Count" type="int" formatter="ddpFormatNumber"/>
   <column name="intervalCount" label="Interval Count" type="int" formatter="ddpFormatNumber"/>
   <column name="maxbusy" label="Max % busy" type="float" formatter="ddpFormatNumber"/>
   <column name="avgbusy" label="Avg % busy" type="float" formatter="ddpFormatNumber"/>
   <column name="maxserv" label="Max Service time (msec)" type="float" formatter="ddpFormatNumber"/>
   <column name="avgserv" label="Avg Service time (msec)" type="float" formatter="ddpFormatNumber"/>
  </columns>
  <query>
SELECT
    server,
    disk,
    SUM(count) AS totalCount,
    COUNT(intervalSlot) AS intervalCount,
    MAX(maxbusy) AS maxbusy,
    MAX(avgbusy) AS avgbusy,
    MAX(maxserv) AS maxserv,
    MAX(avgserv) AS avgserv
FROM
    (SELECT
        servers.hostname AS server,
        disks.name AS disk,
        COUNT(disks.name) AS count,
        FROM_UNIXTIME(FLOOR(UNIX_TIMESTAMP(hires_disk_stat.time) / (15 * 60)) * (15 * 60)) AS intervalSlot,
        ROUND(MAX(hires_disk_stat.busy), 2) AS maxbusy,
        ROUND(AVG(hires_disk_stat.busy), 2) AS avgbusy,
        ROUND(MAX(hires_disk_stat.avserv), 2) AS maxserv,
        ROUND(AVG(hires_disk_stat.avserv), 2) AS avgserv
    FROM
     servers, disks, hires_disk_stat FORCE INDEX(siteIdIdx)
    WHERE
     hires_disk_stat.siteid = @siteid AND
     hires_disk_stat.time BETWEEN @date AND @date + INTERVAL 1 DAY AND
     hires_disk_stat.serverid = servers.id AND servers.type != 'ENM_VM' AND
     hires_disk_stat.diskid = disks.id AND disks.name NOT LIKE '%:%' AND
     hires_disk_stat.blks > @BLKS AND
     hires_disk_stat.avserv > @AVSERV
    GROUP BY intervalSlot , server , disk
    HAVING count > @COUNT) AS results
GROUP BY server , disk
HAVING intervalCount;
  </query>
  <parameter name='AVSERV'/>
  <parameter name='COUNT'/>
  <threshold name='intervalCount' type='less'/>
 </rule>

 <rule>
  <name>nasDiskPerformance</name>
  <desc>NAS Disk Performance (Spikes)</desc>
  <columns>
    <column name="server" label="Hostname" type="string" filterable="true">
      <link>
        <page>storage.php</page>
        <param name="server" source="server"/>
      </link>
    </column>
   <column name="disk" label="Disk" type="string" filterable="true"/>
   <column name="maxbusy" label="Max % busy" type="float" formatter="ddpFormatNumber"/>
   <column name="avgbusy" label="Avg % busy" type="float" formatter="ddpFormatNumber"/>
   <column name="maxserv" label="Max Service time (msec)" type="float" formatter="ddpFormatNumber"/>
   <column name="avgserv" label="Avg Service time (msec)" type="float" formatter="ddpFormatNumber"/>
  </columns>
  <query>
SELECT
  servers.hostname AS server,
  disks.name AS disk,
  ROUND(MAX(hires_disk_stat.busy),2) AS maxbusy,
  ROUND(AVG(hires_disk_stat.busy),2) AS avgbusy,
  ROUND(MAX(hires_disk_stat.avserv),2) AS maxserv,
  ROUND(AVG(hires_disk_stat.avserv),2) AS avgserv
FROM
  servers,
  disks,
  hires_disk_stat FORCE INDEX(siteIdIdx)
WHERE
 hires_disk_stat.siteid = @siteid AND
 hires_disk_stat.time BETWEEN @date AND @date + INTERVAL 1 DAY AND
 hires_disk_stat.serverid = servers.id AND servers.type != 'ENM_VM' AND
 hires_disk_stat.diskid = disks.id AND disks.name LIKE '%:%'
GROUP BY server,disk
  </query>
  <threshold name='maxbusy' type='less'/>
  <threshold name='avgbusy' type='less'/>
  <threshold name='avgserv' type='less'/>
 </rule>

 <rule>
  <name>nasDiskPerformanceSustained</name>
  <desc>NAS Disk Performance (Sustained)</desc>
  <columns>
    <column name="server" label="Hostname" type="string" filterable="true">
      <link>
        <page>storage.php</page>
        <param name="server" source="server"/>
      </link>
    </column>
   <column name="disk" label="Disk" type="string"/>
   <column name="totalCount" label="Total Count" type="int" formatter="ddpFormatNumber"/>
   <column name="intervalCount" label="Interval Count" type="int" formatter="ddpFormatNumber"/>
   <column name="maxbusy" label="Max % busy" type="float" formatter="ddpFormatNumber"/>
   <column name="avgbusy" label="Avg % busy" type="float" formatter="ddpFormatNumber"/>
   <column name="maxserv" label="Max Service time (msec)" type="float" formatter="ddpFormatNumber"/>
   <column name="avgserv" label="Avg Service time (msec)" type="float" formatter="ddpFormatNumber"/>
  </columns>
  <query>
SELECT
  server,
  disk,
  SUM(count) AS totalCount,
  COUNT(intervalSlot) AS intervalCount,
  MAX(maxbusy) AS maxbusy,
  MAX(avgbusy) AS avgbusy,
  MAX(maxserv) AS maxserv,
  MAX(avgserv) AS avgserv
FROM
  ( SELECT
      servers.hostname AS server,
      disks.name AS disk,
      COUNT(disks.name) AS count,
      FROM_UNIXTIME(FLOOR(UNIX_TIMESTAMP(hires_disk_stat.time) / (15 * 60)) * (15 * 60)) AS intervalSlot,
      ROUND(MAX(hires_disk_stat.busy), 2) AS maxbusy,
      ROUND(AVG(hires_disk_stat.busy), 2) AS avgbusy,
      ROUND(MAX(hires_disk_stat.avserv), 2) AS maxserv,
      ROUND(AVG(hires_disk_stat.avserv), 2) AS avgserv
    FROM
      servers, disks, hires_disk_stat FORCE INDEX(siteIdIdx)
    WHERE
     hires_disk_stat.siteid = @siteid AND
     hires_disk_stat.time BETWEEN @date AND @date + INTERVAL 1 DAY AND
     hires_disk_stat.serverid = servers.id AND servers.type != 'ENM_VM' AND
     hires_disk_stat.diskid = disks.id AND disks.name LIKE '%:%' AND
     (hires_disk_stat.busy > @BUSY OR hires_disk_stat.avserv > @AVSERV)
    GROUP BY intervalSlot , server , disk
    HAVING count > @COUNT
  ) AS results
GROUP BY server, disk
HAVING intervalCount
  </query>
  <parameter name='BUSY'/>
  <parameter name='AVSERV'/>
  <parameter name='COUNT'/>
  <threshold name='intervalCount' type='less'/>
 </rule>

 <rule>
  <name>importToLiveLimitCheck</name>
  <desc>Import to Live (Performance)</desc>
  <columns>
    <column name="status" label="Status" type="string">
      <link>
        <page>TOR/cm/cm_imports.php</page>
      </link>
   </column>
   <column name="count" label="Count" type="int" formatter="ddpFormatNumber"/>
   <column name="KPI" label="% Of KPI" type="string" formatter="ddpFormatNumber" sortFunction="forceSortAsNums"/>
   <column name="total_elapsed_time" label="Avg Time(sec)" type="float" formatter="ddpFormatNumber"/>
   <column name="mos_created" label="Created" type="float" formatter="ddpFormatNumber"/>
   <column name="mos_updated" label="Updated" type="float" formatter="ddpFormatNumber"/>
   <column name="mos_deleted" label="Deleted" type="float" formatter="ddpFormatNumber"/>
  </columns>
  <query>
       SELECT
          status,
          COUNT(status) AS count,
          IFNULL(ROUND(SUM(KPItime)/SUM(totalElapsedTime)*100, 2),'NA') AS 'KPI',
          AVG(totalElapsedTime) AS total_elapsed_time,
          ROUND(SUM(mosCreated), 2) AS mos_created,
          ROUND(SUM(mosUpdated), 2) AS mos_updated,
          ROUND(SUM(mosDeleted), 2) AS mos_deleted
        FROM
        (SELECT
            IFNULL(status, 'NA') AS 'status',
            TIME_TO_SEC(TIMEDIFF(job_end, job_start)) AS 'totalElapsedTime',
            IFNULL(mos_created, 0) AS 'mosCreated',
            IFNULL(mos_updated, 0) AS 'mosUpdated',
            IFNULL(mos_deleted, 0) AS 'mosDeleted',
        ( (mos_created/@CREATE_MO_RATE)+(mos_updated/@UPDATE_MO_RATE)+(mos_deleted/@DELETE_MO_RATE) ) AS 'KPItime'
        FROM
            cm_import,
            sites
        WHERE
            siteid = sites.id
            AND sites.name = @site
            AND cm_import.siteid=sites.id
            AND job_end BETWEEN @date AND @date + INTERVAL 1 DAY
            AND configuration = 'Live'
            AND TIME_TO_SEC(TIMEDIFF(job_end, job_start)) >= @MINIMUM_DURATION
        ) AS problemrows
        GROUP BY problemrows.status
  </query>
  <parameter name="CREATE_MO_RATE"/>
  <parameter name="DELETE_MO_RATE"/>
  <parameter name="UPDATE_MO_RATE"/>
  <parameter name="MINIMUM_DURATION"/>
  <threshold name='KPI' type='greater'/>
 </rule>

 <rule>
  <name>importToNonLiveLimitCheck</name>
  <desc>Import to Non-Live (Performance)</desc>
  <columns>
    <column name="status" label="Status" type="string">
      <link>
        <page>TOR/cm/cm_imports.php</page>
      </link>
   </column>
   <column name="count" label="Count" type="int" formatter="ddpFormatNumber"/>
   <column name="KPI" label="% Of KPI" type="string" formatter="ddpFormatNumber" sortFunction="forceSortAsNums"/>
   <column name="total_elapsed_time" label="Avg Time(sec)" type="float" formatter="ddpFormatNumber"/>
   <column name="mos_created" label="Created" type="float" formatter="ddpFormatNumber"/>
   <column name="mos_updated" label="Updated" type="float" formatter="ddpFormatNumber"/>
   <column name="mos_deleted" label="Deleted" type="float" formatter="ddpFormatNumber"/>
  </columns>
  <query>
       SELECT
          status,
          COUNT(status) AS count,
          IFNULL(ROUND(SUM(KPItime)/SUM(totalElapsedTime)*100, 2),'NA') AS 'KPI',
          AVG(totalElapsedTime) AS total_elapsed_time,
          ROUND(SUM(mosCreated), 2) AS mos_created,
          ROUND(SUM(mosUpdated), 2) AS mos_updated,
          ROUND(SUM(mosDeleted), 2) AS mos_deleted
        FROM
        (SELECT
            IFNULL(status, 'NA') AS 'status',
            TIME_TO_SEC(TIMEDIFF(job_end, job_start)) AS 'totalElapsedTime',
            IFNULL(mos_created, 0) AS 'mosCreated',
            IFNULL(mos_updated, 0) AS 'mosUpdated',
            IFNULL(mos_deleted, 0) AS 'mosDeleted',
        ( (mos_created/@CREATE_MO_RATE)+(mos_updated/@UPDATE_MO_RATE)+(mos_deleted/@DELETE_MO_RATE) ) AS 'KPItime'
        FROM
            cm_import,
            sites
        WHERE
            siteid = sites.id
            AND sites.name = @site
            AND cm_import.siteid=sites.id
            AND job_end BETWEEN @date AND @date + INTERVAL 1 DAY
            AND configuration != 'Live'
            AND TIME_TO_SEC(TIMEDIFF(job_end, job_start)) >= @MINIMUM_DURATION
        ) AS problemrows
        GROUP BY problemrows.status
  </query>
  <parameter name="CREATE_MO_RATE"/>
  <parameter name="DELETE_MO_RATE"/>
  <parameter name="UPDATE_MO_RATE"/>
  <parameter name="MINIMUM_DURATION"/>
  <threshold name='KPI' type='greater'/>
 </rule>

 <rule>
  <name>exportRate</name>
  <desc>Full Export Performance (3GPP)</desc>
  <columns>
   <column name="count" label="Count" type="string" formatter="ddpFormatNumber" sortFunction="forceSortAsNums">
     <link>
       <page>TOR/cm/cm_exports.php</page>
     </link>
   </column>
   <column name="percent_kpi_average" label="% of KPI (Average)" type="float" formatter="ddpFormatNumber"/>
   <column name="percent_kpi_worst" label="% of KPI (Worst)" type="float" formatter="ddpFormatNumber"/>
  </columns>
  <query>
SELECT
    COUNT(mo_rate) AS count,
    ROUND(AVG(mo_rate)/@KPI*100, 2) AS percent_kpi_average,
    ROUND(MIN(mo_rate)/@KPI*100, 2) AS percent_kpi_worst
FROM (
  SELECT
    total_mos / IF(export_start_date_time = export_end_date_time, 1, TIMESTAMPDIFF(SECOND,export_start_date_time,export_end_date_time)) AS 'mo_rate'
  FROM
    cm_export,
    sites,
    cm_export_types,
    cm_export_filter_choice_names
  WHERE
    cm_export.siteid = sites.id
    AND sites.name = @site
    AND cm_export.typeid = cm_export_types.id
    AND cm_export.filter_choice_nameid = cm_export_filter_choice_names.id
    AND cm_export.export_end_date_time BETWEEN @date AND @date + INTERVAL 1 DAY
    AND TIMESTAMPDIFF(SECOND,export_start_date_time,export_end_date_time) > @MIN_EXPORT_TIME_SEC
    AND  total_mos / IF(export_start_date_time = export_end_date_time, 1, TIMESTAMPDIFF(SECOND,export_start_date_time,export_end_date_time)) &lt; @KPI
    AND cm_export_types.name COLLATE latin1_general_cs = @TYPE
    AND cm_export_filter_choice_names.name COLLATE latin1_general_cs = @FILTER_CHOICE
    AND status &lt;&gt; 'FAILED'
) AS result
HAVING count
  </query>
  <parameter name='MIN_EXPORT_TIME_SEC'/>
  <parameter name='TYPE'/>
  <parameter name='FILTER_CHOICE'/>
  <parameter name='KPI'/>
  <threshold name='percent_kpi_average' type='greater'/>
 </rule>

 <rule>
  <name>exportRateFiltered3GPP</name>
  <desc>Filtered Export Performance (3GPP)</desc>
  <columns>
   <column name="count" label="Count" type="string" formatter="ddpFormatNumber" sortFunction="forceSortAsNums">
     <link>
       <page>TOR/cm/cm_exports.php</page>
     </link>
   </column>
   <column name="percent_kpi_average" label="% of KPI (Average)" type="float" formatter="ddpFormatNumber"/>
   <column name="percent_kpi_worst" label="% of KPI (Worst)" type="float" formatter="ddpFormatNumber"/>
  </columns>
  <query>
SELECT
    COUNT(mo_rate) AS count,
    ROUND(AVG(mo_rate)/@KPI*100, 2) AS percent_kpi_average,
    ROUND(MIN(mo_rate)/@KPI*100, 2) AS percent_kpi_worst
FROM (
  SELECT
    total_mos / IF(export_start_date_time = export_end_date_time, 1, TIMESTAMPDIFF(SECOND,export_start_date_time,export_end_date_time)) AS 'mo_rate'
  FROM
    cm_export,
    sites,
    cm_export_types,
    cm_export_filter_choice_names
  WHERE
    cm_export.siteid = sites.id
    AND sites.name = @site
    AND cm_export.typeid = cm_export_types.id
    AND cm_export.filter_choice_nameid = cm_export_filter_choice_names.id
    AND cm_export.export_end_date_time BETWEEN @date AND @date + INTERVAL 1 DAY
    AND TIMESTAMPDIFF(SECOND,export_start_date_time,export_end_date_time) > @MIN_EXPORT_TIME_SEC
    AND  total_mos / IF(export_start_date_time = export_end_date_time, 1, TIMESTAMPDIFF(SECOND,export_start_date_time,export_end_date_time)) &lt; @KPI
    AND cm_export_types.name COLLATE latin1_general_cs = @TYPE
    AND cm_export_filter_choice_names.name COLLATE latin1_general_cs &lt;&gt; @NOT_FILTER_CHOICE
    AND status &lt;&gt; 'FAILED'
) AS result
HAVING count
  </query>
  <parameter name='MIN_EXPORT_TIME_SEC'/>
  <parameter name='TYPE'/>
  <parameter name='NOT_FILTER_CHOICE'/>
  <parameter name='KPI'/>
  <threshold name='percent_kpi_average' type='greater'/>
 </rule>

 <rule>
  <name>exportRateFullDynamic</name>
  <desc>Full Export Performance (Dynamic)</desc>
  <columns>
   <column name="count" label="Count" type="string" formatter="ddpFormatNumber" sortFunction="forceSortAsNums">
     <link>
       <page>TOR/cm/cm_exports.php</page>
     </link>
   </column>
   <column name="percent_kpi_average" label="% of KPI (Average)" type="float" formatter="ddpFormatNumber"/>
   <column name="percent_kpi_worst" label="% of KPI (Worst)" type="float" formatter="ddpFormatNumber"/>
  </columns>
  <query>
SELECT
    COUNT(mo_rate) AS count,
    ROUND(AVG(mo_rate)/@KPI*100, 2) AS percent_kpi_average,
    ROUND(MIN(mo_rate)/@KPI*100, 2) AS percent_kpi_worst
FROM (
  SELECT
    total_mos / IF(export_start_date_time = export_end_date_time, 1, TIMESTAMPDIFF(SECOND,export_start_date_time,export_end_date_time)) AS 'mo_rate'
  FROM
    cm_export,
    sites,
    cm_export_types,
    cm_export_filter_choice_names
  WHERE
    cm_export.siteid = sites.id
    AND sites.name = @site
    AND cm_export.typeid = cm_export_types.id
    AND cm_export.filter_choice_nameid = cm_export_filter_choice_names.id
    AND cm_export.export_end_date_time BETWEEN @date AND @date + INTERVAL 1 DAY
    AND TIMESTAMPDIFF(SECOND,export_start_date_time,export_end_date_time) > @MIN_EXPORT_TIME_SEC
    AND  total_mos / IF(export_start_date_time = export_end_date_time, 1, TIMESTAMPDIFF(SECOND,export_start_date_time,export_end_date_time)) &lt; @KPI
    AND cm_export_types.name COLLATE latin1_general_cs = @TYPE
    AND cm_export_filter_choice_names.name COLLATE latin1_general_cs = @FILTER_CHOICE
    AND status &lt;&gt; 'FAILED'
) AS result
HAVING count
  </query>
  <parameter name='MIN_EXPORT_TIME_SEC'/>
  <parameter name='TYPE'/>
  <parameter name='FILTER_CHOICE'/>
  <parameter name='KPI'/>
  <threshold name='percent_kpi_average' type='greater'/>
 </rule>

 <rule>
  <name>exportRateFilteredDynamic</name>
  <desc>Filtered Export Performance (Dynamic)</desc>
  <columns>
   <column name="count" label="Count" type="string" formatter="ddpFormatNumber" sortFunction="forceSortAsNums">
     <link>
       <page>TOR/cm/cm_exports.php</page>
     </link>
   </column>
   <column name="percent_kpi_average" label="% of KPI (Average)" type="float" formatter="ddpFormatNumber"/>
   <column name="percent_kpi_worst" label="% of KPI (Worst)" type="float" formatter="ddpFormatNumber"/>
  </columns>
  <query>
SELECT
    COUNT(mo_rate) AS count,
    ROUND(AVG(mo_rate)/@KPI*100, 2) AS percent_kpi_average,
    ROUND(MIN(mo_rate)/@KPI*100, 2) AS percent_kpi_worst
FROM (
  SELECT
    total_mos / IF(export_start_date_time = export_end_date_time, 1, TIMESTAMPDIFF(SECOND,export_start_date_time,export_end_date_time)) AS 'mo_rate'
  FROM
    cm_export,
    sites,
    cm_export_types,
    cm_export_filter_choice_names
  WHERE
    cm_export.siteid = sites.id
    AND sites.name = @site
    AND cm_export.typeid = cm_export_types.id
    AND cm_export.filter_choice_nameid = cm_export_filter_choice_names.id
    AND cm_export.export_end_date_time BETWEEN @date AND @date + INTERVAL 1 DAY
    AND TIMESTAMPDIFF(SECOND,export_start_date_time,export_end_date_time) > @MIN_EXPORT_TIME_SEC
    AND  total_mos / IF(export_start_date_time = export_end_date_time, 1, TIMESTAMPDIFF(SECOND,export_start_date_time,export_end_date_time)) &lt; @KPI
    AND cm_export_types.name COLLATE latin1_general_cs = @TYPE
    AND cm_export_filter_choice_names.name COLLATE latin1_general_cs &lt;&gt; @NOT_FILTER_CHOICE
    AND status &lt;&gt; 'FAILED'
) AS result
HAVING count
  </query>
  <parameter name='MIN_EXPORT_TIME_SEC'/>
  <parameter name='TYPE'/>
  <parameter name='NOT_FILTER_CHOICE'/>
  <parameter name='KPI'/>
  <threshold name='percent_kpi_average' type='greater'/>
 </rule>

 <rule>
  <name>exportIncomplete</name>
  <desc>Incomplete Exports</desc>
  <columns>
   <column name="pct_exported" label="Min % Nodes Exported" type="string" sortFunction="forceSortAsNums">
     <link>
       <page>TOR/cm/cm_exports.php</page>
     </link>
   </column>
  </columns>
  <query>
SELECT
   ROUND(MIN(exported / expected_nodes * 100), 0) AS 'pct_exported'
FROM
    cm_export,
    sites
WHERE
    cm_export.siteid = sites.id
    AND sites.name = @site
    AND cm_export.export_end_date_time BETWEEN @date AND @date + INTERVAL 1 DAY
  </query>
  <threshold name='pct_exported' type='greater'/>
 </rule>

 <rule>
  <name>puppetStatus</name>
  <desc>Puppet Stoppages</desc>
  <conditional operation="and">
    <condition def="isPhysical" type="more" value="0"/>
  </conditional>
  <columns>
   <column name="hostname" label="Hostname" type="string" filterable="true"/>
   <column name="ms_hostname" label="MS (Puppet Master)" type="string"/>
   <column name="first_time" label="Earliest Time" type="string"/>
   <column name="last_time" label="Latest Time" type="string"/>
  </columns>
  <query>
SELECT
  servers.hostname hostname,
  ms_servers.hostname ms_hostname,
  MIN(cast(enm_puppet_stoppages.date as time)) first_time,
  MAX(cast(enm_puppet_stoppages.date as time)) last_time
FROM enm_puppet_stoppages
JOIN sites
  ON sites.id = enm_puppet_stoppages.siteid
JOIN servers
  ON enm_puppet_stoppages.serverid = servers.id
JOIN servers ms_servers
  ON ms_servers.siteid = sites.id
  AND ms_servers.type = 'TOR_MANAGEMENT_SERVER'
JOIN servercfg
  ON servercfg.serverid = ms_servers.id
WHERE sites.name = @site
AND servercfg.date = @date
AND enm_puppet_stoppages.date between @date AND @date + INTERVAL 1 DAY
GROUP BY hostname

  </query>
 </rule>

 <rule>
  <name>cppDeltaSync</name>
  <desc>CPP % Delta Syncs Per Hour</desc>
  <conditional operation="and">
    <condition def="hasCPP" type="more" value="0"/>
  </conditional>
  <columns>
   <column name="hour" label="Hour" type="string">
   <link>
   <page>TOR/cm/cm_med.php</page>
   </link>
   </column>
   <column name="max_supervised" label="Max Supervised" type="int" formatter="ddpFormatNumber"/>
   <column name="total_delta_syncs" label="Total Delta Syncs" type="int" formatter="ddpFormatNumber"/>
   <column name="percent_delta_synced" label="% Delta Synced" type="float"/>
  </columns>
  <query>
SELECT
    b.hr AS 'hour',
    a.MaxSupervised AS 'max_supervised',
    b.sumExchangesCompleted AS 'total_delta_syncs',
    ROUND( (b.sumExchangesCompleted / a.MaxSupervised * 100), 2 ) AS 'percent_delta_synced'
FROM
    (SELECT
        DATE_FORMAT(time, '%H') AS hr,
        MAX(supervised) AS 'MaxSupervised'
    FROM
        enm_cm_supervision,
        sites
    WHERE
        time BETWEEN @date AND @date + INTERVAL 1 DAY AND
        enm_cm_supervision.siteid = sites.id AND
        enm_cm_supervision.type = 'CPP' AND
        sites.name = @site
    GROUP BY hr) a
        LEFT JOIN
    (SELECT
        DATE_FORMAT(time, '%H') AS hr,
        SUM(ExchangesCompleted) AS 'sumExchangesCompleted'
    FROM
        enm_route_instr,
        sites,
        enm_route_names
    WHERE
        time BETWEEN @date AND @date + INTERVAL 1 DAY AND
        enm_route_instr.siteid = sites.id AND
        sites.name = @site AND
        enm_route_instr.routeid = enm_route_names.id AND
        enm_route_names.name = '//MEDIATION/DeltaSyncFlow/1.0.0_deltaSyncFlowInput'
    GROUP BY hr) b
        ON a.hr = b.hr
  </query>
  <threshold name='percent_delta_synced' type='less'/>
 </rule>

 <rule>
  <name>ddpLogAmount</name>
  <desc>DDP's Elasticsearch Parsing Limits</desc>
  <columns>
    <column name="server" label="Hostname" type="string" filterable="true">
       <link>
        <page>TOR/system/elasticsearch.php</page>
        <param name="logdirs" value="logs,enmlogs"/>
        <param name="host" source="server"/>
       </link>
    </column>
   <column name="entries" label="Count" type="int" formatter="ddpFormatNumber"/>
   <column name="size" label="Log Size (KB)" type="string" formatter="ddpFormatNumber" sortFunction="forceSortAsNums"/>
  </columns>
  <query>
        SELECT
          IFNULL(servers.hostname, 'Unknown') AS server,
          enm_logs.entries AS entries,
          IFNULL(enm_logs.size, 'NA') AS size
        FROM
          enm_logs
        INNER JOIN
          sites ON enm_logs.siteid = sites.id
            AND sites.name = @site
            LEFT OUTER JOIN
          servers ON enm_logs.serverid = servers.id
        WHERE
          enm_logs.date = @date
        ORDER BY entries DESC
  </query>
  <threshold name='entries' type='less'/>
  <threshold name='size' type='less'/>
 </rule>

 <rule>
  <name>cpuHealth</name>
  <desc>CPU Usage (Spikes)</desc>
  <columns>
    <column name="host" label="Hostname" type="string" filterable="true">
      <link>
        <page>server.php</page>
        <param name="server" source="host"/>
      </link>
   </column>
   <column name="type" label="Server Type" type="string" filterable="true"/>
   <column name="maxcpu" label="MAX CPU Load %" type="int" formatter="ddpFormatNumber"/>
   <column name="avgcpu" label="AVG CPU Load %" type="int" formatter="ddpFormatNumber"/>
   <column name="maxiowait" label="MAX IO-Wait %" type="int" formatter="ddpFormatNumber"/>
   <column name="avgiowait" label="AVG IO-Wait %" type="int" formatter="ddpFormatNumber"/>
  </columns>
  <query>
SELECT
    cpu_usage_spikes.max_cpu AS maxcpu,
    cpu_usage_spikes.avg_cpu AS avgcpu,
    cpu_usage_spikes.max_iowait AS maxiowait,
    cpu_usage_spikes.avg_iowait AS avgiowait,
    cpu_usage_spikes.host_name AS host,
    IFNULL(service_groups.svcgrp_name, 'NA') AS svcgrp_name,
    cpu_usage_spikes.type AS type
FROM
    (SELECT
        MAX(user + sys + IFNULL(guest, 0)) AS max_cpu,
        ROUND(AVG(user + sys + IFNULL(guest, 0))) AS avg_cpu,
        MAX(iowait) AS max_iowait,
        ROUND(AVG(iowait)) AS avg_iowait,
        hostname AS host_name,
        serverid AS serverid,
        servers.type AS type
    FROM
        hires_server_stat FORCE INDEX(siteIdx), servers
    WHERE
        hires_server_stat.siteid = @siteid AND
        hires_server_stat.time BETWEEN @date AND @date + INTERVAL 1 DAY AND
        hires_server_stat.serverid = servers.id
    GROUP BY hires_server_stat.serverid) cpu_usage_spikes
        LEFT JOIN
    (SELECT
        enm_servicegroup_names.name AS svcgrp_name,
        enm_servicegroup_instances.serverid AS serverid
    FROM
        enm_servicegroup_instances
            JOIN
        enm_servicegroup_names ON enm_servicegroup_instances.serviceid = enm_servicegroup_names.id
            JOIN
        sites on enm_servicegroup_instances.siteid = sites.id
    WHERE
        enm_servicegroup_instances.date = @date AND
        sites.name = @site
    GROUP BY enm_servicegroup_instances.serverid) service_groups ON cpu_usage_spikes.serverid = service_groups.serverid
HAVING svcgrp_name != 'mspm'
  </query>
  <threshold name='avgcpu' type='less'/>
  <threshold name='maxcpu' type='less'/>
  <threshold name='avgiowait' type='less'/>
  <threshold name='maxiowait' type='less'/>
 </rule>

 <rule>
  <name>cpuLoad</name>
  <desc>CPU Load (Sustained)</desc>
  <columns>
    <column name="host" label="Hostname" type="string" filterable="true">
      <link>
        <page>server.php</page>
        <param name="server" source="host"/>
      </link>
   </column>
   <column name="type" label="Server Type" type="string" filterable="true"/>
   <column name="intervalCount" label="Interval Count" type="int" formatter="ddpFormatNumber"/>
   <column name="maxcpu" label="MAX CPU Load %" type="float" formatter="ddpFormatNumber"/>
   <column name="avgcpu" label="AVG CPU Load %" type="float" formatter="ddpFormatNumber"/>
   <column name="totalCount" label="Total Count" type="int" formatter="ddpFormatNumber"/>
  </columns>
  <query>
SELECT
    a.host,
    a.type,
    COUNT(timeInterval) AS intervalCount,
    ROUND(MAX(maxcpu), 2) AS maxcpu,
    ROUND(MAX(avgcpu), 2) AS avgcpu,
    SUM(cnt) AS totalCount
FROM
    (SELECT
            hostname AS host,
            servers.type AS type,
            FROM_UNIXTIME(FLOOR(UNIX_TIMESTAMP(hires_server_stat.time) / (15 * 60)) * (15 * 60)) AS timeInterval,
            MAX( user + sys + IFNULL(guest, 0) ) maxcpu,
            AVG( user + sys + IFNULL(guest, 0) ) avgcpu,
            COUNT(hostname) AS cnt
    FROM
      hires_server_stat FORCE INDEX(siteIdx), servers
    WHERE
      hires_server_stat.siteid = @siteid AND
      hires_server_stat.time BETWEEN @date AND @date + INTERVAL 1 DAY AND
      hires_server_stat.serverid = servers.id AND
      ( user + sys + IFNULL(guest, 0) ) > @MAX_CPU
    GROUP BY host , timeInterval
    HAVING cnt > @COUNT_PER_INTERVAL) AS a
GROUP BY host
  </query>
  <parameter name='MAX_CPU'/>
  <parameter name='COUNT_PER_INTERVAL'/>
  <threshold name='intervalCount' type='less'/>
 </rule>

 <rule>
  <name>vcsResourceHealth</name>
  <desc>VCS</desc>
  <conditional operation="and">
    <condition def="isPhysical" type="more" value="0"/>
  </conditional>
  <columns>
    <column name="service" label="Group" type="string" filterable="true">
      <link>
        <page>TOR/vcs_events.php</page>
      </link>
    </column>
   <column name="eventtype" label="Action" type="string" filterable="true"/>
   <column name="total" label="Count" type="int" formatter="ddpFormatNumber"/>
  </columns>
  <query>
SELECT
    enm_cluster_svc_names.name AS service,
    enm_vcs_events.eventtype AS eventtype,
    count(enm_vcs_events.eventtype) AS total,
    IF(eventtype = 'CleanStart' OR eventtype = 'Faulted', 2, 1) AS severityLevel
FROM
    enm_vcs_events,
    sites,
    enm_cluster_svc_names
WHERE
    enm_vcs_events.siteid = sites.id
    AND sites.name = @site
    AND enm_vcs_events.serviceid = enm_cluster_svc_names.id
    AND ( eventtype = 'MonitorOffline' OR eventtype = 'CleanStart' OR eventtype = 'MonitorTimeout' OR eventtype = 'Faulted')
    AND enm_vcs_events.time BETWEEN @date AND @date + INTERVAL 1 DAY
GROUP BY  service,eventtype
ORDER BY total desc,service,eventtype
  </query>
  <threshold name='severityLevel' type='less'/>
 </rule>

 <rule>
  <name>hadleyHealthCheckFailures</name>
  <desc>HADley Health Check Failures</desc>
  <conditional operation="and">
    <condition def="isPhysical" type="less" value="1"/>
    <condition def="isCloudNative" type="equals" value="0"/>
  </conditional>
  <columns>
   <column name="service_group" label="Service Group" type="string">
    <link>
     <page>TOR/consul.php</page>
    </link>
   </column>
   <column name="hc_failed" label="HC Failed" type="string"/>
   <column name="failure_count" label="Count" type="int" formatter="ddpFormatNumber"/>
  </columns>
  <query>
SELECT
    enm_servicegroup_names.name AS 'service_group',
    SUBSTRING_INDEX(enm_consul_event_names.name, '/', -1) AS 'hc_failed',
    COUNT(enm_consul_n_sam_events.event_id) AS 'failure_count'
FROM
    enm_consul_n_sam_events,
    enm_consul_event_names,
    enm_servicegroup_instances,
    enm_servicegroup_names,
    sites
WHERE
    enm_consul_n_sam_events.event_id = enm_consul_event_names.id AND
    enm_consul_n_sam_events.event_type = 'HADley' AND
    enm_consul_event_names.name like 'HcFailed%' AND
    enm_consul_n_sam_events.siteid = sites.id AND
    enm_consul_n_sam_events.serverid = enm_servicegroup_instances.serverid AND
    enm_servicegroup_instances.serviceid = enm_servicegroup_names.id AND
    enm_servicegroup_instances.siteid = sites.id AND
    sites.name = @site AND
    enm_servicegroup_instances.date = @date AND
    enm_consul_n_sam_events.time BETWEEN @date AND @date + INTERVAL 1 DAY
GROUP BY enm_servicegroup_names.name, enm_consul_n_sam_events.event_id
ORDER BY failure_count DESC, service_group;
  </query>
  <threshold name='failure_count' type='less'/>
 </rule>

 <rule>
  <name>consulMemberFailures</name>
  <desc>Consul Member Failures</desc>
  <conditional operation="and">
    <condition def="isPhysical" type="less" value="1"/>
    <condition def="isCloudNative" type="equals" value="0"/>
  </conditional>
  <columns>
   <column name="service_group" label="Service Group" type="string" filterable="true">
    <link>
     <page>TOR/consul.php</page>
    </link>
   </column>
   <column name="event_type" label="Event" type="string"/>
   <column name="event_count" label="Count" type="int" formatter="ddpFormatNumber"/>
  </columns>
  <query>
SELECT
    enm_servicegroup_names.name AS 'service_group',
    enm_consul_event_names.name AS 'event_type',
    COUNT(enm_consul_n_sam_events.event_id) AS 'event_count'
FROM
    enm_consul_n_sam_events,
    enm_consul_event_names,
    enm_servicegroup_instances,
    enm_servicegroup_names,
    sites
WHERE
    enm_consul_n_sam_events.event_id = enm_consul_event_names.id AND
    enm_consul_event_names.name = 'MemberFailed_HealthCritical' AND
    enm_consul_n_sam_events.siteid = sites.id AND
    enm_consul_n_sam_events.serverid = enm_servicegroup_instances.serverid AND
    enm_servicegroup_instances.serviceid = enm_servicegroup_names.id AND
    enm_servicegroup_instances.siteid = sites.id AND
    sites.name = @site AND
    enm_servicegroup_instances.date = @date AND
    enm_consul_n_sam_events.time BETWEEN @date AND @date + INTERVAL 1 DAY
GROUP BY enm_servicegroup_names.name, enm_consul_n_sam_events.event_id
ORDER BY event_count DESC, service_group;
  </query>
 </rule>

 <rule>
  <name>criticalErrors</name>
  <desc>Critical Errors</desc>
  <columns>
    <column name="server" label="Hostname" type="string" filterable="true">
      <link>
        <page>server.php</page>
        <param name="server" source="server"/>
      </link>
    </column>
    <column name="serverType" label= "Server Type" type="string"/>
    <column name="errorMsg" label="Error" type="string"/>
    <column name="errorCount" label="Count" type="int" formatter="ddpFormatNumber"/>
  </columns>
  <query>
SELECT
    servers.hostname as server,
    servers.type as serverType,
    enm_vm_critical_error_messages.message as errorMsg,
    enm_vm_critical_errors.errorCount as errorCount
FROM
    enm_vm_critical_errors,
    enm_vm_critical_error_messages,
    servers,
    sites
WHERE
    enm_vm_critical_errors.siteid = sites.id
    AND enm_vm_critical_errors.errorid = enm_vm_critical_error_messages.id
    AND enm_vm_critical_errors.serverid = servers.id
    AND servers.siteid = sites.id
    AND sites.name = @site
    AND date=@date
    AND (
      enm_vm_critical_error_messages.message = 'Out of memory: Kill process' OR
      enm_vm_critical_error_messages.message LIKE '%Multicast%' OR
      enm_vm_critical_error_messages.message LIKE 'page allocation failure: order%'
    )
ORDER BY
    server
ASC
  </query>
 </rule>

 <rule>
  <name>jmsErrorsQueueFull</name>
  <desc>Queues and Topics (Queue Is Full)</desc>
  <columns>
    <column name="server" label="Hostname" type="string" filterable="true">
      <link>
        <page>TOR/platform/jms.php</page>
        <param name="name" value="jms"/>
      </link>
    </column>
    <column name="errorMsg" label="Error" type="string" filterable="true"/>
    <column name="errorCount" label="Count" type="int" formatter="ddpFormatNumber"/>
  </columns>
  <query>
SELECT
    servers.hostname as server,
    enm_vm_critical_error_messages.message as errorMsg,
    enm_vm_critical_errors.errorCount as errorCount
FROM
    enm_vm_critical_errors,
    enm_vm_critical_error_messages,
    servers,
    sites
WHERE
    enm_vm_critical_errors.siteid = sites.id
    AND enm_vm_critical_errors.errorid = enm_vm_critical_error_messages.id
    AND enm_vm_critical_errors.serverid = servers.id
    AND servers.siteid = sites.id
    AND sites.name = @site
    AND date=@date
    AND enm_vm_critical_error_messages.message LIKE 'Queue is full:%'
ORDER BY
    server
ASC
  </query>
 </rule>

 <rule>
  <name>jmsErrorsMaximumDeliveryAttempts</name>
  <desc>Queues and Topics (Maximum Delivery Attempts Exceeded)</desc>
  <columns>
    <column name="server" label="Hostname" type="string" filterable="true">
      <link>
        <page>TOR/platform/jms.php</page>
        <param name="name" value="jms"/>
      </link>
    </column>
    <column name="errorMsg" label="Error" type="string" filterable="true"/>
    <column name="errorCount" label="Count" type="int" formatter="ddpFormatNumber"/>
  </columns>
  <query>
SELECT
    servers.hostname as server,
    enm_vm_critical_error_messages.message as errorMsg,
    enm_vm_critical_errors.errorCount as errorCount
FROM
    enm_vm_critical_errors,
    enm_vm_critical_error_messages,
    servers,
    sites
WHERE
    enm_vm_critical_errors.siteid = sites.id
    AND enm_vm_critical_errors.errorid = enm_vm_critical_error_messages.id
    AND enm_vm_critical_errors.serverid = servers.id
    AND servers.siteid = sites.id
    AND sites.name = @site
    AND date=@date
    AND enm_vm_critical_error_messages.message LIKE 'Maximum delivery attempts exceeded:%'
ORDER BY
    server
ASC
  </query>
 </rule>

 <rule>
  <name>jmsErrorsConsumersHanging</name>
  <desc>Queues and Topics (Possibly Consumers Hanging)</desc>
  <columns>
    <column name="server" label="Hostname" type="string" filterable="true">
      <link>
        <page>TOR/platform/jms.php</page>
        <param name="name" value="jms"/>
      </link>
    </column>
    <column name="errorMsg" label="Error" type="string"  filterable="true"/>
    <column name="errorCount" label="Count" type="int" formatter="ddpFormatNumber"/>
  </columns>
  <query>
SELECT
    servers.hostname as server,
    enm_vm_critical_error_messages.message as errorMsg,
    enm_vm_critical_errors.errorCount as errorCount
FROM
    enm_vm_critical_errors,
    enm_vm_critical_error_messages,
    servers,
    sites
WHERE
    enm_vm_critical_errors.siteid = sites.id
    AND enm_vm_critical_errors.errorid = enm_vm_critical_error_messages.id
    AND enm_vm_critical_errors.serverid = servers.id
    AND servers.siteid = sites.id
    AND sites.name = @site
    AND date=@date
    AND enm_vm_critical_error_messages.message LIKE 'There are possibly consumers hanging on a network operation with queue:%'
ORDER BY
    server
ASC
  </query>
 </rule>

 <rule>
   <name>jmsQueue</name>
   <desc>Queue (Message Count)</desc>
   <columns>
     <column name="queue" label="Queue" type="string" filterable="true">
       <link>
         <page>TOR/platform/jms.php</page>
         <param name="plot" value="queue"/>
         <param name="names" source="queue"/>
       </link>
     </column>
     <column name="messagesAdded" label="Total Messages Added" type="int" formatter="ddpFormatNumber"/>
     <column name="messageCount" label="Max Message Count" type="int" formatter="ddpFormatNumber"/>
   </columns>
   <query>
SELECT
 enm_jmsqueue_names.name AS queue,
 SUM(messagesAdded) AS messagesAdded,
 MAX(messageCount) AS messageCount
FROM enm_jmsqueue, enm_jmsqueue_names, sites
WHERE
 enm_jmsqueue.siteid = sites.id AND sites.name = @site AND
 enm_jmsqueue.queueid = enm_jmsqueue_names.id AND
 enm_jmsqueue.time BETWEEN @date AND @date + INTERVAL 1 DAY
GROUP BY enm_jmsqueue.queueid
ORDER BY messageCount
   </query>
  <threshold name='messageCount' type='less'/>
 </rule>

 <rule>
   <name>jmsQueueServicing</name>
   <desc>Queue (Servicing)</desc>
   <columns>
     <column name="seriesid" label="Queue" type="string" filterable="true">
       <link>
         <page>TOR/platform/jms.php</page>
         <param name="plot" value="queue"/>
         <param name="names" source="seriesid"/>
       </link>
     </column>
     <column name="samples" label="60 min samples" type="int" formatter="ddpFormatNumber"/>
     <column name="maxMessages" label="Messages" type="int" formatter="ddpFormatNumber"/>
   </columns>
   <query>
SELECT
  seriesid,
  COUNT(seriesid) AS 'samples',
  MAX(maxc) AS maxMessages,
  1 AS severityLevel
FROM
  ( SELECT
      FROM_UNIXTIME(FLOOR(UNIX_TIMESTAMP(enm_jmsqueue.time) / (60 * 60)) * (60 * 60)) AS 'slot',
      enm_jmsqueue_names.name AS seriesid,
      COUNT(messageCount) AS count,
      AVG(messageCount) AS avgc,
      MAX(messageCount) AS maxc,
      MIN(messageCount) AS minc
    FROM
      enm_jmsqueue_names,
      enm_jmsqueue,
      sites
    WHERE
      time BETWEEN @date AND @date + INTERVAL 1 DAY
      AND enm_jmsqueue.siteid = sites.id
      AND sites.name = @site
      AND enm_jmsqueue.queueid = enm_jmsqueue_names.id
      AND enm_jmsqueue_names.name &lt;&gt; 'DLQ'
      AND enm_jmsqueue_names.name &lt;&gt; 'ExpiryQueue'
      AND enm_jmsqueue_names.name &lt;&gt; 'CmExpiryQueue'
    GROUP BY slot , seriesid
    HAVING avgc = maxc AND avgc = minc AND count &gt; 10
  ) AS sub
GROUP BY seriesid
HAVING maxMessages &gt; 0
   </query>
   <threshold name='severityLevel' type='less'/>
 </rule>

 <rule>
   <name>jmsTopic</name>
   <desc>Topic (Message Count)</desc>
   <columns>
     <column name="topic" label="Topic" type="string" filterable="true">
       <link>
         <page>TOR/platform/jms.php</page>
         <param name="plot" value="topic"/>
         <param name="names" source="topic"/>
       </link>
     </column>
     <column name="messagesAdded" label="Total Messages Added" type="int" formatter="ddpFormatNumber"/>
     <column name="messageCount" label="Max Message Count" type="int" formatter="ddpFormatNumber"/>
   </columns>
   <query>
SELECT
 enm_jmstopic_names.name AS topic,
 SUM(messagesAdded) AS messagesAdded,
 MAX(messageCount) AS messageCount
FROM enm_jmstopic, enm_jmstopic_names, sites
WHERE
 enm_jmstopic.siteid = sites.id AND sites.name = @site AND
 enm_jmstopic.topicid = enm_jmstopic_names.id AND
 enm_jmstopic.time BETWEEN @date AND @date + INTERVAL 1 DAY
GROUP BY enm_jmstopic.topicid
ORDER BY messageCount
   </query>
  <threshold name='messageCount' type='less'/>
 </rule>

 <rule>
   <name>jmsTopicServicing</name>
   <desc>Topic (Servicing)</desc>
   <columns>
     <column name="seriesid" label="Topic" type="string" filterable="true">
       <link>
         <page>TOR/platform/jms.php</page>
         <param name="plot" value="topic"/>
         <param name="names" source="seriesid"/>
       </link>
     </column>
     <column name="samples" label="60 min samples" type="int" formatter="ddpFormatNumber"/>
     <column name="maxMessages" label="Messages" type="int" formatter="ddpFormatNumber"/>
   </columns>
   <query>
SELECT
  seriesid,
  COUNT(seriesid) AS 'samples',
  MAX(maxc) AS maxMessages,
  1 AS severityLevel
FROM
  ( SELECT
      FROM_UNIXTIME(FLOOR(UNIX_TIMESTAMP(enm_jmstopic.time) / (60 * 60)) * (60 * 60)) AS 'slot',
      enm_jmstopic_names.name AS seriesid,
      COUNT(messageCount) AS count,
      AVG(messageCount) AS avgc,
      MAX(messageCount) AS maxc,
      MIN(messageCount) AS minc
    FROM
      enm_jmstopic_names,
      enm_jmstopic,
      sites
    WHERE
      time BETWEEN @date AND @date + INTERVAL 1 DAY
      AND enm_jmstopic.siteid = sites.id
      AND sites.name = @site
      AND enm_jmstopic.topicid = enm_jmstopic_names.id
      AND enm_jmstopic_names.name &lt;&gt; 'DLQ'
      AND enm_jmstopic_names.name &lt;&gt; 'ExpiryQueue'
    GROUP BY slot , seriesid
    HAVING avgc = maxc AND avgc = minc AND count &gt; 10
  ) AS sub
GROUP BY seriesid
HAVING maxMessages &gt; 0
   </query>
   <threshold name='severityLevel' type='less'/>
 </rule>

<rule>
  <name>LastESTime</name>
  <desc>Elastic Search Log Collection</desc>
  <columns>
   <column name="timeSinceLastES" label="Time Since Last Collected ES" type="string">
     <link>
       <page>TOR/system/elasticsearch.php</page>
        <param name="logdirs" value="logs,enmlogs"/>
       <param name="anchor" value="#ElasticsearchLogsHelp_anchor"/>
     </link>
   </column>
   <column name="logEndTime" label="Last Log Time" type="string"/>
   <column name="serverEndTime" label="Last Server Time" type="string"/>
  </columns>
  <query>
SELECT
  MAX(log_end_time) AS logEndTime,
  TIME_TO_SEC(TIMEDIFF(MAX(@ddctime), MAX(log_end_time))) AS secondsSinceLastES,
  TIMEDIFF(@ddctime, MAX(log_end_time)) AS timeSinceLastES
FROM
 enm_elasticsearch_logs
WHERE
  enm_elasticsearch_logs.siteid = @siteid AND
  enm_elasticsearch_logs.date = @date
  </query>
  <threshold name='secondsSinceLastES' type='less'/>
 </rule>
<rule>
  <name>SOLRCoreFailures</name>
  <desc>SOLR Core Failures </desc>
  <conditional operation="and">
    <condition def="isCloudNative" type="equals" value="0"/>
  </conditional>
  <columns>
   <column name="core" label="Core" type="string">
     <link>
       <page>TOR/system/elasticsearch.php</page>
       <param name="logdirs" value="logs,enmlogs"/>
       <param name="host" value="solr"/>
     </link>
   </column>
   <column name="reason" label="Reason" type="string"/>
  </columns>
  <query>
SELECT
 '1' AS count,
 core,reason
FROM
 enm_solr_core_failures,
 sites
WHERE
 enm_solr_core_failures.siteid = sites.id
 AND sites.name = @site
 AND enm_solr_core_failures.time = @date
  </query>
  <threshold name='count' type='less'/>
</rule>

<rule>
  <name>BladeSysHealth</name>
  <desc>Server Sys Health </desc>
  <conditional operation="and">
    <condition def="hasIloLogs" type="more" value="0"/>
  </conditional>
  <columns>
   <column name="blade" label="Hostname" type="string" filterable="true"/>
   <column name="sys_health_status" label="Sys Health" type="string"/>
  </columns>
  <query>
SELECT
 blade, sys_health_status
FROM
 enm_ilo_logs
WHERE
 enm_ilo_logs.siteid = @siteid AND
 enm_ilo_logs.date = @date AND
 enm_ilo_logs.sys_health_status != 'OK'
  </query>
</rule>

<rule>
  <name>BladePowerSetting</name>
  <desc>Server Power Setting </desc>
  <conditional operation="and">
    <condition def="hasIloLogs" type="more" value="0"/>
  </conditional>
  <columns>
   <column name="blade" label="Blade" type="string"/>
   <column name="blade_power_setting" label="Power Setting" type="string"/>
  </columns>
  <query>
SELECT DISTINCT
 blade, blade_power_setting
FROM
 enm_ilo_logs
WHERE
 enm_ilo_logs.siteid = @siteid AND
 enm_ilo_logs.date = @date AND
 enm_ilo_logs.blade_power_setting != 'max'
  </query>
</rule>

<rule>
  <name>recentENMBackupBur</name>
  <desc>Recent ENM Backup (BUR)</desc>
  <columns>
    <column name="lastUnsuccessful" label="Last Unsuccessful Backup" type="string">
      <link>
        <page>TOR/system/backup_bur.php</page>
        <param name="dir" source="failDir"/>
        <param name="date" source="failDate"/>
        <param name="oss" value="tor"/>
      </link>
   </column>
   <column name="lastSuccessful" label="Last Successful Backup" type="string">
     <link>
       <page>TOR/system/backup_bur.php</page>
       <param name="dir" source="successDir"/>
       <param name="date" source="successDate"/>
       <param name="oss" value="tor"/>
      </link>
   </column>
   <column name="days" label="Days Since Last Successful Backup" type="string"/>
  </columns>
  <query>
SELECT
    c.time as lastSuccessful,
    d.time as lastUnsuccessful,
    IFNULL( DATEDIFF(@date, c.time), "No Successful Backup" ) as days,
    IFNULL( DATEDIFF(@date, c.time), 11 ) as count,
    IFNULL( DATE_FORMAT(d.time, '%Y-%m-%d'), 'NA' ) as failDate,
    IFNULL( DATE_FORMAT(d.time, '%d%m%y'), 'NA' ) as failDir,
    IFNULL( DATE_FORMAT(c.time, '%Y-%m-%d'), 'NA' ) as successDate,
    IFNULL( DATE_FORMAT(c.time, '%d%m%y'), 'NA' )as successDir
FROM
    ( SELECT
        IFNULL( (
            SELECT
                enm_bur_backup_stage_stats.start_time as time
            FROM
                enm_bur_backup_stage_stats,
                enm_bur_backup_stage_names,
                enm_bur_backup_stage_statuses,
                sites
            WHERE
                enm_bur_backup_stage_stats.siteid = sites.id
                AND enm_bur_backup_stage_stats.backup_stage_id = enm_bur_backup_stage_names.id
                AND enm_bur_backup_stage_stats.backup_stage_status_id = enm_bur_backup_stage_statuses.id
                AND sites.name = @site
                AND enm_bur_backup_stage_names.backup_stage_name = "BOSsystem_backupOperation"
                AND enm_bur_backup_stage_statuses.backup_stage_status_name = "Success"
                AND @date + INTERVAL 1 DAY >= enm_bur_backup_stage_stats.start_time
            ORDER BY enm_bur_backup_stage_stats.start_time DESC LIMIT 1
            ), 'No Successful Backup'
        ) as time
    ) c,
    ( SELECT
        IFNULL( (
            SELECT
                enm_bur_backup_stage_stats.start_time as time
            FROM
                enm_bur_backup_stage_stats,
                enm_bur_backup_stage_names,
                enm_bur_backup_stage_statuses,
                sites
            WHERE
                enm_bur_backup_stage_stats.siteid = sites.id
                AND enm_bur_backup_stage_stats.backup_stage_id = enm_bur_backup_stage_names.id
                AND enm_bur_backup_stage_stats.backup_stage_status_id = enm_bur_backup_stage_statuses.id
                AND sites.name = @site
                AND enm_bur_backup_stage_names.backup_stage_name = "BOSsystem_backupOperation"
                AND enm_bur_backup_stage_statuses.backup_stage_status_name != "Success"
                AND @date + INTERVAL 1 DAY >= enm_bur_backup_stage_stats.start_time
            ORDER BY enm_bur_backup_stage_stats.start_time DESC LIMIT 1
            ), 'No Unsuccessful Backup'
        ) as time
    ) d
  </query>
  <threshold name='count' type='less'/>
 </rule>

 <rule>
  <name>FMLatency</name>
  <desc>FM Latency</desc>
  <columns>
   <column name="Instance" label="Hostname" type="string" filterable="true">
    <link>
     <page>TOR/fm/fm_nbi_stats.php</page>
    </link>
   </column>
   <column name="max_latency" label="Max Latency" type="decimal" formatter="ddpFormatNumber"/>
   <column name="average_latency" label="Average Latency" type="decimal" formatter="ddpFormatNumber"/>
   <column name="total_count" label="Total Count" type="int" formatter="ddpFormatNumber"/>
   <column name="interval_count" label="Interval Count" type="int" formatter="ddpFormatNumber"/>
  </columns>
  <query>
SELECT
    Instance AS 'Instance',
    MAX(AVGAverageLatency) AS 'average_latency',
    MAX(MaxAverageLatency) AS 'max_latency',
    SUM(numtimes) AS 'total_count',
    COUNT(numtimes) AS 'interval_count'
FROM
    (SELECT
        servers.hostname AS 'Instance',
        TRUNCATE(AVG((alarmLatency / latencyAlarmCount)), 2) AS 'AVGAverageLatency',
        TRUNCATE(MAX((alarmLatency / latencyAlarmCount)), 2) AS 'MaxAverageLatency',
        COUNT(time) AS 'numtimes',
        FROM_UNIXTIME(FLOOR(UNIX_TIMESTAMP(enm_fmnbalarm_instr.time) / (@MINUTES * 60)) * (@MINUTES * 60)) AS 'IntervalSlot'
    FROM
        enm_fmnbalarm_instr, sites, servers
    WHERE
        time BETWEEN @date AND @date + INTERVAL 1 DAY AND
        enm_fmnbalarm_instr.siteid = sites.id AND
        enm_fmnbalarm_instr.serverid = servers.id AND
        sites.name = @site AND
        (alarmLatency / latencyAlarmCount) > @LATENCY_TIME
    GROUP BY IntervalSlot , Instance
    HAVING numtimes > @COUNT) AS a
GROUP BY Instance;
  </query>
  <parameter name='LATENCY_TIME'/>
  <parameter name='COUNT'/>
  <parameter name='MINUTES'/>
  <threshold name='interval_count' type='less'/>
 </rule>

 <rule>
  <name>FM_Overload_Protection</name>
  <desc>FM Overload Protection</desc>
  <columns>
    <column name="server" label="Hostname" type="string" filterable="true">
      <link>
        <page>TOR/fm/fm_alarmprocessing.php</page>
      </link>
    </column>
    <column name="overload" label="Overload" type="string" filterable="true"/>
  </columns>
  <query>
SELECT
    servers.hostname AS server,
    enm_fm_alarmoverload_protection.overload AS overload
FROM
    enm_fm_alarmoverload_protection,
    servers,
    sites
WHERE
    enm_fm_alarmoverload_protection.siteid = sites.id AND
    sites.name = @site AND
    enm_fm_alarmoverload_protection.time BETWEEN @date AND @date + INTERVAL 1 DAY AND
    enm_fm_alarmoverload_protection.serverid = servers.id AND
    enm_fm_alarmoverload_protection.overload != 'OFF'
  </query>
 </rule>

 <rule>
  <name>VersantFreeSpace</name>
  <desc>Versant % Free Space</desc>
  <conditional operation="and">
    <condition def="hasVersant" type="more" value="0"/>
  </conditional>
  <columns>
   <column name="DB" label="DB Name" type="string">
    <link>
     <page>csdb.php</page>
     <param name="vdbid" source="vdbid"/>
     <param name="vdbname" source="DB"/>
    </link>
   </column>
   <column name="percentagefree" label="% Free Extents" type="int"/>
  </columns>
  <query>
SELECT
    vdb_names.name AS 'DB',
    vdb_names.id AS vdbid,
    percentagefree
FROM
    vdb,
    vdb_names,
    vdb_volumes,
    sites
WHERE
    vdb.siteid = sites.id AND
    sites.name = @site AND
    vdb.date = @date AND
    vdb.vdbid = vdb_names.id AND
    vdb.vdbvolumeid = vdb_volumes.id AND
    vdb_volumes.volumename = 'TOTAL'
ORDER BY volumename ASC
  </query>
  <threshold name='percentagefree' type='greater'/>
 </rule>

 <rule>
  <name>stealHealth</name>
   <desc>VM % Steal (Sustained)</desc>
   <conditional operation="and">
     <condition def="isCloudNative" type="equals" value="0"/>
   </conditional>
   <columns>
    <column name="hostname" label="Hostname" type="string" filterable="true">
     <link>
      <page>server.php</page>
      <param name="server" source="hostname"/>
     </link>
    </column>
    <column name="intervalCount" label="Interval Count" type="int"/>
    <column name="maxSteal" label="MAX STEAL %" type="int"/>
    <column name="maxcpu" label="MAX CPU Load %" type="int"/>
    <column name="avgcpu" label="AVG CPU Load %" type="int"/>
   </columns>
  <query>
SELECT
    hostname,
    maxSteal,
    ROUND(MAX(maxcpu), 0) AS maxcpu,
    ROUND(MAX(avgcpu), 0) AS avgcpu,
    COUNT(numtimes) AS intervalCount
FROM
    (SELECT
         hostname,
         MAX(steal) AS maxSteal,
         MAX(user + sys) maxcpu,
         AVG(user + sys) avgcpu,
         COUNT(time) AS 'numtimes',
         FROM_UNIXTIME(FLOOR(UNIX_TIMESTAMP(hires_server_stat.time) / (@MINUTES * 60)) * (@MINUTES * 60)) AS 'IntervalSlot'
    FROM
        hires_server_stat FORCE INDEX(siteIdx), servers
    WHERE
    hires_server_stat.siteid = @siteid AND
    hires_server_stat.time BETWEEN @date AND @date + INTERVAL 1 DAY AND
    hires_server_stat.serverid = servers.id AND
    steal > @MAX_STEAL
    GROUP BY IntervalSlot, hostname
    HAVING numtimes > @COUNT_PER_INTERVAL) AS a
GROUP BY hostname;
  </query>
  <threshold name='intervalCount' type='less'/>
 </rule>

 <rule>
  <name>ddpLogLimitCheckPerServ</name>
  <desc>Elasticsearch Log Limits Per Service</desc>
  <columns>
    <column name="service" label="Service" type="string" filterable="true">
       <link>
        <page>TOR/system/elasticsearch.php</page>
        <param name="logdirs" value="logs,enmlogs"/>
       </link>
    </column>
   <column name="size" label="Log Size (MB)" type="string" formatter="ddpFormatNumber" sortFunction="forceSortAsNums"/>
  </columns>
  <query>
SELECT
    service_name AS service,
    SUM(log_size) DIV 1024 AS size
FROM
    (SELECT
        DISTINCT servers.hostname AS 'server',
        enm_servicegroup_names.name AS 'service_name',
        enm_logs.size AS 'log_size'
    FROM
        enm_logs,
        sites,
        servers,
        enm_servicegroup_instances,
        enm_servicegroup_names
    WHERE
        enm_logs.siteid = sites.id AND
        enm_logs.serverid = servers.id AND
        enm_logs.serverid = enm_servicegroup_instances.serverid AND
        enm_logs.date = enm_servicegroup_instances.date AND
        enm_logs.siteid = enm_servicegroup_instances.siteid AND
        enm_servicegroup_instances.serviceid = enm_servicegroup_names.id AND
        servers.type = 'ENM_VM' AND
        sites.name = @site AND
        enm_logs.date = @date
    ) AS a
GROUP BY service
  </query>
  <threshold name='size' type='less'/>
 </rule>

 <rule>
  <name>versantDeadTxHealth</name>
  <desc>Versant Dead Transactions</desc>
  <conditional operation="and">
    <condition def="hasVersant" type="more" value="0"/>
  </conditional>
  <columns>
    <column name="host" label="Hostname" type="string" filterable="true">
      <link>
        <page>TOR/system/elasticsearch.php</page>
        <param name="logdirs" value="logs,enmlogs"/>
        <param name="host" source="host"/>
      </link>
    </column>
   <column name="count" label="Count" type="int" formatter="ddpFormatNumber"/>
  </columns>
  <query>
SELECT
    servers.hostname as host,
    SUM(evhc.deadtxcount) as count
FROM
    enm_versant_health_checks_ldtx evhc, sites,servers
WHERE
    sites.name = @site
    AND sites.id = evhc.siteid
    AND evhc.serverid = servers.id
    AND evhc.time BETWEEN @date AND @date + INTERVAL 1 DAY
GROUP BY host
ORDER BY count DESC
  </query>
  <threshold name='count' type='less'/>
 </rule>

 <rule>
  <name>versantLongRunningTxHealth</name>
  <desc>Versant Long Running Transactions</desc>
  <conditional operation="and">
    <condition def="hasVersant" type="more" value="0"/>
  </conditional>
  <columns>
   <column name="host" label="Hostname" type="string" filterable="true">
      <link>
        <page>TOR/system/elasticsearch.php</page>
        <param name="logdirs" value="logs,enmlogs"/>
        <param name="host" source="host"/>
      </link>
   </column>
   <column name="count" label="Count" type="int" formatter="ddpFormatNumber"/>
  </columns>
  <query>
SELECT
    servers.hostname as host,
    SUM(evhc.longrunningtxcount) as count
FROM
    enm_versant_health_checks_ldtx evhc, sites,servers
WHERE
    sites.name = @site
    AND sites.id = evhc.siteid
    AND evhc.serverid = servers.id
    AND evhc.time BETWEEN @date AND @date + INTERVAL 1 DAY
GROUP BY host
ORDER BY count DESC
  </query>
  <threshold name='count' type='less'/>
 </rule>

 <rule>
   <name>QueueMessageVariance</name>
   <desc>Queue Message Variance</desc>
   <columns>
     <column name="seriesid" label="Queue" type="string" filterable="true">
       <link>
         <page>TOR/platform/jms.php</page>
         <param name="plot" value="queue"/>
         <param name="names" source="seriesid"/>
       </link>
     </column>

     <column name="avgAvg" label="Average of Averages" type="int" formatter="ddpFormatNumber"/>
     <column name="minAvg" label="Min of Averages" type="int" formatter="ddpFormatNumber"/>
     <column name="maxAvg" label="Max Of Averages" type="int" formatter="ddpFormatNumber"/>
     <column name="standard_dev" label="Standard Deviation of Averages" type="int" formatter="ddpFormatNumber"/>
   </columns>
   <query>
SELECT
    seriesid,
    ROUND( AVG(avgc), 2 ) AS avgAvg,
    ROUND( MIN(avgc), 2 ) AS minAvg,
    ROUND( MAX(avgc), 2 ) AS maxAvg,
    ROUND( STD(avgc), 2 ) AS standard_dev
FROM
    (SELECT
        FROM_UNIXTIME( FLOOR( UNIX_TIMESTAMP(enm_jmsqueue.time)/(60 * 60) ) * (60 * 60) ) AS 'slot',
        enm_jmsqueue_names.name AS seriesid,
        AVG(messageCount) AS avgc
    FROM
        enm_jmsqueue_names,
        enm_jmsqueue,
        sites
    WHERE
        time BETWEEN @date AND @date + INTERVAL 1 DAY AND
        enm_jmsqueue.siteid = sites.id AND
        sites.name = @site AND
        enm_jmsqueue.queueid = enm_jmsqueue_names.id
    GROUP BY slot, seriesid) AS a
GROUP BY seriesid
HAVING avgAvg > 0
   </query>
   <threshold name='standard_dev' type='less'/>
 </rule>

 <rule>
   <name>VersantDeadlocks</name>
   <desc>Versant Deadlocks</desc>
  <conditional operation="and">
    <condition def="hasVersant" type="more" value="0"/>
  </conditional>
   <columns>
    <column name="Server" label="Hostname" type="string" filterable="true">
     <link>
      <page>TOR/system/elasticsearch.php</page>
      <param name="logdirs" value="logs,enmlogs"/>
      <param name="host" source="Server"/>
     </link>
    </column>
    <column name="Count" label="Count" type="int"/>
   </columns>
   <query>
SELECT
 servers.hostname  AS Server,
 enm_vm_critical_errors.errorCount as Count
FROM
 enm_vm_critical_errors,
 sites,
 servers,
 enm_vm_critical_error_messages
WHERE
 sites.name = @site AND
 enm_vm_critical_errors.date = @date AND
 enm_vm_critical_errors.siteid = sites.id AND
 servers.id= enm_vm_critical_errors.serverid AND
 enm_vm_critical_errors.errorid = enm_vm_critical_error_messages.id AND
 enm_vm_critical_error_messages.message = 'SM_LOCK_DEADLOCK: Deadlock detected on attempt to lock';
   </query>
   <threshold name='Count' type='less'/>
 </rule>

<rule>
   <name>AMOSSessions</name>
   <desc>AMOS Sessions</desc>
   <columns>
    <column name="hostname" label="Hostname" type="string" filterable="true">
     <link>
      <page>TOR/cm/enm_amos.php</page>
      <param name="host" source="hostname"/>
     </link>
    </column>
    <column name="max" label="Max" type="int"/>
   </columns>
   <query>
SELECT
 servers.hostname  AS hostname,
 MAX( enm_amos_generalscripting_sessionsinstr.numCurrentSessions ) AS max
FROM
 enm_amos_generalscripting_sessionsinstr,
 sites,
 servers
WHERE
 sites.name = @site AND
 enm_amos_generalscripting_sessionsinstr.time BETWEEN @date AND @date + INTERVAL 1 DAY AND
 enm_amos_generalscripting_sessionsinstr.siteid = sites.id AND
 servers.id= enm_amos_generalscripting_sessionsinstr.serverid
GROUP BY hostname;
   </query>
   <threshold name='max' type='less'/>
 </rule>

 <rule>
  <name>COMECIMDeltaSync</name>
  <desc>COM/ECIM % Delta Syncs Per Hour</desc>
  <conditional operation="and">
    <condition def="hasComEcim" type="more" value="0"/>
  </conditional>
  <columns>
   <column name="hour" label="Hour" type="string">
     <link>
         <page>TOR/cm/ecim_med.php</page>
         <param name="servicegroup" value="comecimmscm"/>
     </link>
   </column>
   <column name="max_supervised" label="Max Supervised" type="int" formatter="ddpFormatNumber"/>
   <column name="total_delta_syncs" label="Total Delta Syncs" type="int" formatter="ddpFormatNumber"/>
   <column name="percent_delta_synced" label="% Delta Synced" type="float"/>
  </columns>
  <query>
SELECT
    b.hr AS 'hour',
    a.MaxSupervised AS 'max_supervised',
    b.sumExchangesCompleted AS 'total_delta_syncs',
    ROUND( (b.sumExchangesCompleted / a.MaxSupervised * 100), 2 ) AS 'percent_delta_synced'
FROM
    (SELECT
        DATE_FORMAT(time, '%H') AS hr,
        MAX(supervised) AS 'MaxSupervised'
    FROM
        enm_cm_supervision,
        sites
    WHERE
        time BETWEEN @date AND @date + INTERVAL 1 DAY AND
        enm_cm_supervision.siteid = sites.id AND
        enm_cm_supervision.type = 'COMECIM' AND
        sites.name = @site
    GROUP BY hr) a
        LEFT JOIN
    (SELECT
        DATE_FORMAT(time, '%H') AS hr,
        sum(deltaSyncSucc) AS 'sumExchangesCompleted'
    FROM
        enm_mscmce_instr,
        sites
    WHERE
        time BETWEEN @date AND @date + INTERVAL 1 DAY AND
        enm_mscmce_instr.siteid = sites.id AND
        sites.name = @site
    GROUP BY hr) b
        ON a.hr = b.hr
   </query>
   <threshold name='percent_delta_synced' type='less'/>
 </rule>

 <rule>
  <name>COMECIMFullHourSync</name>
  <desc>COM/ECIM % Full Syncs Per Hour</desc>
  <conditional operation="and">
    <condition def="hasComEcim" type="more" value="0"/>
  </conditional>
  <columns>
   <column name="hour" label="Hour" type="string">
      <link>
          <page>TOR/cm/ecim_med.php</page>
          <param name="servicegroup" value="comecimmscm"/>
      </link>
   </column>
   <column name="max_supervised" label="Max Supervised" type="int" formatter="ddpFormatNumber"/>
   <column name="total_full_syncs" label="Total Full Syncs" type="int" formatter="ddpFormatNumber"/>
   <column name="percent_full_synced" label="% Full Synced" type="float"/>
  </columns>
  <query>
SELECT
    b.hr AS 'hour',
    a.MaxSupervised AS 'max_supervised',
    b.sumExchangesCompleted AS 'total_full_syncs',
    ROUND( (b.sumExchangesCompleted / a.MaxSupervised * 100), 2 ) AS 'percent_full_synced'
FROM
    (SELECT
        DATE_FORMAT(time, '%H') AS hr,
        MAX(supervised) AS 'MaxSupervised'
    FROM
        enm_cm_supervision,
        sites
    WHERE
        time BETWEEN @date AND @date + INTERVAL 1 DAY AND
        enm_cm_supervision.siteid = sites.id AND
        enm_cm_supervision.type = 'COMECIM' AND
        sites.name = @site
    GROUP BY hr) a
        LEFT JOIN
    (SELECT
        DATE_FORMAT(time, '%H') AS hr,
        SUM(syncSucc) AS 'sumExchangesCompleted'
    FROM
        enm_mscmce_instr,
        sites
    WHERE
        time BETWEEN @date AND @date + INTERVAL 1 DAY AND
        enm_mscmce_instr.siteid = sites.id AND
        sites.name = @site
    GROUP BY hr) b
        ON a.hr = b.hr
   </query>
   <threshold name='percent_full_synced' type='less'/>
 </rule>

<rule>
  <name>COMECIMSubscriptionNSync</name>
  <desc>COM/ECIM Subscription/Sync</desc>
  <conditional operation="and">
    <condition def="hasComEcim" type="more" value="0"/>
  </conditional>
  <columns>
    <column name="hour" label="Hour" type="string" sortFunction="forceSortAsNums">
      <link>
          <page>TOR/cm/ecim_med.php</page>
          <param name="servicegroup" value="comecimmscm"/>
      </link>
   </column>
   <column name="comecim_subscribed" label="Subscribed" type="float"/>
   <column name="comecim_synced" label="Synced" type="float"/>
   <column name="comecim_synced_pct" label="% Synced" type="float"/>
  </columns>
  <query>
SELECT
    DATE_FORMAT(time, '%H') AS hour,
    subscribed AS comecim_subscribed,
    synced AS comecim_synced,
    ROUND((if(synced > supervised, supervised, synced)/supervised) * 100) AS comecim_synced_pct
FROM
    enm_cm_supervision,
    sites
WHERE
    time BETWEEN @date AND @date + INTERVAL 1 DAY
    AND enm_cm_supervision.siteid = sites.id
    AND enm_cm_supervision.type = 'COMECIM'
    AND sites.name = @site
    AND subscribed > 0
GROUP BY hour
  </query>
  <threshold name='comecim_synced_pct' type='greater'/>
 </rule>

 <rule>
  <name>ESIndexHealth</name>
  <desc>Elasticsearch Index Health</desc>
  <columns>
    <column name="index_name" label="Index" type="string">
      <link>
        <page>TOR/platform/elasticsearch_stats.php</page>
        <param name="index_name" source="index_name"/>
      </link>
    </column>
   <column name="health_status" label="Health Status" type="string"/>
  </columns>
  <query>
SELECT
    enm_es_index_names.name AS index_name,
    enm_es_indices_cmd_stats.health AS health_status,
    IF(enm_es_indices_cmd_stats.health = 'green', 0, 1) AS health_status_int
FROM
    enm_es_index_names,
    enm_es_indices_cmd_stats,
    sites
WHERE
    enm_es_indices_cmd_stats.index_id = enm_es_index_names.id AND
    enm_es_indices_cmd_stats.date = @date AND
    enm_es_indices_cmd_stats.siteid = sites.id AND
    sites.name = @site;
  </query>
  <threshold name='health_status_int' type='less'/>
 </rule>

 <rule>
   <name>jbossLoggingLevels</name>
   <desc>JBoss Logging Levels</desc>
   <conditional operation="and">
     <condition def="isCloudNative" type="equals" value="0"/>
   </conditional>
   <columns>
     <column name="time" label="Time" type="string" formatter="ddpFormatTime"/>
     <column name="server" label="Hostname" type="string" filterable="true"/>
     <column name="logger_category" label="Logger Category" type="string"/>
     <column name="logging_level" label="Logging Level" type="string"/>
   </columns>
   <query>
SELECT
 enm_jboss_logging_levels.time AS time,
 servers.hostname AS server,
 enm_logging_subsystem_names.name AS logger_category,
 enm_jboss_logging_levels.logging_level AS logging_level,
 TIME_TO_SEC( TIMEDIFF(@ddctime, enm_jboss_logging_levels.time) ) AS secsSinceLastDebugOrTrace
FROM
 enm_jboss_logging_levels,
 enm_logging_subsystem_names,
 servers
WHERE
 enm_jboss_logging_levels.siteid = @siteid AND
 enm_jboss_logging_levels.time BETWEEN @date AND @date + INTERVAL 1 DAY AND
 enm_jboss_logging_levels.subsystem_id = enm_logging_subsystem_names.id AND
 enm_jboss_logging_levels.serverid = servers.id
   </query>
 </rule>

 <rule>
   <name>OSSCPPNotifications</name>
   <desc>CPP Notifications</desc>
   <columns>
    <column name="numberNotificationsReceived" label="Number of notifications received" type="string" formatter="ddpFormatNumber">
      <link>
        <page>nead.php</page>
      </link>
    </column>
   </columns>
   <query>
SELECT
    SUM(n_recv) AS numberNotificationsReceived
FROM
    hires_nead_stat,
    sites
WHERE
    hires_nead_stat.siteid = sites.id AND
    sites.name = @site AND
    hires_nead_stat.time BETWEEN @date AND @date + INTERVAL 1 DAY;
   </query>
  <threshold name='numberNotificationsReceived' type='less'/>
 </rule>

 <rule>
   <name>radioNodeNotifications</name>
   <desc>RadioNode Notifications</desc>
   <columns>
    <column name="jmxNames" label="Nma Instance" type="string" sortFunction="forceSortAsNums">
      <link>
        <page>OSS/nma.php</page>
      </link>
    </column>
    <column name="notificationsReceived" label="Notifications received" type="float"/>
   </columns>
   <query>
SELECT
    jmx_names.name AS jmxNames,
    SUM(TotalNotificationsReceived) AS notificationsReceived
FROM
    jmx_names,
    nma_instr,
    sites
WHERE
    nma_instr.nameid = jmx_names.id AND
    nma_instr.siteid = sites.id AND sites.name = @site AND
    nma_instr.time BETWEEN @date AND @date + INTERVAL 1 DAY
GROUP BY jmx_names.name;
   </query>
  <threshold name='notificationsReceived' type='less'/>
 </rule>

 <rule>
  <name>LookupUsed</name>
  <desc>Lookup Table % Used</desc>
  <columns>
    <column name="table" label="Table Name" type="string" filterable="true">
      <link>
        <page>/DDP/lookupStrings.php</page>
        <param name="table" source="table"/>
      </link>
    </column>
    <column name="used" label="% Used" type="float" />
  </columns>
  <query>
SELECT
    a.name as 'table',
    ROUND(IFNULL(100 - ((((a.idlimit - a.maxid) / a.idlimit) * 100)),
                    0)) AS 'used'
FROM
    (SELECT
        CONCAT_WS('', IF(ddp_id_tables.datatype = 'tinyint', '255', NULL), IF(ddp_id_tables.datatype = 'smallint', '65535', NULL), IF(ddp_id_tables.datatype = 'mediumint', '16777215', NULL), IF(ddp_id_tables.datatype = 'int', '4294967295', NULL), IF(ddp_id_tables.datatype = 'bigint', '18446744073709551615', NULL)) AS idlimit,
            maxid,
            name
    FROM
        ddpadmin.ddp_id_tables, ddpadmin.ddp_table_names
    WHERE
        ddp_id_tables.tableid = ddp_table_names.id
            AND date = @date) AS a;
  </query>
 <threshold name="used" type="less"/>
</rule>

<rule>
  <name>LookupInc</name>
  <desc>Lookup Table 24HR % Increase</desc>
  <columns>
    <column name="name" label="Table Name" type="string" filterable="true">
      <link>
        <page>/DDP/lookupStrings.php</page>
        <param name="table" source="name"/>
        <param name="range" value="true"/>
      </link>
    </column>
    <column name="added" label="New Rows" type="float" />
    <column name="inc" label="%inc" type="float" />
  </columns>
  <query>
SELECT
    a.name as 'name',
    GREATEST( IFNULL( a.maxid - b.maxid, 0 ), 0) AS 'added',
    GREATEST( ROUND( IFNULL( ( ( (a.maxid - b.maxid) / b.maxid) * 100), 0) ), 0) AS 'inc'
FROM
    (SELECT
        maxid, name
    FROM
        ddpadmin.ddp_id_tables, ddpadmin.ddp_table_names
    WHERE
        ddp_id_tables.tableid = ddp_table_names.id
            AND date = @date) AS a,
    (SELECT
        maxid, name
    FROM
        ddpadmin.ddp_id_tables, ddpadmin.ddp_table_names
    WHERE
        ddp_id_tables.tableid = ddp_table_names.id AND
        date = @date - INTERVAL 1 DAY) AS b
WHERE
    a.name = b.name AND
    a.maxid > b.maxid
HAVING added >= 1000;
  </query>
  <threshold name="inc" type="less"/>
</rule>

<rule>
   <name>emc_alerts</name>
   <desc>EMC Alerts/Errors</desc>
   <columns>
     <column name="array" label="Array" type="string">
       <link>
         <page>emc_stor.php</page>
         <param name="sysid" source="sysid"/>
         <param name="anchor" value="#emc_alerts_anchor"/>
       </link>
     </column>
     <column name="count" label="Count" type="int" />
   </columns>
   <query>
SELECT
 emc_alerts.sysid AS sysid,
 emc_sys.name AS array,
 COUNT(*) AS count
FROM
 emc_alerts, emc_sys, emc_site
WHERE
 emc_site.filedate = @date AND
 emc_site.siteid = @siteid AND
 emc_site.sysid = emc_alerts.sysid AND
 emc_alerts.date = @date AND
 emc_alerts.sysid = emc_sys.id
  </query>
  <threshold name='count' type='less'/>
</rule>

<rule>
   <name>ProcDelayToday</name>
   <desc>Processing Delay (Today)</desc>
   <columns>
      <column name="site" label="Site Name" type="string">
      <link>
        <page>/DDP/makestats.php</page>
        <param name="action" value="showsite"/>
        <param name="selected" source="site"/>
      </link>
      </column>
      <column name="date" label="File Date" type="string" />
      <column name="proc_delay" label="Processing Delay(Seconds)" type="float" />
      <column name="proc_delay_Hrs" label="Processing Delay(HH:MM:SS)" type="string" />
   </columns>
   <query>
SELECT
    site COLLATE latin1_swedish_ci AS site,
    date COLLATE latin1_swedish_ci AS date,
    TIME_TO_SEC(TIMEDIFF(begin, uploaded)) COLLATE latin1_swedish_ci AS proc_delay,
    TIMEDIFF(begin, uploaded) COLLATE latin1_swedish_ci AS proc_delay_Hrs
FROM
    (SELECT
        site,
            date,
            uploaded,
            IFNULL(starttime, CURRENT_TIMESTAMP) AS begin
    FROM
        ddpadmin.file_processing) AS a
WHERE
    date = DATE(begin)
UNION
SELECT
    sites.name COLLATE latin1_swedish_ci AS site,
    filedate COLLATE latin1_swedish_ci AS date,
    TIME_TO_SEC(TIMEDIFF(beginproc, uploaded)) COLLATE latin1_swedish_ci AS proc_delay,
    TIMEDIFF(beginproc, uploaded) COLLATE latin1_swedish_ci AS proc_delay_Hrs
FROM
    sites,
    ddpadmin.ddp_makestats
WHERE
    sites.id = ddpadmin.ddp_makestats.siteid
        AND ddpadmin.ddp_makestats.beginproc BETWEEN CONCAT(@date, ' 04:30:00') AND CONCAT(@date, ' 23:59:59')
        AND filedate = DATE(beginproc);
  </query>
  <threshold name='proc_delay' type='less'/>
</rule>

<rule>
   <name>ProcDuration</name>
   <desc>Processing Duration</desc>
   <columns>
      <column name="site" label="Site Name" type="string">
      <link>
        <page>/DDP/makestats.php</page>
        <param name="action" value="showsite"/>
        <param name="selected" source="site"/>
      </link>
      </column>
      <column name="date" label="File Date" type="string" />
      <column name="proc_time" label="Processing Duration(Seconds)" type="float" />
      <column name="proc_time_Hrs" label="Processing Duration(HH:MM:SS)" type="string" />
   </columns>
   <query>
SELECT
    site COLLATE latin1_swedish_ci AS site,
    date COLLATE latin1_swedish_ci AS date,
    TIME_TO_SEC(TIMEDIFF(CURRENT_TIMESTAMP, starttime)) COLLATE latin1_swedish_ci AS proc_time,
    TIMEDIFF(CURRENT_TIMESTAMP, starttime) COLLATE latin1_swedish_ci AS proc_time_Hrs
FROM
    (SELECT
        site, date, uploaded, starttime
    FROM
        ddpadmin.file_processing) AS a
WHERE
    DATE(starttime) = @date
UNION SELECT
    sites.name COLLATE latin1_swedish_ci AS site,
    filedate COLLATE latin1_swedish_ci AS date,
    TIME_TO_SEC(TIMEDIFF(endproc, beginproc)) COLLATE latin1_swedish_ci AS proc_time,
    TIMEDIFF(endproc, beginproc) COLLATE latin1_swedish_ci AS proc_time_Hrs
FROM
    sites,
    ddpadmin.ddp_makestats
WHERE
    sites.id = ddpadmin.ddp_makestats.siteid
        AND DATE(ddpadmin.ddp_makestats.beginproc) = @date;
  </query>
  <threshold name='proc_time' type='less'/>
</rule>

 <rule>
   <name>DataUsed</name>
   <desc>/data Used</desc>
   <columns>
     <column name="Name" label="Name" type="string">
      <link>
        <page>storage.php</page>
        <param name="server" source="hostname"/>
        <param name="anchor" value="#volumes"/>
      </link>
     </column>
     <column name="% used" label="Used %" type="float" />
     <column name="Free" label="Free (MB)" type="float" />
   </columns>
   <query>
SELECT
    servers.hostname,
    volumes.name as 'Name',
    ((volume_stats.used / volume_stats.size) * 100) AS '% used',
    (volume_stats.size - volume_stats.used) AS 'Free'
FROM
    volume_stats,
    volumes,
    sites,
    servers
WHERE
    volume_stats.serverid = servers.id
        AND servers.siteid = sites.id
        AND volumes.id = volume_stats.volid
        AND sites.name = @site
        AND date = @date
        AND volumes.name = 'data';
  </query>
  <threshold name='% used' type='less'/>
</rule>

 <rule>
   <name>DataDbUsed</name>
   <desc>/data/db Used </desc>
   <columns>
     <column name="Name" label="Name" type="string">
      <link>
        <page>storage.php</page>
        <param name="server" source="hostname"/>
        <param name="anchor" value="#volumes"/>
      </link>
     </column>
     <column name="% used" label="Used %" type="float" />
     <column name="Free" label="Free (MB)" type="float" />
   </columns>
   <query>
SELECT
    servers.hostname,
    volumes.name as 'Name',
    ((volume_stats.used / volume_stats.size) * 100) AS '% used',
    (volume_stats.size - volume_stats.used) AS 'Free'
FROM
    volume_stats,
    volumes,
    sites,
    servers
WHERE
    volume_stats.serverid = servers.id
        AND servers.siteid = sites.id
        AND volumes.id = volume_stats.volid
        AND sites.name = @site
        AND date = @date
        AND volumes.name = 'data/db';
  </query>
  <threshold name='% used' type='less'/>
</rule>

 <rule>
   <name>NAS</name>
   <desc>NAS Free Space</desc>
   <columns>
     <column name="Name" label="Name" type="string" />
     <column name="FreeSpace" label="Free Space(MB)" type="float" />
   </columns>
   <query>
SELECT
    volumes.name as 'Name',
    (volume_stats.size - volume_stats.used) AS 'FreeSpace'
FROM
    volume_stats,
    volumes,
    sites,
    servers
WHERE
    volume_stats.serverid = servers.id
        AND servers.siteid = sites.id
        AND volumes.id = volume_stats.volid
        AND sites.name = @site
        AND date = @date
        AND volumes.name = 'archive_lv';
  </query>
  <threshold name='FreeSpace' type='greater'/>
</rule>

<rule>
   <name>RootUsed</name>
   <desc>/root Used</desc>
   <columns>
     <column name="Name" label="Name" type="string" />
     <column name="% used" label="Used %" type="float" />
     <column name="Free" label="Free (MB)" type="float" />
   </columns>
   <query>
SELECT
   servers.hostname,
   volumes.name as 'Name',
    ((volume_stats.used / volume_stats.size) * 100) AS '% used',
    (volume_stats.size - volume_stats.used) AS 'Free'
FROM
    volume_stats,
    volumes,
    sites,
    servers
WHERE
    volume_stats.serverid = servers.id
        AND servers.siteid = sites.id
        AND volumes.id = volume_stats.volid
        AND sites.name = @site
        AND date = @date
        AND volumes.name = 'root';
  </query>
  <threshold name='% used' type='less'/>
</rule>

<rule>
  <name>cpuHealthDDP</name>
  <desc>CPU Usage</desc>
  <columns>
    <column name="host" label="Hostname" type="string" filterable="true">
      <link>
        <page>server.php</page>
        <param name="server" source="host"/>
      </link>
    </column>
   <column name="avgcpu" label="AVG CPU Load %" type="int" formatter="ddpFormatNumber"/>
   <column name="maxiowait" label="MAX IO-Wait %" type="int" formatter="ddpFormatNumber"/>
   <column name="avgiowait" label="AVG IO-Wait %" type="int" formatter="ddpFormatNumber"/>
  </columns>
  <query>
SELECT
    cpu_usage_spikes.avg_cpu AS avgcpu,
    cpu_usage_spikes.max_iowait AS maxiowait,
    cpu_usage_spikes.avg_iowait AS avgiowait,
    cpu_usage_spikes.host_name AS host,
    IFNULL(service_groups.svcgrp_name, 'NA') AS svcgrp_name
FROM
    (SELECT
        ROUND(AVG(user + sys + IFNULL(guest, 0))) AS avg_cpu,
        MAX(iowait) AS max_iowait,
        ROUND(AVG(iowait)) AS avg_iowait,
        hostname AS host_name,
        serverid AS serverid
    FROM
        hires_server_stat FORCE INDEX(siteIdx), servers
    WHERE
        hires_server_stat.siteid = @siteid AND
        hires_server_stat.time BETWEEN @date AND @date + INTERVAL 1 DAY AND
        hires_server_stat.serverid = servers.id
    GROUP BY hires_server_stat.serverid) cpu_usage_spikes
        LEFT JOIN
    (SELECT
        enm_servicegroup_names.name AS svcgrp_name,
        enm_servicegroup_instances.serverid AS serverid
    FROM
        enm_servicegroup_instances
            JOIN
        enm_servicegroup_names ON enm_servicegroup_instances.serviceid = enm_servicegroup_names.id
            JOIN
        sites on enm_servicegroup_instances.siteid = sites.id
    WHERE
        enm_servicegroup_instances.date = @date AND
        sites.name = @site
    GROUP BY enm_servicegroup_instances.serverid) service_groups ON cpu_usage_spikes.serverid = service_groups.serverid
HAVING svcgrp_name != 'mspm'
  </query>
  <threshold name='avgcpu' type='less'/>
  <threshold name='avgiowait' type='less'/>
  <threshold name='maxiowait' type='less'/>
 </rule>

 <rule>
  <name>CMEventsNBIRateSolr</name>
  <desc>CM Events NBI Rate(Solr)</desc>
  <conditional operation="and">
    <condition def="isEshistory" type="equals" value="0"/>
  </conditional>
  <columns>
   <column name="hr" label="Hour" type="string" formatter="ddpFormatNumber">
    <link>
     <page>TOR/databases/solr.php</page>
     <param name="anchor" value="#solrHelpBubble_cm_events_nbi_anchor"/>
    </link>
   </column>
   <column name="minNumDocs" label="Min" type="float" />
   <column name="maxNumDocs" label="Max" type="float" />
  </columns>
  <query>
SELECT
  DATE_FORMAT(TIME,'%H') AS hr,
  min(enm_solr.searcherNumDocs) AS 'minNumDocs',
  max(enm_solr.searcherNumDocs) AS 'maxNumDocs',
  count(*) as 'count'
FROM
  enm_solr, enm_solr_core_names, sites
WHERE
  TIME BETWEEN @date AND @date + INTERVAL 1 DAY
  AND enm_solr.coreid = enm_solr_core_names.id
  AND enm_solr_core_names.name = 'cm_events_nbi'
  AND enm_solr.siteid = sites.id
  AND sites.name = @site
GROUP BY hr
HAVING
  minNumDocs = maxNumDocs
  AND count >= 30;
  </query>
  <threshold name='hr' type='greater'/>
 </rule>

  <rule>
    <name>CMEventsNBIRateEshistory</name>
    <desc>CM Events NBI Rate(Eshistory)</desc>
    <conditional operation="and">
      <condition def="isEshistory" type="more" value="0"/>
    </conditional>
    <columns>
      <column name="hr" label="Hour" type="string" formatter="ddpFormatNumber">
        <link>
          <page>TOR/platform/elasticsearch_stats.php</page>
          <param name="servicetype" value="eshistory"/>
          <param name="anchor" value="#helpBubble_cm_events_nbi_anchor"/>
        </link>
      </column>
      <column name="minNumDocs" label="Min" type="float" />
      <column name="maxNumDocs" label="Max" type="float" />
    </columns>
    <query>
SELECT
    DATE_FORMAT(TIME,'%H') AS hr,
    min(enm_eshistory_indices_stats.noOfDocs) AS 'minNumDocs',
    max(enm_eshistory_indices_stats.noOfDocs) AS 'maxNumDocs',
    count(*) as 'count'
FROM
    enm_eshistory_indices_stats, enm_es_index_names, sites
WHERE
    TIME BETWEEN @date AND @date + INTERVAL 1 DAY
    AND enm_eshistory_indices_stats.indexId = enm_es_index_names.id
    AND enm_es_index_names.name = 'cm_events_nbi'
    AND enm_eshistory_indices_stats.siteid = sites.id
    AND sites.name = @site
    GROUP BY hr
HAVING
    minNumDocs = maxNumDocs
    AND count >= 30;
    </query>
    <threshold name='hr' type='greater'/>
  </rule>

  <rule>
    <name>ESTpRej</name>
    <desc>ES Threadpools Rejected</desc>
    <columns>
      <column name="hostname" label="Hostname" type="string" filterable="true">
        <link>
          <page>TOR/platform/elasticsearch_stats.php</page>
          <param name="serverid" source="serverid"/>
          <param name="anchor" value="#threadPoolsHelp_anchor"/>
        </link>
      </column>
      <column name="name" label="Thread Pool" type="string" filterable="true"/>
      <column name="rejected" label="Rejected" type="int" formatter="ddpFormatNumber"/>
    </columns>
    <query>
SELECT
    elasticsearch_tp_names.name AS name,
    SUM(elasticsearch_tp.rejected) AS rejected,
    servers.hostname AS hostname,
    servers.id as serverid
FROM
    elasticsearch_tp,
    elasticsearch_tp_names,
    sites,
    servers
WHERE
    elasticsearch_tp.siteid = sites.id
    AND elasticsearch_tp.serverid = servers.id
    AND sites.name = @site
    AND elasticsearch_tp.time BETWEEN @date AND @date + INTERVAL 1 DAY
    AND elasticsearch_tp.tpid = elasticsearch_tp_names.id
GROUP BY hostname,elasticsearch_tp_names.name
HAVING SUM(elasticsearch_tp.rejected) > 0;
    </query>
  </rule>

 <rule>
    <name>NeoChkPntDur</name>
    <desc>Neo4J CheckPoint Duration</desc>
    <conditional operation="and">
      <condition def="hasneo4j" type="more" value="0"/>
    </conditional>
    <columns>
     <column name="intervalSlot" label="Hour" type="string"/>
     <column name="hostname" label="Hostname" type="string" filterable="true">
      <link>
       <page>TOR/databases/neo4j.php</page>
       <param name="anchor" value="#checkpoints_anchor"/>
      </link>
     </column>
     <column name="AvgDuration" label="AVG" type="int" />
     <column name="MAxDuration" label="MAX" type="int" />
    </columns>
    <query>
SELECT
    DATE_FORMAT(enm_neo4j_chkpnts.start, '%H') AS intervalSlot,
    servers.hostname AS hostname,
    avg(TIME_TO_SEC(TIMEDIFF(enm_neo4j_chkpnts.end, enm_neo4j_chkpnts.start))) AS AvgDuration,
    max(TIME_TO_SEC(TIMEDIFF(enm_neo4j_chkpnts.end, enm_neo4j_chkpnts.start))) AS MAxDuration
FROM
    enm_neo4j_chkpnts,
    sites,
    servers
WHERE
    enm_neo4j_chkpnts.start BETWEEN @date AND  @date + INTERVAL 1 DAY AND
    enm_neo4j_chkpnts.siteid = sites.id AND
    sites.name = @site AND
    enm_neo4j_chkpnts.serverid = servers.id
group by intervalSlot, hostname;
    </query>
    <threshold name='AvgDuration' type='less'/>
   </rule>

   <rule>
    <name>NeoNonLiveMos</name>
    <desc>Neo4J Non-Live MOs</desc>
    <conditional operation="and">
      <condition def="hasneo4j" type="more" value="0"/>
    </conditional>
    <columns>
     <column name="nonLivePercentageOfTotal" label="Non-Live %" type="string">
      <link>
       <page>TOR/databases/neo4j.php</page>
      </link>
     </column>
     <column name="total" label="Total" type="int" />
     <column name="totalnonlive" label="Non-Live" type="int" />
    </columns>
    <query>
SELECT
    SUM(enm_neo4j_mocounts.total) AS total,
    SUM(enm_neo4j_mocounts.nonlive) AS totalnonlive,
    ROUND( (SUM(enm_neo4j_mocounts.nonlive) / SUM(enm_neo4j_mocounts.total)) * 100, 2 ) AS nonLivePercentageOfTotal
FROM
    enm_neo4j_mocounts,
    sites
WHERE
    enm_neo4j_mocounts.siteid = sites.id
        AND sites.name = @site
        AND enm_neo4j_mocounts.date = @date
    </query>
    <threshold name='nonLivePercentageOfTotal' type='less'/>
   </rule>

   <rule>
     <name>enm_pmic_fls</name>
     <desc>PMIC File Collection in FLS</desc>
     <columns>
       <column name="filecollectionstart" label="File Collection Start" type="string"/>
       <column name="transfertype" label="Transfer Type" type="string" filterable="true"/>
       <column name="rop" label="ROP" type="string" filterable="true"/>
       <column name="netype" label="NE Type" type="string" filterable="true"/>
       <column name="datatype" label="Data Type" type="string" filterable="true"/>
       <column name="files" label="Files Collected" type="int"/>
       <column name="outside" label="Outside" type="int"/>
     </columns>
     <query>
SELECT
DATE_FORMAT(enm_pmic_rop_fls.fcs, '%H:%i') AS filecollectionstart,
 enm_pmic_rop_fls.transfertype AS transfertype,
 enm_pmic_rop_fls.rop AS rop,
 ne_types.name AS netype,
 enm_pmic_datatypes.name AS datatype,
 enm_pmic_rop_fls.files AS files,
 enm_pmic_rop_fls.outside AS outside
FROM
 enm_pmic_rop_fls, enm_pmic_datatypes, ne_types
WHERE
 enm_pmic_rop_fls.siteid = @siteid AND
 enm_pmic_rop_fls.fcs BETWEEN @date AND @date + INTERVAL 1 DAY AND
 enm_pmic_rop_fls.netypeid = ne_types.id AND
 enm_pmic_rop_fls.datatypeid = enm_pmic_datatypes.id
     </query>
     <threshold name='files' type='greater'/>
     <threshold name='outside' type='less'/>
   </rule>

   <rule>
     <name>emc_snapshot_age</name>
     <desc>EMC Snapshot Age</desc>
     <conditional operation="and">
       <condition def="isCloudNative" type="equals" value="0"/>
     </conditional>
     <columns>
       <column name="snapname" label="Snapshot Name" type="string"/>
       <column name="sourcelun" label="Source LUN" type="string" filterable="true"/>
       <column name="lastsynced" label="Last Synced" type="string"/>
       <column name="age" label="Age (Days)" type="int"/>
     </columns>
     <query>
SELECT
 emc_snapshot.name AS snapname,
 emc_snapshot.source_lun AS sourcelun,
 emc_snapshot.lastsynced AS lastsynced,
 DATEDIFF(@date,emc_snapshot.lastsynced) AS age
FROM
 emc_snapshot, emc_site
WHERE
 emc_snapshot.date = @date AND
 emc_snapshot.sysid = emc_site.sysid AND emc_site.siteid = @siteid AND emc_site.filedate = @date
     </query>
     <threshold name='age' type='less'/>
   </rule>

   <rule>
     <name>rejected_threads</name>
     <desc>Rejected Threads (Sustained)</desc>
     <columns>
       <column name="hostname" label="Hostname" type="string" filterable="true">
         <link>
           <page>TOR/jboss.php</page>
           <param name="servicegroup" source="service"/>
         </link>
       </column>
       <column name="service" label="Service" type="string" filterable="true"/>
       <column name="slots" label="Interval Counts" type="int"/>
       <column name="maxajp_executor_rejectedCountSum" label="max ajp_executor_rejectedCountSum" type="int"/>
       <column name="maxasync_rejectedCountSum" label="max async_rejectedCountSum" type="int"/>
       <column name="maxdefault_rejectedCountSum" label="max default_rejectedCountSum" type="int"/>
       <column name="maxworkmanager_long_rejectedCountSum" label="max workmanager_long_rejectedCountSum" type="int"/>
       <column name="maxhttp_executor_rejectedCountSum" label="max http_executor_rejectedCountSum" type="int"/>
     </columns>
     <query>
SELECT
    enm_servicegroup_names.name AS service,
    servers.hostname AS hostname,
    COUNT(intervalSlot) AS slots,
    MAX(ajp_executor_rejectedCountSum) AS maxajp_executor_rejectedCountSum,
    MAX(async_rejectedCountSum) AS maxasync_rejectedCountSum,
    MAX(default_rejectedCountSum) AS maxdefault_rejectedCountSum,
    MAX(workmanager_long_rejectedCountSum) AS maxworkmanager_long_rejectedCountSum,
    MAX(http_executor_rejectedCountSum) AS maxhttp_executor_rejectedCountSum
FROM
    enm_servicegroup_instances,
    enm_servicegroup_names,
    servers,
    (SELECT
        enm_jboss_threadpools.serverid AS serverid,
            FROM_UNIXTIME(FLOOR(UNIX_TIMESTAMP(enm_jboss_threadpools.time) / (15 * 60)) * (15 * 60)) AS intervalSlot,
            IFNULL(SUM(ajp_executor_rejectedCount), 0) AS ajp_executor_rejectedCountSum,
            IFNULL(SUM(async_rejectedCount), 0) AS async_rejectedCountSum,
            IFNULL(SUM(default_rejectedCount), 0) AS default_rejectedCountSum,
            IFNULL(SUM(workmanager_long_rejectedCount), 0) AS workmanager_long_rejectedCountSum,
            IFNULL(SUM(http_executor_rejectedCount), 0) AS http_executor_rejectedCountSum
    FROM
        enm_jboss_threadpools
    WHERE
        enm_jboss_threadpools.siteid = @siteid
            AND enm_jboss_threadpools.time BETWEEN @date AND @date + INTERVAL 1 DAY
            AND (ajp_executor_rejectedCount > 0
            OR async_rejectedCount > 0
            OR default_rejectedCount > 0
            OR workmanager_long_rejectedCount > 0
            OR http_executor_rejectedCount > 0)
    GROUP BY enm_jboss_threadpools.serverid , intervalSlot) AS a
WHERE
    enm_servicegroup_instances.date = @date
        AND enm_servicegroup_instances.siteid = @siteid
        AND enm_servicegroup_instances.serverid = a.serverid
        AND enm_servicegroup_names.id = enm_servicegroup_instances.serviceid
        AND servers.siteid = @siteid
        AND servers.id = a.serverid
GROUP BY service , hostname
HAVING slots > 0
    AND (maxajp_executor_rejectedCountSum > 0
    OR maxasync_rejectedCountSum > 0
    OR maxdefault_rejectedCountSum > 0
    OR maxworkmanager_long_rejectedCountSum > 0
    OR maxhttp_executor_rejectedCountSum > 0);
     </query>
     <threshold name='slots' type='less'/>
   </rule>

   <rule>
     <name>httpd_503</name>
     <desc>httpd Service Unavailable</desc>
     <columns>
       <column name="uri" label="URI" type="string" filterable="true">
         <link>
           <page>TOR/system/apache.php</page>
         </link>
       </column>
       <column name="count" label="503 Error Count" type="string"/>
     </columns>
     <query>
SELECT
    SUM(num) AS count,
    uri AS uri
FROM
    enm_apache_srv_unavail,
    enm_apache_uri
WHERE
    enm_apache_uri.id = enm_apache_srv_unavail.uriid
    AND siteid = @siteid
    AND date = @date
GROUP BY uri
     </query>
     <threshold name='count' type='less'/>
   </rule>

 <rule>
  <name>mdt_execution</name>
  <desc>MDT Execution</desc>
  <columns>
    <column name="starttime" label="Start Time" type="string">
      <link>
        <page>TOR/platform/modelling.php</page>
      </link>
    </column>
   <column name="totaltime" label="Total Time (mins)" type="int"/>
  </columns>
  <query>
SELECT
  enm_mdt_execution.time AS starttime,
  ROUND(enm_mdt_execution.t_total/60000,0) AS totaltime
FROM enm_mdt_execution
WHERE
 enm_mdt_execution.siteid = @siteid AND
 enm_mdt_execution.time BETWEEN @date AND @date + INTERVAL 1 DAY
  </query>
  <threshold name="totaltime" type='less'/>
 </rule>

 <rule>
  <name>RSS_Usage</name>
  <desc>Process Memory (RSS) Usage</desc>
  <columns>
    <column name="hostname" label="Hostname" type="string" filterable="true">
      <link>
        <page>topn.php</page>
        <param name="server" source="hostname"/>
      </link>
    </column>
   <column name="process_name" label="Process" type="string" filterable="true"/>
   <column name="max_rss" label="Max RSS(MB)" type="int"/>
  </columns>
  <query>
SELECT
    servers.hostname AS hostname,
    process_names.name AS process_name,
    MAX(proc_stats.rss) AS max_rss
FROM
    process_names, proc_stats FORCE INDEX(siteIdIdx), sites, servers
WHERE
    sites.id = proc_stats.siteid
        AND sites.name = @site
        AND servers.id = proc_stats.serverid
        AND proc_stats.procid = process_names.id
        AND proc_stats.time BETWEEN @date AND @date + INTERVAL 1 DAY
GROUP BY servers.hostname , process_names.name
  </query>
  <threshold name="max_rss" type='less'/>
 </rule>

 <rule>
  <name>Process_File_Desc_Usage</name>
  <desc>Process Usage(File Descriptors)</desc>
  <columns>
    <column name="hostname" label="Hostname" type="string" filterable="true">
      <link>
        <page>topn.php</page>
        <param name="server" source="hostname"/>
      </link>
    </column>
   <column name="process_name" label="Process" type="string" filterable="true"/>
   <column name="max_fd" label="Max File Descriptors" type="int"/>
  </columns>
  <query>
SELECT
    servers.hostname AS hostname,
    process_names.name AS process_name,
    MAX(proc_stats.fd) AS max_fd
FROM
    process_names,
    proc_stats FORCE INDEX(siteIdIdx),
    sites,
    servers
WHERE
    sites.id = proc_stats.siteid
        AND sites.name = @site
        AND servers.id = proc_stats.serverid
        AND proc_stats.procid = process_names.id
        AND proc_stats.time BETWEEN @date AND @date + INTERVAL 1 DAY
GROUP BY servers.hostname , process_names.name
  </query>
  <threshold name="max_fd" type='less'/>
 </rule>

 <rule>
  <name>Process_Thread_Usage</name>
  <desc>Process Usage(Threads)</desc>
  <columns>
    <column name="hostname" label="Hostname" type="string" filterable="true">
      <link>
        <page>topn.php</page>
        <param name="server" source="hostname"/>
      </link>
    </column>
   <column name="process_name" label="Process" type="string" filterable="true"/>
   <column name="max_thr" label="Max Threads" type="int"/>
  </columns>
  <query>
SELECT
    servers.hostname AS hostname,
    process_names.name AS process_name,
    MAX(proc_stats.thr) AS max_thr
FROM
    process_names,
    proc_stats FORCE INDEX(siteIdIdx),
    sites,
    servers
WHERE
    sites.id = proc_stats.siteid
        AND sites.name = @site
        AND servers.id = proc_stats.serverid
        AND proc_stats.procid = process_names.id
        AND proc_stats.time BETWEEN @date AND @date + INTERVAL 1 DAY
GROUP BY servers.hostname , process_names.name
  </query>
  <threshold name="max_thr" type='less'/>
 </rule>

 <rule>
  <name>VersantCheckpoints</name>
  <desc>Versant Checkpoints</desc>
  <conditional operation="and">
    <condition def="hasVersant" type="more" value="0"/>
  </conditional>
  <columns>
    <column name="intervalSlot" label="Hour" type="string">
      <link>
        <page>csdb.php</page>
        <param name="vdbname" value="dps_integration"/>
        <param name="vdbid" source="vdbid"/>
      </link>
    </column>
   <column name="count" label="Total Checkpoints" type="int"/>
  </columns>
  <query>
SELECT
    vdb_stats.vdbid AS vdbid,
    hour(vdb_stats.time) AS intervalSlot,
    IFNULL(SUM(vdb_stats.checkpts), 0) AS count
FROM
    vdb_stats, vdb_names
WHERE
    vdb_stats.siteid = @siteid
    AND vdb_stats.time BETWEEN @date AND @date + interval 1 DAY
    AND vdb_stats.vdbid = vdb_names.id
    AND vdb_names.name = 'dps_integration'
GROUP BY intervalSlot
ORDER BY intervalSlot
  </query>
  <threshold name="count" type='less'/>
 </rule>

 <rule>
  <name>sqlPlotParamSize</name>
  <desc>Sql_Plot_Param Size</desc>
  <columns>
    <column name="rowcount" label="Number of Rows" type="string">
      <link>
        <page>/DDP/lookupStrings.php</page>
        <param name="table" value="sql_plot_param"/>
      </link>
   </column>
   <column name="maxId" label="Maximum Id" type="int"/>
  </columns>
  <query>
SELECT
    COUNT(*) AS rowcount,
    MAX(id) AS maxId
FROM
    sql_plot_param;
  </query>
  <threshold name='rowcount' type='less'/>
  <threshold name='maxId' type='less'/>
 </rule>

 <rule>
    <name>NeoRaftEvents</name>
    <desc>Neo4J Raft Events</desc>
    <conditional operation="and">
      <condition def="hasneo4j" type="more" value="0"/>
    </conditional>
    <columns>
     <column name="type" label="Type" type="string" filterable="true">
      <link>
       <page>TOR/databases/neo4j.php</page>
      </link>
     </column>
     <column name="count" label="Count" type="int"/>
    </columns>
    <query>
SELECT
    enm_neo4j_raftevents.type AS type,
    COUNT(enm_neo4j_raftevents.type) AS count
FROM
    enm_neo4j_raftevents,
    sites
WHERE
    enm_neo4j_raftevents.siteid = sites.id
        AND sites.name = @site
        AND enm_neo4j_raftevents.time BETWEEN @date AND @date + INTERVAL 1 DAY
GROUP BY type;
    </query>
    <threshold name='count' type='less'/>
 </rule>

 <rule>
    <name>DPSPerformance</name>
    <desc>DPS FindPO Performance</desc>
    <columns>
     <column name="intervalSlot" label="Interval Slot" type="string"/>
     <column name="sg" label="Service Group" type="string" filterable="true">
      <link>
       <page>TOR/dps.php</page>
       <param name="selected" source="sg"/>
       <param name="clientsg" value="plot"/>
      </link>
     </column>
     <column name="hostname" label="Hostname" type="string" filterable="true"/>
     <column name="AvgFindPOTime" label="AvgFindPOTime" type="int"/>
     <column name="PoSamples" label="PO Samples" type="int"/>
    </columns>
    <query>
SELECT
    intervalSlot,
    name AS sg,
    servers.hostname AS hostname,
    ROUND(AvgFindPOTime, 2) AS AvgFindPOTime,
    PoSamples
FROM
    (SELECT
        TIME(FROM_UNIXTIME(FLOOR(UNIX_TIMESTAMP(time) / (15 * 60)) * (15 * 60))) AS intervalSlot,
            DATE_FORMAT(time, '%Y-%m-%d') AS dt,
            enm_dps_instr.serverid AS serverid,
            enm_dps_instr.siteid AS siteid,
            AVG(IFNULL(t_findPo / n_findPo, 0)) AS 'AvgFindPOTime',
            COUNT(t_findPo) AS 'PoSamples'
    FROM
        enm_dps_instr, sites
    WHERE
        time BETWEEN @date AND @date + INTERVAL 1 DAY
            AND enm_dps_instr.siteid = sites.id
            AND sites.name = @site
            AND n_findPo > 0
    GROUP BY intervalSlot , dt , serverid , siteid) AS a,
    enm_servicegroup_instances,
    enm_servicegroup_names,
    servers
WHERE
    a.siteid = enm_servicegroup_instances.siteid
        AND a.dt = enm_servicegroup_instances.date
        AND a.serverid = enm_servicegroup_instances.serverid
        AND enm_servicegroup_names.id = enm_servicegroup_instances.serviceid
        AND servers.id = a.serverid
        AND servers.siteid = a.siteid
        AND PoSamples>10
    </query>
    <threshold name='AvgFindPOTime' type='less'/>
  </rule>

  <rule>
    <name>FM_APS</name>
    <desc>FM APS failed to persist</desc>
    <columns>
        <column name="hostname" label="Hostname" type="string" filterable="true">
          <link>
            <page>/TOR/fm/fm_alarmprocessing.php</page>
          </link>
        </column>
        <column name="count" label="Count" type="int"/>
    </columns>
    <query>
SELECT
    servers.hostname AS hostname,
    sum(failedAlarmCountByAPSPerMinute) AS count
FROM
    fm_alarmprocessing_instr,
    sites,
    servers
WHERE
    time BETWEEN @date AND @date + INTERVAL 1 DAY
        AND fm_alarmprocessing_instr.siteid = sites.id
        AND sites.name = @site
        AND fm_alarmprocessing_instr.serverid = servers.id
GROUP BY hostname
    </query>
    <threshold name='count' type='less'/>
  </rule>

 <rule>
     <name>FM_Open_Alarms</name>
     <desc>FM Open Alarms</desc>
      <columns>
         <column name="alarms" label="Alarms">
             <link>
                 <page>/TOR/fm/fm_alarmprocessing.php</page>
             </link>
         </column>
     </columns>
     <query>
        SELECT
        max(num) AS alarms
        FROM enm_openalarms, sites
        WHERE
        time BETWEEN @date AND @date + INTERVAL 1 DAY
        AND enm_openalarms.siteid = sites.id
        AND sites.name = @site
    </query>
    <threshold name='alarms' type='less'/>
 </rule>

 <rule>
  <name>lvsStates</name>
  <desc>LVS</desc>
  <conditional operation="and">
    <condition def="isCloudNative" type="equals" value="0"/>
  </conditional>
  <columns>
   <column name="vmName" label="Hostname" type="string" filterable="true">
     <link>
       <page>TOR/platform/lvs.php</page>
       <param name="server" source="vmName"/>
     </link>
   </column>
   <column name="state" label="State" type="string" filterable="true"/>
   <column name="count" label="Count" type="int" formatter="ddpFormatNumber"/>
  </columns>
  <query>
SELECT
    servers.hostname  AS vmName,
    state,
    count
FROM
    enm_lvs_states,sites,servers
WHERE
    sites.name = @site AND enm_lvs_states.siteid = sites.id AND
    servers.id= enm_lvs_states.serverid AND
    enm_lvs_states.date = @date
  </query>
 </rule>

 <rule>
     <name>WorkmanagerShortQueueSize</name>
     <desc>Workmanager Queue</desc>
     <columns>
        <column name="intervalSlot" label="Interval Slot" type="string"/>
        <column name="servicegroup" label="Service Group" type="string" filterable="true">
          <link>
            <page>TOR/jboss.php</page>
            <param name="servicegroup" source="servicegroup"/>
          </link>
        </column>
        <column name="hostname" label="Hostname" type="string" filterable="true"/>
        <column name="averageQueueSize" label="Average queueSize" type="int" formatter="ddpFormatNumber"/>
    </columns>
    <query>
        SELECT
            TIME(FROM_UNIXTIME(FLOOR(UNIX_TIMESTAMP(time) / (60 * 60)) * (60 * 60))) AS intervalSlot,
            enm_servicegroup_names.name AS servicegroup,
            servers.hostname AS hostname,
            AVG(workmanager_short_queueSize) AS averageQueueSize
        FROM
            enm_jboss_threadpools,
            sites,
            servers,
            enm_servicegroup_instances,
            enm_servicegroup_names
        WHERE
            time BETWEEN  @date AND @date + INTERVAL 1 DAY AND
            enm_jboss_threadpools.siteid = sites.id AND
            sites.name = @site AND
            workmanager_short_queueSize > 0 AND
            enm_jboss_threadpools.serverid = servers.id AND
            enm_servicegroup_instances.siteid = enm_jboss_threadpools.siteid AND
            enm_servicegroup_instances.serverid = enm_jboss_threadpools.serverid AND
            enm_servicegroup_instances.serviceid = enm_servicegroup_names.id AND
            enm_servicegroup_instances.date = @date
        GROUP BY intervalSlot,  servicegroup, hostname
        ORDER BY intervalSlot,servicegroup
    </query>
    <threshold name='averageQueueSize' type='less'/>
 </rule>

<rule>
    <name>COMsyncPerNEType</name>
    <desc>COM Sync</desc>
    <columns>
      <column name="NodeType" label="Node Type" type="string" filterable="true"/>
      <column name="servicegroup" label="Service Group" type="string" filterable="true">
        <link>
          <page>TOR/cm/ecim_med.php</page>
          <param name="servicegroup" source="servicegroup"/>
        </link>
      </column>
      <column name="rate" label="Rate (MOs/sec)" type="int"/>
      <column name="maxDuration" label="Max Duration (Secs)" type="int"/>
      <column name="avgDuration" label="Average Duration (Secs)" type="int"/>
    </columns>
    <query>
        SELECT
            ne_types.name AS NodeType,
            enm_servicegroup_names.name AS servicegroup,
            ROUND(MIN((enm_ecim_syncs.mo_parsed / enm_ecim_syncs.duration) * 1000)) as 'rate',
            ROUND(MAX(enm_ecim_syncs.duration) / 1000) AS maxDuration,
            ROUND(AVG(enm_ecim_syncs.duration) / 1000) AS avgDuration
        FROM
            enm_ecim_syncs,
            enm_ne,
            enm_servicegroup_instances,
            ne_types,
            enm_servicegroup_names,
            sites
        WHERE
            enm_ecim_syncs.siteid = sites.id AND
            sites.name = @site AND
            enm_ecim_syncs.start BETWEEN @date AND @date + INTERVAL 1 DAY AND
            enm_ecim_syncs.neid = enm_ne.id AND
            ne_types.id = enm_ne.netypeid AND
            enm_servicegroup_instances.siteid = enm_ne.siteid AND
            enm_servicegroup_instances.serverid = enm_ecim_syncs.serverid AND
            enm_servicegroup_instances.serviceid = enm_servicegroup_names.id AND
            enm_servicegroup_instances.date = @date
        GROUP BY NodeType,servicegroup
        HAVING ROUND(MIN((enm_ecim_syncs.mo_parsed / enm_ecim_syncs.duration) * 1000)) > 0;
    </query>
    <threshold name="rate" type="greater"/>
    <threshold name="maxDuration" type="less"/>
    <threshold name="avgDuration" type="less"/>
 </rule>


 <rule>
     <name>NEO_TX_Delay</name>
     <desc>Neo TX ID Lagging</desc>
     <conditional operation="and">
         <condition def="hasneo4j" type="more" value="0"/>
     </conditional>
     <columns>
         <column name="intervalSlot" label="Interval Slot" type="string">
             <link>
                 <page>/TOR/databases/neo4j.php</page>
                 <param name="anchor" value="#transactions_anchor"/>
             </link>
         </column>
         <column name="metric" label="TX ID Lag %" type="int" formatter="ddpFormatNumber"/>
     </columns>
     <query>
         SELECT
             intervalSlot,
             ROUND((MAX(sample)-MIN(sample))/MAX(rnge)*100,0) AS metric,
             MAX(rnge) as maxrange
         FROM
             (
                SELECT
                    time(FROM_UNIXTIME(FLOOR(UNIX_TIMESTAMP(time) / (5 * 60)) * (5 * 60))) AS intervalSlot,
                    serverid,
                    MAX(transLastCommitted) AS sample,
                    MAX(transLastCommitted) - MIN(transLastCommitted) AS rnge,
                    COUNT(transLastCommitted) AS numsamples
                FROM
                    enm_neo4j_srv,
                    sites
                WHERE
                    time BETWEEN @date AND @date + INTERVAL 1 DAY AND
                    enm_neo4j_srv.siteid = sites.id AND
                    sites.name = @site
                GROUP BY intervalSlot, serverid
                HAVING numsamples = 5
             ) AS a
         GROUP BY intervalSlot
         HAVING maxrange > 1000
         ORDER BY intervalSlot
    </query>
    <threshold name='metric' type='less'/>
 </rule>

 <rule>
  <name>CMCLIRequests</name>
  <desc>CM CLI Requests</desc>
  <columns>
   <column name="totalReqs" label="Total Requests">
     <link>
       <page>/TOR/cm/cm_edit.php</page>
     </link>
   </column>
   <column name="scriptingReqs" label="Requests From Scripting"/>
   <column name="cliReqs" label="Requests From CLI"/>
  </columns>
  <query>
SELECT
    SUM(scriptEngineExecuteCommandmethodInvocations) AS totalReqs,
    SUM(SFDaddCommandmethodInvocations) AS scriptingReqs,
    (SUM(scriptEngineExecuteCommandmethodInvocations) - SUM(SFDaddCommandmethodInvocations)) AS cliReqs
FROM
    cmserv_clistatistics_instr,
    sites,
    servers
WHERE
    cmserv_clistatistics_instr.siteid = sites.id AND
    sites.name = @site AND
    cmserv_clistatistics_instr.time BETWEEN @date AND @date + INTERVAL 1 DAY AND
    cmserv_clistatistics_instr.serverid = servers.id
  </query>
    <threshold name='totalReqs' type='less'/>
    <threshold name='scriptingReqs' type='less'/>
    <threshold name='cliReqs' type='less'/>
 </rule>

 <rule>
     <name>Daily_Request_Totals_by_URI</name>
     <desc>Daily Request Totals by URI</desc>
     <columns>
         <column name="URI" label="URI" filterable="true">
             <link>
                 <page>TOR/system/apache.php</page>
                 <param name="anchor" value="#uri_table_anchor"/>
             </link>
         </column>
         <column name="provider" label="Provider" filterable="true"/>
         <column name="requests" label="Requests"/>
     </columns>
     <query>
SELECT
    enm_apache_uri.uri AS URI,
    enm_servicegroup_names.name AS provider,
    SUM(enm_apache_requests.requests) AS requests
FROM
    enm_apache_uri,
    sites,
    enm_apache_requests
LEFT OUTER JOIN
    enm_servicegroup_names ON enm_apache_requests.sgid = enm_servicegroup_names.id
WHERE
    enm_apache_requests.siteid = sites.id AND
    enm_apache_requests.date BETWEEN @date AND @date + INTERVAL 1 DAY AND
    sites.name = @site AND
    enm_apache_requests.uriid = enm_apache_uri.id
GROUP BY
    enm_apache_requests.uriid
ORDER BY
    requests DESC
    </query>
    <threshold name='requests' type='less'/>
 </rule>

 <rule>
     <name>Daily_Request_Totals_by_Application_UI</name>
     <desc>Daily Request Totals by Application UI</desc>
     <columns>
         <column name="app" label="Name" filterable="true">
             <link>
                 <page>TOR/system/apache.php</page>
                 <param name="anchor" value="#appui_anchor"/>
             </link>
         </column>
         <column name="requests" label="Requests"/>
     </columns>
     <query>
SELECT
    enm_apache_app_names.name AS app,
    SUM(enm_apache_requests.requests) AS requests
FROM
    enm_apache_requests,
    enm_apache_app_names,
    sites
WHERE
    enm_apache_requests.siteid = sites.id AND
    enm_apache_requests.date BETWEEN @date AND @date + INTERVAL 1 DAY AND
    sites.name = @site AND
    enm_apache_requests.appid = enm_apache_app_names.id AND
    enm_apache_app_names.name != 'NA'
GROUP BY
    enm_apache_requests.appid
    </query>
    <threshold name='requests' type='less'/>
 </rule>

 <rule>
     <name>Application_Opens</name>
     <desc>Application Opens</desc>
     <columns>
         <column name="application" label="Application" filterable="true">
             <link>
                 <page>TOR/system/apache.php</page>
                 <param name="anchor" value="#ui_apps_anchor"/>
             </link>
         </column>
         <column name="count" label="Count"/>
         <column name="distinct_users" label="Distinct Users"/>
     </columns>
     <query>
SELECT
    enm_ui_app_names.name AS application,
    enm_ui_app.num AS count,
    enm_ui_app.n_users AS distinct_users
FROM
    enm_ui_app,
    enm_ui_app_names,
    sites
WHERE
    enm_ui_app.siteid = sites.id AND
    enm_ui_app.date BETWEEN @date AND @date + INTERVAL 1 DAY AND
    sites.name = @site AND
    enm_ui_app.uiappid = enm_ui_app_names.id
    </query>
    <threshold name='count' type='less'/>
    <threshold name='distinct_users' type='less'/>
 </rule>

 <rule>
  <name>ASRL_Records</name>
  <desc>ASRL Records (Suspect/Completed)</desc>
  <columns>
   <column name="hr" label="Hour">
     <link>
       <page>/TOR/pm/asrl.php</page>
     </link>
   </column>
   <column name="lowerSuspect" label="Lower Suspect"/>
   <column name="upperSuspect" label="Upper Suspect"/>
   <column name="lowerComplete" label="Lower Complete"/>
   <column name="upperComplete" label="Upper Complete"/>
  </columns>
  <query>
SELECT
    DATE_FORMAT(time, '%H') AS hr,
    MIN(suspectRecords) AS lowerSuspect,
    MAX(suspectRecords) AS upperSuspect,
    MIN(completeRecords) AS lowerComplete,
    MAX(completeRecords) AS upperComplete
FROM
    enm_str_asrl,
    sites
WHERE
    time BETWEEN @date AND @date + INTERVAL 1 DAY AND
    enm_str_asrl.siteid = sites.id AND
    sites.name = @site
GROUP BY hr;
  </query>
    <threshold name='upperSuspect' type='less'/>
    <threshold name='lowerSuspect' type='greater'/>
    <threshold name='upperComplete' type='less'/>
    <threshold name='lowerComplete' type='greater'/>
 </rule>

 <rule>
  <name>ASRL_FWD_Session_Records_Difference</name>
  <desc>Session Records Difference</desc>
  <columns>
   <column name="hr" label="Hour">
     <link>
         <page>/TOR/pm/streaming_fwd.php</page>
         <param name="sg" value="asrlforwarderdef"/>
     </link>
   </column>
   <column name="Session Records Forwarded" label="Session Records Forwarded"/>
   <column name="Session Records Produced" label="Session Records Produced"/>
   <column name="% of records produced forwarded" label="% of records produced forwarded"/>
  </columns>
  <query>
SELECT
    A.hr AS hr,
    A.SRF AS 'Session Records Forwarded',
    B.SRP AS 'Session Records Produced',
    ROUND(( A.SRF / B.SRP ) * 100, 2) AS '% of records produced forwarded'
FROM
    (SELECT
        DATE_FORMAT(enm_str_fwd.time, '%H') AS hr,
            SUM(enm_str_fwd.eventsOut) AS 'SRF'
    FROM
        enm_str_fwd, sites
    WHERE
        enm_str_fwd.siteid = sites.id
            AND sites.name = @site
            AND enm_str_fwd.time BETWEEN @date AND @date + INTERVAL 1 DAY
    GROUP BY hr) AS A,
    (SELECT
        DATE_FORMAT(enm_str_asrl.time, '%H') AS hr,
            SUM(enm_str_asrl.suspectRecords) + SUM(enm_str_asrl.completeRecords) AS 'SRP'
    FROM
        enm_str_asrl, sites
    WHERE
        enm_str_asrl.siteid = sites.id
            AND sites.name = @site
            AND enm_str_asrl.time BETWEEN @date AND @date + INTERVAL 1 DAY
    GROUP BY hr) AS B
WHERE
    A.hr = B.hr;
  </query>
    <threshold name='% of records produced forwarded' type='greater'/>
 </rule>

 <rule>
  <name>nfsd_getattr</name>
  <desc>NFS GETATTR Requests</desc>
  <conditional operation="and">
    <condition def="isCloudNative" type="equals" value="0"/>
  </conditional>
  <columns>
    <column name="server" label="Hostname" type="string" filterable="true">
       <link>
         <page>nfsd_v3ops.php</page>
         <param name="serverid" source="serverid"/>
       </link>
    </column>
   <column name="requests" label="Requests"/>
  </columns>
  <query>
SELECT
 servers.hostname AS server,
 servers.id AS serverid,
 SUM(nfsd_v3ops.getattr) AS requests
FROM
 servers,
 nfsd_v3ops
WHERE
 nfsd_v3ops.siteid = @siteid AND
 nfsd_v3ops.time BETWEEN @date AND @date + INTERVAL 1 DAY AND
 nfsd_v3ops.serverid = servers.id
GROUP BY
 server
  </query>
  <threshold name='requests' type='less'/>
 </rule>

 <rule>
  <name>ddp_certs</name>
  <desc>DDP Certificates</desc>
  <columns>
    <column name="type" label="Type"/>
    <column name="notafter" label="Not After"/>
    <column name="daysremaining" label="Days Remaining"/>
  </columns>
  <query>
SELECT
 type,
 notafter,
 DATEDIFF(notafter, DATE(@ddctime)) AS daysremaining
FROM
 ddpadmin.ddp_certs
  </query>
  <threshold name="daysremaining" type="greater"/>
 </rule>

<rule>
  <name>longRunningQueries</name>
  <desc>Long Running Queries</desc>
  <columns>
    <column name="count" label="Count">
       <link>
         <page>common/filedisplay.php</page>
         <param name="pathtype" value="analysis"/>
         <param name="relpath" value="mysql/filtered_slow_queries.txt"/>
       </link>
    </column>
  </columns>
  <query>
SELECT
  count
FROM
  ddpadmin.slow_queries
WHERE
  date = @date;
  </query>
  <threshold name="count" type="less"/>
</rule>

<rule>
  <name>ddpFileWaitingCount</name>
  <desc>DDC Files Waiting To Process</desc>
  <columns>
    <column name="count" label="Count">
       <link>
         <page>../adminui/service.php</page>
       </link>
    </column>
  </columns>
  <query>
SELECT
    COUNT(*) as count
FROM
    ddpadmin.file_processing
WHERE
    starttime IS NULL;
  </query>
  <threshold name="count" type="less"/>
</rule>

<rule>
  <name>eoF5CpuLoad</name>
  <desc>F5 CPU Load (Spikes)</desc>
  <columns>
    <column name="cpu" label="CPU"/>
    <column name="avgusage" label="Average Usage(User + Sys)"/>
    <column name="maxusage" label="Max Usage(User + Sys)"/>
  </columns>
  <query>
SELECT
    f5_cpu_names.name as cpu,
    ROUND(AVG(user + system)) as avgusage,
    MAX(user + system) as maxusage
FROM
    f5_cpu_stats,
    sites,
    f5_cpu_names
WHERE
    f5_cpu_stats.siteid = sites.id
    AND f5_cpu_stats.cpuid = f5_cpu_names.id
    AND sites.name = @site
    AND f5_cpu_stats.time BETWEEN @date AND @date + INTERVAL 1 DAY
GROUP BY
    f5_cpu_names.name
  </query>
  <threshold name='avgusage' type='less'/>
  <threshold name='maxusage' type='less'/>
</rule>

<rule>
  <name>eoF5IOWait</name>
  <desc>F5 CPU IOWait (Spikes)</desc>
  <columns>
    <column name="cpu" label="CPU"/>
    <column name="avgiowait" label="Average IOWait"/>
    <column name="maxiowait" label="Max IOWait"/>
  </columns>
  <query>
SELECT
    f5_cpu_names.name as cpu,
    ROUND(AVG(iowait)) as avgiowait,
    MAX(iowait) as maxiowait
FROM
    f5_cpu_stats,
    sites,
    f5_cpu_names
WHERE
    f5_cpu_stats.siteid = sites.id
    AND f5_cpu_stats.cpuid = f5_cpu_names.id
    AND sites.name = @site
    AND f5_cpu_stats.time BETWEEN @date AND @date + INTERVAL 1 DAY
GROUP BY
    f5_cpu_names.name
  </query>
  <threshold name='avgiowait' type='less'/>
  <threshold name='maxiowait' type='less'/>
</rule>

<rule>
  <name>eoF5PoolStates</name>
  <desc>F5 Pool(s) state</desc>
  <columns>
    <column name="name" label="Pool Member">
      <link>
        <page>EO/f5_states.php</page>
      </link>
    </column>
    <column name="time" label="Time"/>
  </columns>
  <query>
    SELECT
        f5_pool_names.name as name,
        DATE_FORMAT(eo_f5_pool_states.time, '%H:%i:%s') as time
    FROM
        eo_f5_pool_states,
        f5_pool_names,
        sites
    WHERE
        eo_f5_pool_states.siteid = sites.id
        AND sites.name = @site
        AND f5_pool_names.id=eo_f5_pool_states.poolMemid
        AND f5_pool_names.name NOT LIKE 'activemq_pool_ecmfe%'
        AND time between @date  AND @date + INTERVAL 1 DAY
        AND state = 0
  </query>
</rule>

<rule>
  <name>eoF5NodeStates</name>
  <desc>F5 Node(s) state</desc>
  <columns>
    <column name="name" label="Node Member">
      <link>
        <page>EO/f5_states.php</page>
      </link>
    </column>
    <column name="time" label="Time"/>
  </columns>
  <query>
    SELECT
        f5_node_names.name as name,
        DATE_FORMAT(eo_f5_node_states.time, '%H:%i:%s') as time
    FROM
        eo_f5_node_states,
        f5_node_names,
        sites
    WHERE
        eo_f5_node_states.siteid = sites.id
        AND sites.name = @site
        AND f5_node_names.id=eo_f5_node_states.nodeMemid
        AND time between @date AND @date + INTERVAL 1 DAY
        AND state = 0
  </query>
</rule>

<rule>
  <name>eoF5VirtualStates</name>
  <desc>F5 Virtual Server(s) state</desc>
  <columns>
    <column name="name" label="Virtual Server">
      <link>
        <page>EO/f5_states.php</page>
      </link>
    </column>
    <column name="time" label="Time"/>
  </columns>
  <query>
    SELECT
        f5_virtual_names.name as name,
        DATE_FORMAT(eo_f5_virtual_states.time, '%H:%i:%s') as time
    FROM
        eo_f5_virtual_states,
        f5_virtual_names,
        sites
    WHERE
        eo_f5_virtual_states.siteid = sites.id
        AND sites.name = @site
        AND f5_virtual_names.id=eo_f5_virtual_states.virtServId
        AND time between @date and @date + INTERVAL 1 DAY
        AND state = 0
  </query>
</rule>

 <rule>
  <name>eoGcHealth</name>
  <desc>GC Time</desc>
  <columns>
    <column name="process_host" label="Hostname" type="string" filterable="true"/>
    <column name="jmx_name" label="Service Group" type="string" filterable="true">
      <link>
        <page>genjmx.php</page>
        <param name="server" source="process_host"/>
        <param name="name" source="jmx_name"/>
      </link>
    </column>
    <column name="gc_avg_msec" label="Average GC time (MilliSec)" type="int" formatter="ddpFormatNumber"/>
    <column name="gc_max_msec" label="Max GC time (MilliSec)" type="int" formatter="ddpFormatNumber"/>
    <column name="gc_ratio" label="Old/Young GC Ratio" type="float"/>
  </columns>
  <query>
SELECT
    servers.hostname as process_host,
    jmx_names.name as jmx_name,
    ROUND(AVG(gc_youngtime + gc_oldtime)) as gc_avg_msec,
    ROUND(MAX(gc_youngtime + gc_oldtime)) as gc_max_msec,
    IF(SUM(gc_oldtime)>@GC_RATIO_MIN_OLD,IF(SUM(gc_youngtime)>0,SUM(gc_oldtime)/SUM(gc_youngtime),9999),0) AS gc_ratio
FROM
    generic_jmx_stats FORCE INDEX(siteTimeIdx), jmx_names, sites,servers
WHERE
    sites.name = @site
    AND sites.id = generic_jmx_stats.siteid
    AND generic_jmx_stats.nameid = jmx_names.id
    AND gc_youngtime IS NOT NULL
    AND generic_jmx_stats.serverid = servers.id
    AND jmx_names.name != 'elasticsearch'
    AND generic_jmx_stats.time BETWEEN @date AND @date + INTERVAL 1 DAY
GROUP BY process_host,jmx_name
ORDER BY gc_avg_msec DESC
  </query>
  <parameter name="GC_RATIO_MIN_OLD"/>
  <threshold name='gc_avg_msec' type='less'/>
  <threshold name='gc_max_msec' type='less'/>
  <threshold name='gc_ratio' type='less'/>
 </rule>

  <rule>
    <name>eoCASCommitLog</name>
    <desc> EDA Cassandra Commit Log</desc>
    <columns>
      <column name="host" label="Hostname" type="string" filterable="true">
        <link>
          <page>EO/cassandra_stats.php</page>
        </link>
      </column>
      <column name="commitLogWaitingOnSegmentAllocation" label="Waiting On Segment Allocation"/>
    </columns>
    <query>
SELECT
    servers.hostname as host,
    ROUND(MAX(commitLogWaitingOnSegmentAllocation)/1000) as commitLogWaitingOnSegmentAllocation
FROM
    eo_cassandra_stats, sites, servers
WHERE
    sites.name = @site
    AND sites.id = eo_cassandra_stats.siteid
    AND eo_cassandra_stats.serverid = servers.id
    AND eo_cassandra_stats.time BETWEEN @date AND @date + INTERVAL 1 DAY
GROUP BY host
    </query>
    <threshold name='commitLogWaitingOnSegmentAllocation' type='less'/>
  </rule>

  <rule>
    <name>eoCASConnection</name>
    <desc>EDA Cassandra Connection</desc>
    <columns>
      <column name="host" label="Hostname" type="string" filterable="true">
        <link>
          <page>EO/cassandra_stats.php</page>
        </link>
      </column>
      <column name="hostTimeouts" label="Host Timeouts"/>
    </columns>
    <query>
SELECT
    servers.hostname as host,
    SUM(hostTimeouts) as hostTimeouts
FROM
    eo_cassandra_stats, sites, servers
WHERE
    sites.name = @site
    AND sites.id = eo_cassandra_stats.siteid
    AND eo_cassandra_stats.serverid = servers.id
    AND eo_cassandra_stats.time BETWEEN @date AND @date + INTERVAL 1 DAY
GROUP BY host
    </query>
    <threshold name='hostTimeouts' type='less'/>
  </rule>

  <rule>
    <name>eoCASDroppedMessage</name>
    <desc>EDA Cassandra Dropped Message</desc>
    <columns>
      <column name="host" label="Hostname" type="string" filterable="true">
        <link>
          <page>EO/cassandra_stats.php</page>
        </link>
      </column>
      <column name="droppedRead" label="Read"/>
      <column name="droppedMutations" label="Mutations"/>
    </columns>
    <query>
SELECT
    servers.hostname as host,
    SUM(droppedRead) as droppedRead,
    SUM(droppedMutations) as droppedMutations
FROM
    eo_cassandra_stats, sites, servers
WHERE
    sites.name = @site
    AND sites.id = eo_cassandra_stats.siteid
    AND eo_cassandra_stats.serverid = servers.id
    AND eo_cassandra_stats.time BETWEEN @date AND @date + INTERVAL 1 DAY
GROUP BY host
    </query>
    <threshold name='droppedRead' type='less'/>
    <threshold name='droppedMutations' type='less'/>
  </rule>

  <rule>
    <name>eoCASStorage</name>
    <desc>EDA Cassandra Storage</desc>
    <columns>
      <column name="host" label="Hostname" type="string" filterable="true">
        <link>
          <page>EO/cassandra_stats.php</page>
        </link>
      </column>
      <column name="storageExceptions" label="Exceptions"/>
      <column name="totalHints" label="Hints"/>
    </columns>
    <query>
SELECT
    servers.hostname as host,
    SUM(storageExceptions) as storageExceptions,
    SUM(totalHints) as totalHints
FROM
    eo_cassandra_stats, sites, servers
WHERE
    sites.name = @site
    AND sites.id = eo_cassandra_stats.siteid
    AND eo_cassandra_stats.serverid = servers.id
    AND eo_cassandra_stats.time BETWEEN @date AND @date + INTERVAL 1 DAY
GROUP BY host
    </query>
    <threshold name='storageExceptions' type='less'/>
    <threshold name='totalHints' type='less'/>
  </rule>

  <rule>
    <name>eoCASColumnFamily</name>
    <desc>EDA Cassandra Column Family</desc>
    <columns>
      <column name="host" label="Hostname" type="string" filterable="true">
        <link>
          <page>EO/cassandra_stats.php</page>
        </link>
      </column>
      <column name="pendingCompactions" label="Pending Compactions"/>
    </columns>
    <query>
SELECT
    servers.hostname as host,
    SUM(pendingCompactions) as pendingCompactions
FROM
    eo_cassandra_stats, sites, servers
WHERE
    sites.name = @site
    AND sites.id = eo_cassandra_stats.siteid
    AND eo_cassandra_stats.serverid = servers.id
    AND eo_cassandra_stats.time BETWEEN @date AND @date + INTERVAL 1 DAY
GROUP BY host
    </query>
    <threshold name='pendingCompactions' type='less'/>
  </rule>

  <rule>
    <name>eoCASThreadpools</name>
    <desc>EDA Cassandra Threadpools</desc>
    <columns>
      <column name="host" label="Hostname" type="string" filterable="true">
        <link>
          <page>EO/cassandra_stats.php</page>
        </link>
      </column>
      <column name="totalBlockedTasksCompactionExecutor" label="TotalBlockedTasks - CompactionExecutor"/>
      <column name="totalBlockedTasksMemtableFlushWriter" label="TotalBlockedTasks - MemtableFlushWriter"/>
      <column name="totalBlockedTasksMutationStage" label="TotalBlockedTasks - MutationStage"/>
      <column name="totalBlockedTasksReadStage" label="TotalBlockedTasks - ReadStage"/>
    </columns>
    <query>
SELECT
    servers.hostname as host,
    SUM(totalBlockedTasksCompactionExecutor) as totalBlockedTasksCompactionExecutor,
    SUM(totalBlockedTasksMemtableFlushWriter) as totalBlockedTasksMemtableFlushWriter,
    SUM(totalBlockedTasksMutationStage) as totalBlockedTasksMutationStage,
    SUM(totalBlockedTasksReadStage) as totalBlockedTasksReadStage
FROM
    eo_cassandra_stats, sites, servers
WHERE
    sites.name = @site
    AND sites.id = eo_cassandra_stats.siteid
    AND eo_cassandra_stats.serverid = servers.id
    AND eo_cassandra_stats.time BETWEEN @date AND @date + INTERVAL 1 DAY
GROUP BY host
    </query>
    <threshold name='totalBlockedTasksCompactionExecutor' type='less'/>
    <threshold name='totalBlockedTasksMemtableFlushWriter' type='less'/>
    <threshold name='totalBlockedTasksMutationStage' type='less'/>
    <threshold name='totalBlockedTasksReadStage' type='less'/>
  </rule>

  <rule>
    <name>eoClientRequests</name>
    <desc>EDA Cassandra Client Requests</desc>
    <columns>
      <column name="host" label="Hostname" type="string" filterable="true">
        <link>
          <page>EO/cassandra_stats.php</page>
        </link>
      </column>
      <column name="maxReadLatency" label="Max Read Latency"/>
      <column name="maxWriteLatency" label="Max Write Latency"/>
      <column name="readTimeouts" label="Read Timeouts"/>
      <column name="writeTimeouts" label="Write Timeouts"/>
      <column name="writeFailures" label="Write Failures"/>
      <column name="readFailures" label="Read Failures"/>
      <column name="readUnavailables" label="Read Unavailables"/>
      <column name="writeUnavailables" label="Write Unavailables"/>
    </columns>
    <query>
SELECT
    servers.hostname as host,
    SUM(readTimeouts) as readTimeouts,
    SUM(writeTimeouts) as writeTimeouts,
    SUM(writeFailures) as writeFailures,
    SUM(readFailures) as readFailures,
    SUM(readUnavailables) as readUnavailables,
    SUM(writeUnavailables) as writeUnavailables,
    MAX(readLatency) as maxReadLatency,
    MAX(writeLatency) as maxWriteLatency
FROM
    eo_cassandra_stats, sites, servers
WHERE
    sites.name = @site
    AND sites.id = eo_cassandra_stats.siteid
    AND eo_cassandra_stats.serverid = servers.id
    AND eo_cassandra_stats.time BETWEEN @date AND @date + INTERVAL 1 DAY
GROUP BY host
    </query>
    <threshold name='readTimeouts' type='less'/>
    <threshold name='writeTimeouts' type='less'/>
    <threshold name='writeFailures' type='less'/>
    <threshold name='readFailures' type='less'/>
    <threshold name='readUnavailables' type='less'/>
    <threshold name='writeUnavailables' type='less'/>
    <threshold name='maxReadLatency' type='less'/>
    <threshold name='maxWriteLatency' type='less'/>
  </rule>

  <rule>
    <name>eoCASClientRequests</name>
    <desc>EDA Cassandra CAS Client Requests</desc>
    <columns>
      <column name="host" label="Hostname" type="string" filterable="true">
        <link>
          <page>EO/cassandra_stats.php</page>
        </link>
      </column>
      <column name="casReadLatency" label="CAS Read Latency"/>
      <column name="casWriteLatency" label="CAS Write Latency"/>
      <column name="casReadTimeouts" label="CAS Read Timeouts"/>
      <column name="casWriteTimeouts" label="CAS Write Timeouts"/>
      <column name="casWriteFailures" label="CAS Write Failures"/>
      <column name="casReadFailures" label="CAS Read Failures"/>
      <column name="casReadUnavailables" label="CAS Read Unavailables"/>
      <column name="casWriteUnavailables" label="CAS Write Unavailables"/>
    </columns>
    <query>
SELECT
    servers.hostname as host,
    SUM(casReadTimeouts) as casReadTimeouts,
    SUM(casWriteTimeouts) as casWriteTimeouts,
    SUM(casWriteFailures) as casWriteFailures,
    SUM(casReadFailures) as casReadFailures,
    SUM(casReadUnavailables) as casReadUnavailables,
    SUM(casWriteUnavailables) as casWriteUnavailables,
    ROUND(MAX(casReadLatency)/1000) as casReadLatency,
    ROUND(MAX(casWriteLatency)/1000) as casWriteLatency
FROM
    eo_cassandra_stats, sites, servers
WHERE
    sites.name = @site
    AND sites.id = eo_cassandra_stats.siteid
    AND eo_cassandra_stats.serverid = servers.id
    AND eo_cassandra_stats.time BETWEEN @date AND @date + INTERVAL 1 DAY
GROUP BY host
    </query>
    <threshold name='casReadTimeouts' type='less'/>
    <threshold name='casWriteTimeouts' type='less'/>
    <threshold name='casWriteFailures' type='less'/>
    <threshold name='casReadFailures' type='less'/>
    <threshold name='casReadUnavailables' type='less'/>
    <threshold name='casWriteUnavailables' type='less'/>
    <threshold name='casReadLatency' type='less'/>
    <threshold name='casWriteLatency' type='less'/>
  </rule>

  <rule>
    <name>eoF5Memory</name>
    <desc>F5 Memory</desc>
    <columns>
      <column name="memory" label="% Used Memory">
        <link>
          <page>EO/f5.php</page>
        </link>
      </column>
      <column name="tmmMemory" label="% TMM Used Memory"/>
      <column name="swapUsed" label="% Used Swap"/>
    </columns>
    <query>
SELECT
    ROUND((AVG(memoryUsed)/AVG(memoryTotal))*100) AS memory,
    ROUND((AVG(tmmMemoryUsed)/AVG(tmmMemoryTotal))*100) AS tmmMemory,
    ROUND((AVG(swapUsed)/AVG(swapTotal))*100) AS swapUsed
FROM
    eo_f5_memory_stats, sites
WHERE
    eo_f5_memory_stats.siteid = sites.id
    AND sites.name =  @site
    AND eo_f5_memory_stats.time BETWEEN @date AND @date + INTERVAL 1 DAY
    </query>
    <threshold name='memory' type='less'/>
    <threshold name='tmmMemory' type='less'/>
    <threshold name='swapUsed' type='less'/>
  </rule>

  <rule>
    <name>eoPostgresBackends</name>
    <desc>Postgres Backends</desc>
    <columns>
      <column name="connections" label="Number of Connections">
        <link>
          <page>TOR/databases/postgres.php</page>
        </link>
      </column>
      <column name="time" label="Time"/>
    </columns>
    <query>
SELECT
    grp_bckends.number_of_connections AS connections,
    DATE_FORMAT(grp_bckends.TIME, '%H:%i:%s') AS time
FROM
    (SELECT
        sum(numbackends) AS number_of_connections,
        TIME
    FROM
        enm_postgres_stats_db, sites, enm_postgres_names
    WHERE
        enm_postgres_stats_db.siteid = sites.id
        AND enm_postgres_stats_db.dbid = enm_postgres_names.id
        AND sites.name = @site
        AND enm_postgres_stats_db.time BETWEEN @date AND @date + INTERVAL 1 DAY
        AND enm_postgres_names.name NOT IN ('postgres', 'template1')
    GROUP BY TIME) grp_bckends
ORDER BY TIME
    </query>
    <threshold name='connections' type='less'/>
  </rule>

  <rule>
    <name>eoPostgresTempFiles</name>
    <desc>Postgres Temporary Files</desc>
    <columns>
      <column name="name" label="Database Name">
        <link>
          <page>TOR/databases/postgres.php</page>
        </link>
      </column>
      <column name="temp_files" label="Total Temporary Files"/>
      <column name="temp_bytes" label="Total Size(Bytes)"/>
    </columns>
    <query>
SELECT
    enm_postgres_names.name AS name,
    SUM(temp_files) as temp_files,
    SUM(temp_bytes) as temp_bytes
FROM
    enm_postgres_stats_db, sites, enm_postgres_names
WHERE
    enm_postgres_stats_db.siteid = sites.id
    AND enm_postgres_stats_db.dbid = enm_postgres_names.id
    AND sites.name = @site
    AND enm_postgres_stats_db.time BETWEEN @date AND @date + INTERVAL 1 DAY
    AND enm_postgres_names.name NOT IN ('postgres', 'template1')
GROUP BY enm_postgres_names.name
    </query>
    <threshold name='temp_files' type='less'/>
  </rule>

  <rule>
    <name>eoPostgresRows</name>
    <desc>Postgres Rows returned/ Rows Fetched</desc>
    <columns>
      <column name="name" label="Database Name">
        <link>
          <page>TOR/databases/postgres.php</page>
        </link>
      </column>
      <column name="ratio_returned_vs_fetched" label="Returned vs Fetched Ratio"/>
      <column name="time" label="Time"/>
    </columns>
    <query>
SELECT
    enm_postgres_names.name AS name,
    ROUND(tup_returned/tup_fetched) AS ratio_returned_vs_fetched,
    DATE_FORMAT(time, '%H:%i:%s') AS time
FROM
    enm_postgres_stats_db, sites, enm_postgres_names
WHERE
    enm_postgres_stats_db.siteid = sites.id
    AND enm_postgres_stats_db.dbid = enm_postgres_names.id
    AND sites.name = @site
    AND enm_postgres_stats_db.time BETWEEN @date AND @date + INTERVAL 1 DAY
    AND enm_postgres_names.name NOT IN ('postgres', 'template1')
ORDER BY time
    </query>
    <threshold name='ratio_returned_vs_fetched' type='less'/>
  </rule>

  <rule>
    <name>eoPostgresCache</name>
    <desc>Postgres Cache hit rate</desc>
    <columns>
      <column name="name" label="Database Name">
        <link>
          <page>TOR/databases/postgres.php</page>
        </link>
      </column>
      <column name="cache_hit_ratio" label="Cache hit ratio"/>
      <column name="time" label="Time"/>
    </columns>
    <query>
SELECT
    enm_postgres_names.name AS name,
    ROUND(blks_hit*100/(blks_hit + blks_read)) AS cache_hit_ratio,
    DATE_FORMAT(time, '%H:%i:%s') AS time
FROM
    enm_postgres_stats_db, sites, enm_postgres_names
WHERE
    enm_postgres_stats_db.siteid = sites.id
    AND enm_postgres_stats_db.dbid = enm_postgres_names.id
    AND sites.name = @site
    AND enm_postgres_stats_db.time BETWEEN @date AND @date + INTERVAL 1 DAY
    AND enm_postgres_names.name NOT IN ('postgres', 'template1')
ORDER BY time
    </query>
    <threshold name='cache_hit_ratio' type='greater'/>
  </rule>

  <rule>
    <name>eoPostgresQueries</name>
    <desc>Postgres Queries Cancelled - conflicts</desc>
    <columns>
      <column name="name" label="Database Name">
        <link>
          <page>TOR/databases/postgres.php</page>
        </link>
      </column>
      <column name="conflicts" label="Total Conflicts"/>
    </columns>
    <query>
SELECT
    enm_postgres_names.name AS name,
    SUM(conflicts) as conflicts
FROM
    enm_postgres_stats_db, sites, enm_postgres_names
WHERE
    enm_postgres_stats_db.siteid = sites.id
    AND enm_postgres_stats_db.dbid = enm_postgres_names.id
    AND sites.name = @site
    AND enm_postgres_stats_db.time BETWEEN @date AND @date + INTERVAL 1 DAY
GROUP BY enm_postgres_names.name
    </query>
    <threshold name='conflicts' type='less'/>
  </rule>

  <rule>
    <name>eoPostgresDeadlocks</name>
    <desc>Postgres Deadlocks</desc>
    <columns>
      <column name="name" label="Database Name">
        <link>
          <page>TOR/databases/postgres.php</page>
        </link>
      </column>
      <column name="deadlocks" label="Total Deadlocks"/>
    </columns>
    <query>
SELECT
    enm_postgres_names.name AS name,
    SUM(deadlocks) as deadlocks
FROM
    enm_postgres_stats_db, sites, enm_postgres_names
WHERE
    enm_postgres_stats_db.siteid = sites.id
    AND enm_postgres_stats_db.dbid = enm_postgres_names.id
    AND sites.name = @site
    AND enm_postgres_stats_db.time BETWEEN @date AND @date + INTERVAL 1 DAY
GROUP BY enm_postgres_names.name
    </query>
    <threshold name='deadlocks' type='less'/>
  </rule>

  <rule>
    <name>jvmLoadBal</name>
    <desc>JVM Load Balance</desc>
    <columns>
      <column name="Group" label="Service Group"  filterable="true">
        <link>
          <page>TOR/jboss.php</page>
          <param name="servicegroup" source="Group"/>
        </link>
      </column>
      <column name="Hostname" label="Hostname"  filterable="true"/>
      <column name="Count" label="Count"/>
      <column name="Ratio" label="Ratio"/>
    </columns>
    <query>
SELECT
    enm_servicegroup_names.name AS 'Group',
    hostsvr AS 'Hostname',
    ROUND(MAX(a.avg_per_host / avg_per_group),2) AS 'Ratio',
    COUNT(a.hr) AS 'Count'
FROM
    (SELECT
        serviceid, COUNT(serverid) AS numservers
    FROM
        enm_servicegroup_instances, sites
    WHERE
        date = @date
            AND sites.name = @site
            AND enm_servicegroup_instances.siteid = sites.id
    GROUP BY serviceid
    HAVING numservers > 2) AS c,
    (SELECT
        DATE_FORMAT(time, '%H') AS hr,
            enm_servicegroup_instances.serviceid,
            servers.hostname AS hostsvr,
            COUNT(servers.hostname) AS numhosts,
            AVG(cputime) AS avg_per_host
    FROM
        enm_servicegroup_instances, servers, sites, generic_jmx_stats
    WHERE
        enm_servicegroup_instances.siteid = sites.id
            AND sites.name = @site
            AND enm_servicegroup_instances.date = @date
            AND enm_servicegroup_instances.serverid = servers.id
            AND generic_jmx_stats.serverid = servers.id
            AND generic_jmx_stats.time BETWEEN @date AND @date + INTERVAL 1 DAY
    GROUP BY 1 , 2 , 3) AS a,
    (SELECT
        DATE_FORMAT(time, '%H') AS hr,
            enm_servicegroup_instances.serviceid,
            AVG(cputime) AS avg_per_group
    FROM
        enm_servicegroup_instances, servers, sites, generic_jmx_stats
    WHERE
        enm_servicegroup_instances.siteid = sites.id
            AND sites.name = @site
            AND enm_servicegroup_instances.date = @date
            AND enm_servicegroup_instances.serverid = servers.id
            AND generic_jmx_stats.serverid = servers.id
            AND generic_jmx_stats.time BETWEEN @date AND @date + INTERVAL 1 DAY
    GROUP BY 1 , 2 HAVING avg_per_group > 20) AS b,
    enm_servicegroup_names
WHERE
    a.hr = b.hr AND a.avg_per_host > 0
        AND b.avg_per_group > 0
        AND c.serviceid = a.serviceid
        AND a.serviceid = b.serviceid
        AND enm_servicegroup_names.id = c.serviceid
GROUP BY 1 , 2
HAVING COUNT(a.hr) > 2
    </query>
    <threshold name='Ratio' type='less'/>
  </rule>

  <rule>
    <name>maintenance_duration</name>
    <desc>Maintenance Duration</desc>
    <columns>
      <column name="duration" label="Duration"/>
    </columns>
    <query>
SELECT
    duration
FROM
    ddpadmin.ddp_maintenance_times
WHERE
    ddp_maintenance_times.startTime BETWEEN @date AND @date + INTERVAL 1 DAY
    </query>
    <threshold name='duration' type='less'/>
  </rule>

  <rule>
    <name>eoF5Nics</name>
    <desc>F5 NICs</desc>
    <columns>
      <column name="name" label="F5 NIC" filterable="true">
        <link>
          <page>EO/f5.php</page>
        </link>
      </column>
      <column name="drops" label="Drops"/>
      <column name="errors" label="Errors"/>
    </columns>
    <query>
SELECT
    eo_f5_nic_stats.nicid AS nicid,
    eo_f5_nic_names.name AS name,
    MAX(eo_f5_nic_stats.dropsAll) AS drops,
    MAX(eo_f5_nic_stats.errorsAll) AS errors
FROM
    eo_f5_nic_stats, sites, eo_f5_nic_names
WHERE
    eo_f5_nic_stats.siteid = sites.id AND eo_f5_nic_stats.nicid = eo_f5_nic_names.id
    AND sites.name = @site
    AND eo_f5_nic_stats.time BETWEEN @date AND @date + INTERVAL 1 DAY
GROUP BY
    eo_f5_nic_names.name
    </query>
    <threshold name='drops' type='less'/>
    <threshold name='errors' type='less'/>
  </rule>

  <rule>
    <name>eoJbossConnPoolsBlockingFailures</name>
    <desc>Jboss Connection Pools - Total Blocking Failures</desc>
    <columns>
      <column name="name" label="Jboss Connection Pools" filterable="true">
        <link>
          <page>EO/jboss_connectionPool.php</page>
        </link>
      </column>
      <column name="blockingFailureCount" label="Total Blocking Failures"/>
    </columns>
    <query>
SELECT
    eo_jboss_connection_pool.poolid AS poolid,
    eo_jboss_connection_pool_names.name AS name,
    SUM(blockingFailureCount) as blockingFailureCount
FROM
    eo_jboss_connection_pool, sites, eo_jboss_connection_pool_names
WHERE
    eo_jboss_connection_pool.siteid = sites.id
    AND eo_jboss_connection_pool.poolid = eo_jboss_connection_pool_names.id
    AND sites.name = @site
    AND eo_jboss_connection_pool.time BETWEEN @date AND @date + INTERVAL 1 DAY
GROUP BY
    eo_jboss_connection_pool.poolid
    </query>
    <threshold name='blockingFailureCount' type='less'/>
  </rule>

  <rule>
    <name>eoJbossConnPoolsBlockingTime</name>
    <desc>Jboss Connection Pools - Total Blocking time</desc>
    <columns>
      <column name="name" label="Jboss Connection Pools" filterable="true">
        <link>
          <page>EO/jboss_connectionPool.php</page>
        </link>
      </column>
      <column name="totalBlockingTime" label="Total Blocking time"/>
    </columns>
    <query>
SELECT
    eo_jboss_connection_pool.poolid AS poolid,
    eo_jboss_connection_pool_names.name AS name,
    SUM(totalBlockingTime) as totalBlockingTime
FROM
    eo_jboss_connection_pool, sites, eo_jboss_connection_pool_names
WHERE
    eo_jboss_connection_pool.siteid = sites.id
    AND eo_jboss_connection_pool.poolid = eo_jboss_connection_pool_names.id
    AND sites.name = @site
    AND eo_jboss_connection_pool.time BETWEEN @date AND @date + INTERVAL 1 DAY
GROUP BY
    eo_jboss_connection_pool.poolid
    </query>
    <threshold name='totalBlockingTime' type='less'/>
  </rule>

  <rule>
    <name>eoJbossConnPoolswaitCount</name>
    <desc>Jboss Connection Pools - Total in-wait requests</desc>
    <columns>
      <column name="name" label="Jboss Connection Pools" filterable="true">
        <link>
          <page>EO/jboss_connectionPool.php</page>
        </link>
      </column>
      <column name="waitCount" label="Total in-wait requests"/>
    </columns>
    <query>
SELECT
    eo_jboss_connection_pool.poolid AS poolid,
    eo_jboss_connection_pool_names.name AS name,
    SUM(waitCount) as waitCount
FROM
    eo_jboss_connection_pool, sites, eo_jboss_connection_pool_names
WHERE
    eo_jboss_connection_pool.siteid = sites.id
    AND eo_jboss_connection_pool.poolid = eo_jboss_connection_pool_names.id
    AND sites.name = @site
    AND eo_jboss_connection_pool.time BETWEEN @date AND @date + INTERVAL 1 DAY
GROUP BY
    eo_jboss_connection_pool.poolid
    </query>
    <threshold name='waitCount' type='less'/>
  </rule>

  <rule>
    <name>f5Https4xx</name>
    <desc>F5 HTTPs 4xx</desc>
    <columns>
      <column name="4xxVsTotalRequests" label="% 4xx Responses vs Total Requests" filterable="true">
        <link>
          <page>EO/f5.php</page>
        </link>
      </column>
    </columns>
    <query>
SELECT
    ROUND(MAX((resp_4xxCnt/numberReqs)*100),2) AS 4xxVsTotalRequests
FROM
    eo_f5_http_stats, sites
WHERE
    eo_f5_http_stats.siteid = sites.id
    AND sites.name = @site
    AND eo_f5_http_stats.time BETWEEN @date AND @date + INTERVAL 1 DAY
    </query>
    <threshold name='4xxVsTotalRequests' type='less'/>
  </rule>

  <rule>
    <name>f5TcpConn</name>
    <desc>F5 TCP Connections</desc>
    <columns>
      <column name="FailsVsTotalConnects" label="% Failed vs Total Connections" filterable="true">
        <link>
          <page>EO/f5.php</page>
        </link>
      </column>
    </columns>
    <query>
SELECT
    ROUND(MAX((connFails/connects)*100),2) AS FailsVsTotalConnects
FROM
    eo_f5_tcp_stats, sites
WHERE
    eo_f5_tcp_stats.siteid = sites.id
    AND sites.name = @site
    AND eo_f5_tcp_stats.time BETWEEN @date AND @date + INTERVAL 1 DAY
    </query>
    <threshold name='FailsVsTotalConnects' type='less'/>
  </rule>

  <rule>
    <name>DDPFlagFileStatus</name>
    <desc>DDP Flag File Status</desc>
    <columns>
      <column name="hostname" label="Hostname" type="string" filterable="true"/>
      <column name="fileType" label="File Type" type="string"/>
      <column name="status" label="Status" type="string"/>
    </columns>
    <query>
SELECT
    hostname, fileType, status
FROM
    eniq_ddp_report, sites, servers
WHERE
    eniq_ddp_report.siteid = sites.id AND
    eniq_ddp_report.serverId = servers.id AND
    sites.name = @site AND
    eniq_ddp_report.date = @date AND
    eniq_ddp_report.status = 'Yes' AND
    eniq_ddp_report.fileType IN ('ddp_report', 'mpath', 'iq_header')
    </query>
  </rule>

  <rule>
    <name>enmDumps</name>
    <columns>
      <column name="filename" label="File Name" type="string" filterable="true">
        <link>
          <page>/common/filedisplay.php</page>
          <param name="pathtype" value="data"/>
          <param name="relpath" value="TOR/dumps"/>
        </link>
      </column>
      <column name="time" label="Time" type="string"/>
    </columns>
    <query>
SELECT
    dump.filename as filename,
    TIME_FORMAT(dump.time, '%H:%i') as time
FROM
    sites site,
    enm_dumploginfo dump
WHERE
    site.name = @site
    AND dump.siteid = site.id
    AND dump.type COLLATE latin1_general_cs = @TYPE
    AND dump.time BETWEEN @date AND @date + INTERVAL 1 DAY
    </query>
    <parameter name='TYPE'/>
  </rule>

  <rule>
    <name>containerLivenessReadiness</name>
    <desc>Container Liveness and Readiness</desc>
    <conditional operation="and">
      <condition def="isCloudNative" type="more" value="0"/>
    </conditional>
    <columns>
      <column name="container" label="Container Name" type="string" filterable="true">
        <link>
          <page>/k8s/ha.php</page>
        </link>
      </column>
      <column name="type" label="Event Type" type="string" filterable="true"/>
      <column name="count" label="Count" type="int"/>
    </columns>
    <query>
SELECT
    k8s_container_names.name AS container,
    k8s_ha.type AS type,
    COUNT(k8s_ha.type) AS count,
    ( IF( type = 'UnhealthyLiveness', 2, IF( type = 'UnhealthyReadiness', 1, 0 ) ) ) AS severityLevel
FROM
    k8s_ha,
    sites,
    k8s_container_names
WHERE
    k8s_ha.siteid = sites.id AND
    k8s_ha.containerid = k8s_container_names.id AND
    k8s_ha.time BETWEEN @date AND @date + INTERVAL 1 DAY AND
    sites.name = @site AND
    ( k8s_ha.type = 'UnhealthyReadiness' OR k8s_ha.type = 'UnhealthyLiveness' )
GROUP BY k8s_ha.type , k8s_container_names.name;
    </query>
    <threshold name='severityLevel' type='less'/>
  </rule>

  <rule>
    <name>fmSnmpHeartbeat</name>
    <desc>FM SNMP Heartbeat</desc>
    <columns>
      <column name="hr" label="Hour" type="string" sortFunction="forceSortAsNums"/>
      <column name="service" label="Service" type="string" filterable="true">
        <link>
          <page>/TOR/fm/fmsnmp_engine_stats.php</page>
          <param name="servicegroup" source="service"/>
        </link>
      </column>
      <column name="hostname" label="Hostname" type="string" filterable="true"/>
      <column name="maxSupNodes" label="Supervised Nodes" type="int" formatter="ddpFormatNumber"/>
      <column name="hbFailNodes" label="Heartbeat Failures" type="int" formatter="ddpFormatNumber"/>
      <column name="ratio" label="% Heartbeat" type="decimal" formatter="ddpFormatNumber"/>
    </columns>
    <query>
SELECT
    DATE_FORMAT(time, '%H') AS hr,
    enm_servicegroup_names.name AS service,
    servers.hostname AS hostname,
    MAX(numOfSupervisedNodes) AS maxSupNodes,
    MAX(numOfHBFailureNodes) AS hbFailNodes,
    ROUND(SUM(numOfHBFailureNodes) / SUM(numOfSupervisedNodes) * 100, 2) AS ratio
FROM
    enm_mssnmpfm_instr
    JOIN sites ON enm_mssnmpfm_instr.siteid = sites.id
    JOIN servers ON enm_mssnmpfm_instr.serverid = servers.id
    JOIN enm_servicegroup_instances ON enm_servicegroup_instances.siteid =  sites.id AND enm_servicegroup_instances.serverid=servers.id
    JOIN enm_servicegroup_names ON enm_servicegroup_instances.serviceid = enm_servicegroup_names.id
WHERE
    enm_mssnmpfm_instr.time BETWEEN @date AND @date + INTERVAL 1 DAY
        AND sites.name = @site
        AND numOfSupervisedNodes > @minNumNodes
        AND enm_servicegroup_instances.date = @date
GROUP BY hr,service,hostname;
    </query>
    <parameter name='minNumNodes'/>
    <threshold name='ratio' type='less'/>
  </rule>

  <rule>
    <name>fmCppHeartbeat</name>
    <desc>FM CPP Heartbeat</desc>
    <columns>
      <column name="hr" label="Hour" type="string" sortFunction="forceSortAsNums"/>
      <column name="service" label="Service" type="string" filterable="true">
        <link>
          <page>/TOR/fm/fm_cpp.php</page>
        </link>
      </column>
      <column name="hostname" label="Hostname" type="string" filterable="true"/>
      <column name="maxSupNodes" label="Supervised Nodes" type="int" formatter="ddpFormatNumber"/>
      <column name="hbFailNodes" label="Heartbeat Failures" type="int" formatter="ddpFormatNumber"/>
      <column name="ratio" label="% Heartbeat" type="decimal" formatter="ddpFormatNumber"/>
    </columns>
    <query>
SELECT
    DATE_FORMAT(time, '%H') AS hr,
    enm_servicegroup_names.name AS service,
    servers.hostname AS hostname,
    MAX(cpp_nodesUnderSupervision) AS maxSupNodes,
    MAX(cpp_nodesUnderHeartBeatFailure) AS hbFailNodes,
    ROUND(SUM(cpp_nodesUnderHeartBeatFailure)/ SUM(cpp_nodesUnderSupervision) * 100, 2) AS ratio
FROM
    enm_msfm_instr
    JOIN sites ON enm_msfm_instr.siteid = sites.id
    JOIN servers ON enm_msfm_instr.serverid = servers.id
    JOIN enm_servicegroup_instances ON enm_servicegroup_instances.siteid =  sites.id AND  enm_servicegroup_instances.serverid=servers.id
    JOIN enm_servicegroup_names ON enm_servicegroup_instances.serviceid = enm_servicegroup_names.id
WHERE
    enm_msfm_instr.time BETWEEN @date AND @date + INTERVAL 1 DAY
        AND sites.name = @site
        AND cpp_nodesUnderSupervision > @minNumNodes
        AND enm_servicegroup_instances.date = @date
GROUP BY hr,service,hostname;
    </query>
    <parameter name='minNumNodes'/>
    <threshold name='ratio' type='less'/>
  </rule>

  <rule>
    <name>DBCCStatus</name>
    <desc>DBCC Status</desc>
    <columns>
      <column name="lastDBCheckTime" label="Last DB Check Time" type="string"/>
      <column name="dbAllocationStatus" label="DB Allocation Status" type="string"/>
      <column name="verifyTablesStatus" label="Verify Tables Status" type="string"/>
      <column name="iqmsgCheckStatus" label="IQMSG Check Status" type="string"/>
    </columns>
    <query>
SELECT
    lastDBCheckTime, dbAllocationStatus, verifyTablesStatus, iqmsgCheckStatus
FROM
    eniq_dbcc_status, sites
WHERE
    eniq_dbcc_status.siteid = sites.id AND
    sites.name = @site AND
    eniq_dbcc_status.date = @date AND
    (eniq_dbcc_status.dbAllocationStatus = 'FAIL' OR
    eniq_dbcc_status.verifyTablesStatus = 'FAIL' OR
    eniq_dbcc_status.iqmsgCheckStatus = 'FAIL')
    </query>
  </rule>

  <rule>
    <name>repl_delay</name>
    <desc>Replication Delay</desc>
    <columns>
      <column name="replica" label="Replica">
        <link>
          <page>../adminui/service.php</page>
        </link>
      </column>
      <column name="delay" label="Delay"/>
    </columns>
    <query>
SELECT
    replica,
    delay
FROM
    ddpadmin.repl_delay
WHERE
    DATE(time) = @date
    </query>
    <threshold name='delay' type='less'/>
  </rule>

  <rule>
    <name>countersNotUsed</name>
    <desc>Unused Counters Status</desc>
    <columns>
      <column name="tableName" label="Table Name" type="string"/>
      <column name="counterName" label="Counter Name" type="string"/>
      <column name="accessedCount" label="Accessed Count" type="string"/>
      <column name="lastAccessedDate" label="Last Accessed Date" type="string"/>
      <column name="featureName" label="Feature Name" type="string"/>
    </columns>
    <query>
SELECT
    tableName,
    counterName,
    accessedCount,
    lastAccessedDate,
    featureName
FROM
    eniq_aggregated_accessed_counter_details,
    sites,
    eniq_aggregated_counter_table_name_id_mapping,
    eniq_aggregated_counter_name_id_mapping,
    eniq_aggregated_counter_feature_name_id_mapping
WHERE
    sites.name = @site
    AND eniq_aggregated_accessed_counter_details.date = @date
    AND eniq_aggregated_accessed_counter_details.siteid = sites.id
    AND eniq_aggregated_counter_table_name_id_mapping.id = eniq_aggregated_accessed_counter_details.tableNameId
    AND eniq_aggregated_counter_name_id_mapping.id = eniq_aggregated_accessed_counter_details.counterNameId
    AND eniq_aggregated_counter_feature_name_id_mapping.id = eniq_aggregated_accessed_counter_details.featureNameId
    AND eniq_aggregated_accessed_counter_details.lastAccessedDate NOT IN
    (SELECT
        DISTINCT lastAccessedDate
    FROM
        eniq_aggregated_accessed_counter_details,
        sites
    WHERE
        sites.name = @site AND
        eniq_aggregated_accessed_counter_details.date = @date AND
        eniq_aggregated_accessed_counter_details.siteid = sites.id AND
        eniq_aggregated_accessed_counter_details.lastAccessedDate > @date - INTERVAL 6 MONTH)
    </query>
  </rule>

  <rule>
    <name>jBossKilledEvents</name>
    <desc>JBOSS Shutdown</desc>
    <columns>
      <column name="time" label="Time" type="string" formatter="ddpFormatTime">
        <link>
          <page>common/modelledtarget.php</page>
          <param name="modeltype" value="table"/>
          <param name="modelname" value="TOR/platform/enm_jboss_shutdown"/>
        </link>
      </column>
      <column name="hostname" label="Hostname" type="string" filterable="true">
        <link>
          <page>server.php</page>
          <param name="server" source="hostname"/>
        </link>
      </column>
      <column name="result" label="Result" type="string"/>
      <column name="duration" label="Duration" type="int" formatter="ddpFormatNumber"/>
    </columns>
    <query>
SELECT
    time,
    servers.hostname AS hostname,
    result,
    duration
FROM
    enm_jboss_shutdown AS a,
    sites,
    servers
WHERE
    sites.id = a.siteid AND
    servers.id= a.serverid AND
    sites.name = @site AND
    a.result = 'KILLED' AND
    a.time BETWEEN @date AND @date + INTERVAL 1 DAY
    </query>
  </rule>

  <rule>
    <name>jGroupViewMismatches</name>
    <desc>JGroup View Mismatches</desc>
    <columns>
      <column name="cluster" label="Cluster" type="string" filterable="true">
        <link>
          <page>TOR/platform/jgroups.php</page>
        </link>
      </column>
      <column name="samples" label="Samples" type="int" formatter="ddpFormatNumber"/>
    </columns>
    <query>
SELECT
    enm_jgroup_clusternames.name AS cluster,
    COUNT(*) AS samples
FROM
    enm_jgroup_view_mismatch,
    sites,
    enm_jgroup_clusternames
WHERE
    enm_jgroup_view_mismatch.siteid = sites.id   AND
    enm_jgroup_view_mismatch.clusterid = enm_jgroup_clusternames.id AND
    sites.name = @site AND
    enm_jgroup_view_mismatch.time BETWEEN @date AND @date + INTERVAL 1 DAY
GROUP BY enm_jgroup_clusternames.name
    </query>
  </rule>

  <rule>
    <name>certificateExpiry</name>
    <desc>Certificate Expiry Status</desc>
    <columns>
      <column name="certificateName" label="Certificate Name" type="string"/>
      <column name="certificatePurpose" label="Purpose" type="string"/>
      <column name="expiryDate" label="Expiry Date" type="string"/>
      <column name="expiryInDays" label="Expiry in Days" type="string"/>
    </columns>
    <query>
SELECT
    DISTINCT certificateName,
    certificatePurpose,
    expiryDate,
    expiryInDays
FROM
    eniq_windows_certificate_details,
    sites,
    eniq_windows_certi_name_id_mapping,
    eniq_windows_certi_purpose_id_mapping,
    eniq_server_info
WHERE
    sites.name = @site
    AND eniq_windows_certificate_details.date = @date
    AND eniq_windows_certificate_details.siteid = sites.id
    AND eniq_windows_certi_name_id_mapping.id = eniq_windows_certificate_details.certificateNameId
    AND eniq_windows_certi_purpose_id_mapping.id = eniq_windows_certificate_details.certificatePurposeId
    AND eniq_server_info.serverid = eniq_windows_certificate_details.serverid
    AND eniq_server_info.type IN ('ENIQ','NetAnServer','BIS','OCS_WITHOUT_CITRIX','OCS_ADDS','OCS_CCS','OCS_VDA')
    AND eniq_windows_certificate_details.expiryInDays NOT IN
    (SELECT
        DISTINCT expiryInDays
    FROM
        eniq_windows_certificate_details,
        sites
    WHERE
        sites.name = @site AND
        eniq_windows_certificate_details.date = @date AND
        eniq_windows_certificate_details.siteid = sites.id AND
        eniq_windows_certificate_details.expiryInDays > 30 )
    </query>
  </rule>

  <rule>
    <name>NeoOrphanMOs</name>
    <desc>Neo4j Orphan MOs</desc>
    <conditional operation="and">
      <condition def="hasneo4j" type="more" value="0"/>
    </conditional>
    <columns>
      <column name="max_count" label="Count">
        <link>
          <page>TOR/databases/neo4j.php</page>
        </link>
      </column>
    </columns>
    <query>
SELECT
    MAX(count) AS max_count
FROM
    enm_neo4j_orphan_mo_count,
    sites
WHERE
    enm_neo4j_orphan_mo_count.siteid = sites.id
    AND sites.name = @site
    AND enm_neo4j_orphan_mo_count.time BETWEEN @date AND @date + INTERVAL 1 DAY
    AND enm_neo4j_orphan_mo_count.count > 0
    </query>
    <threshold name='max_count' type='less'/>
  </rule>

  <rule>
    <name>NeoAvgMsgTime</name>
    <desc>Neo4j Average Message Processing Time</desc>
    <conditional operation="and">
      <condition def="hasneo4j" type="more" value="0"/>
    </conditional>
    <columns>
      <column name="intervalSlot" label="Hour" type="string" formatter="ddpFormatTime"/>
      <column name="hostname" label="Hostname">
        <link>
          <page>TOR/databases/neo4j.php</page>
        </link>
      </column>
      <column name="boltAvgProcTimeperhour" label="Average Message Processing Time (msec)" type="int" formatter="ddpFormatNumber"/>
    </columns>
    <query>
SELECT
    hostname,
    intervalSlot,
    ROUND(AVG(boltAvgProcTime),2) AS boltAvgProcTimeperhour
FROM
    (
    SELECT
        servers.hostname AS hostname,
        DATE_FORMAT(FROM_UNIXTIME(FLOOR(UNIX_TIMESTAMP(time) / (60 * 60)) * (60 * 60)), '%H') AS intervalSlot,
        (boltProcTime / boltMsgDone) * 1000 AS 'boltAvgProcTime'
    FROM
        enm_neo4j_srv
    JOIN
        sites ON enm_neo4j_srv.siteid = sites.id
    JOIN
        servers ON enm_neo4j_srv.serverid = servers.id
    WHERE
        time BETWEEN @date AND @date + INTERVAL 1 DAY
        AND sites.name = @site) AS a
GROUP BY hostname , intervalSlot
HAVING boltAvgProcTimeperhour > 30;
    </query>
    <threshold name='boltAvgProcTimeperhour' type='less'/>
  </rule>

</ruleset>
